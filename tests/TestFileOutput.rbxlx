<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Workspace" referent="RBX10516B2DD80D411E820D250663A39C09">
		<Properties>
			<Ref name="CurrentCamera">RBX7DBEBAE119E8493A979D2284E39D8518</Ref>
			<double name="DistributedGameTime">0</double>
			<bool name="ExpSolverEnabled_Replicate">false</bool>
			<float name="FallenPartsDestroyHeight">-500</float>
			<bool name="FilteringEnabled">false</bool>
			<CoordinateFrame name="ModelInPrimary">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<string name="Name">Workspace</string>
			<bool name="PGSPhysicsSolverEnabled">false</bool>
			<Ref name="PrimaryPart">null</Ref>
			<bool name="StreamingEnabled">false</bool>
		</Properties>
		<Item class="Camera" referent="RBX7DBEBAE119E8493A979D2284E39D8518">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-3.68740082</X>
					<Y>9.30981636</Y>
					<Z>1.9455719</Z>
					<R00>0.98357141</R00>
					<R01>-0.0819535404</R01>
					<R02>0.16084443</R02>
					<R10>-0</R10>
					<R11>0.891008377</R11>
					<R12>0.453987032</R12>
					<R20>-0.180519566</R20>
					<R21>-0.446528673</R21>
					<R22>0.876370311</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-6.10006714</X>
					<Y>2.50001144</Y>
					<Z>-11.1999817</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Camera</string>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX7271B1AB341442308F45755B90B7E33C">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">199</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>-10</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Baseplate</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">0</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>512</X>
					<Y>20</Y>
					<Z>512</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Terrain" referent="RBX6D3C6EA99EB345258FB0CE0A666F73AD">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<BinaryString name="ClusterGridV3"></BinaryString>
				<float name="Elasticity">0.300000012</float>
				<float name="Friction">0.5</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Terrain</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="SmoothGrid">AQU=</BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2044</X>
					<Y>252</Y>
					<Z>2044</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Model" referent="RBX132118F844C24CAF83A93F83C48CF565">
			<Properties>
				<CoordinateFrame name="ModelInPrimary">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">Drooling Zombie</string>
				<Ref name="PrimaryPart">null</Ref>
			</Properties>
			<Item class="Part" referent="RBXC19E67F742AE4681A5A8886E88EC62A8">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">141</int>
					<CoordinateFrame name="CFrame">
						<X>-6.10006714</X>
						<Y>3.00001097</Y>
						<Z>-11.1999817</Z>
						<R00>4.49431016e-021</R00>
						<R01>-6.79974523e-022</R01>
						<R02>-1</R02>
						<R10>4.72251821e-022</R10>
						<R11>1</R11>
						<R12>-6.79974523e-022</R12>
						<R20>1</R20>
						<R21>-4.72251821e-022</R21>
						<R22>4.49431016e-021</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">528</token>
					<string name="Name">HumanoidRootPart</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Motor6D" referent="RBX9D4055678B394CF18E5988F407108DC0">
					<Properties>
						<CoordinateFrame name="C0">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>-1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>0</R11>
							<R12>1</R12>
							<R20>0</R20>
							<R21>1</R21>
							<R22>-0</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>-1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>0</R11>
							<R12>1</R12>
							<R20>0</R20>
							<R21>1</R21>
							<R22>-0</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<float name="MaxVelocity">0.100000001</float>
						<string name="Name">Root Hip</string>
						<Ref name="Part0">RBXC19E67F742AE4681A5A8886E88EC62A8</Ref>
						<Ref name="Part1">RBXF8CA58C093E94E758799A8C853605F4D</Ref>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBXF8CA58C093E94E758799A8C853605F4D">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">141</int>
					<CoordinateFrame name="CFrame">
						<X>-6.10006714</X>
						<Y>3.00001097</Y>
						<Z>-11.1999817</Z>
						<R00>4.49431016e-021</R00>
						<R01>-6.79974523e-022</R01>
						<R02>-1</R02>
						<R10>4.72251821e-022</R10>
						<R11>1</R11>
						<R12>-6.79974523e-022</R12>
						<R20>1</R20>
						<R21>-4.72251821e-022</R21>
						<R22>4.49431016e-021</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">528</token>
					<string name="Name">Torso</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Motor6D" referent="RBX301E79B1C57D4A3CA74B6C0AC015A6CC">
					<Properties>
						<CoordinateFrame name="C0">
							<X>-1</X>
							<Y>-1</Y>
							<Z>0</Z>
							<R00>-4.37113883e-008</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>0</R10>
							<R11>0.99999994</R11>
							<R12>0</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>-4.37113883e-008</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-0.5</X>
							<Y>1</Y>
							<Z>0</Z>
							<R00>-4.37113883e-008</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>0</R10>
							<R11>0.99999994</R11>
							<R12>0</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>-4.37113883e-008</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<float name="MaxVelocity">0.100000001</float>
						<string name="Name">Left Hip</string>
						<Ref name="Part0">RBXF8CA58C093E94E758799A8C853605F4D</Ref>
						<Ref name="Part1">RBX16FE538A5594420E93BF18495BE28F63</Ref>
					</Properties>
				</Item>
				<Item class="Motor6D" referent="RBXC40448E547DD465EABC8AE0158826119">
					<Properties>
						<CoordinateFrame name="C0">
							<X>1</X>
							<Y>-1</Y>
							<Z>0</Z>
							<R00>-4.37113883e-008</R00>
							<R01>0</R01>
							<R02>1</R02>
							<R10>-0</R10>
							<R11>0.99999994</R11>
							<R12>0</R12>
							<R20>-1</R20>
							<R21>0</R21>
							<R22>-4.37113883e-008</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>0.5</X>
							<Y>1</Y>
							<Z>0</Z>
							<R00>-4.37113883e-008</R00>
							<R01>0</R01>
							<R02>1</R02>
							<R10>0</R10>
							<R11>0.99999994</R11>
							<R12>0</R12>
							<R20>-1</R20>
							<R21>0</R21>
							<R22>-4.37113883e-008</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<float name="MaxVelocity">0.100000001</float>
						<string name="Name">Right Hip</string>
						<Ref name="Part0">RBXF8CA58C093E94E758799A8C853605F4D</Ref>
						<Ref name="Part1">RBX7DF2E7ED55C647B9A0DF6532805B4B72</Ref>
					</Properties>
				</Item>
				<Item class="Motor6D" referent="RBX4FB06EAFD12F44FCA8AD2D0AF8E8BE46">
					<Properties>
						<CoordinateFrame name="C0">
							<X>-1</X>
							<Y>0.5</Y>
							<Z>0</Z>
							<R00>-4.37113883e-008</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>0</R10>
							<R11>0.99999994</R11>
							<R12>0</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>-4.37113883e-008</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>0.5</X>
							<Y>0.5</Y>
							<Z>0</Z>
							<R00>-4.37113883e-008</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>0</R10>
							<R11>0.99999994</R11>
							<R12>0</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>-4.37113883e-008</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<float name="MaxVelocity">0.100000001</float>
						<string name="Name">Left Shoulder</string>
						<Ref name="Part0">RBXF8CA58C093E94E758799A8C853605F4D</Ref>
						<Ref name="Part1">RBX68095CA684174C07A04A0AFBEB04E06C</Ref>
					</Properties>
				</Item>
				<Item class="Motor6D" referent="RBX2CBB0CE37ADF43F39913E76FDE53D413">
					<Properties>
						<CoordinateFrame name="C0">
							<X>1</X>
							<Y>0.5</Y>
							<Z>0</Z>
							<R00>-4.37113883e-008</R00>
							<R01>0</R01>
							<R02>1</R02>
							<R10>-0</R10>
							<R11>0.99999994</R11>
							<R12>0</R12>
							<R20>-1</R20>
							<R21>0</R21>
							<R22>-4.37113883e-008</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>-0.5</X>
							<Y>0.5</Y>
							<Z>0</Z>
							<R00>-4.37113883e-008</R00>
							<R01>0</R01>
							<R02>1</R02>
							<R10>0</R10>
							<R11>0.99999994</R11>
							<R12>0</R12>
							<R20>-1</R20>
							<R21>0</R21>
							<R22>-4.37113883e-008</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<float name="MaxVelocity">0.100000001</float>
						<string name="Name">Right Shoulder</string>
						<Ref name="Part0">RBXF8CA58C093E94E758799A8C853605F4D</Ref>
						<Ref name="Part1">RBX150D56B4E4DA4EEEA8B91386DD1A77CC</Ref>
					</Properties>
				</Item>
				<Item class="Motor6D" referent="RBXF80F62120FA44FBEB2E00F32C428E415">
					<Properties>
						<CoordinateFrame name="C0">
							<X>0</X>
							<Y>1</Y>
							<Z>0</Z>
							<R00>-1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>0</R11>
							<R12>1</R12>
							<R20>0</R20>
							<R21>1</R21>
							<R22>-0</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>0</X>
							<Y>-0.5</Y>
							<Z>0</Z>
							<R00>-1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>0</R11>
							<R12>1</R12>
							<R20>0</R20>
							<R21>1</R21>
							<R22>-0</R22>
						</CoordinateFrame>
						<float name="DesiredAngle">0</float>
						<float name="MaxVelocity">0.100000001</float>
						<string name="Name">Neck</string>
						<Ref name="Part0">RBXF8CA58C093E94E758799A8C853605F4D</Ref>
						<Ref name="Part1">RBX077A96C6E577420F8321A986088C4C38</Ref>
					</Properties>
				</Item>
				<Item class="BodyForce" referent="RBX60A2CE2C04FE4A839E0043231E99D180">
					<Properties>
						<Vector3 name="Force">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<string name="Name">RepulsionForce</string>
						<Vector3 name="force">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX16FE538A5594420E93BF18495BE28F63">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">141</int>
					<CoordinateFrame name="CFrame">
						<X>-6.10006714</X>
						<Y>1.00001109</Y>
						<Z>-11.6999817</Z>
						<R00>4.49431016e-021</R00>
						<R01>-6.79974422e-022</R01>
						<R02>-1</R02>
						<R10>4.72251821e-022</R10>
						<R11>0.999999881</R11>
						<R12>-6.79974523e-022</R12>
						<R20>1</R20>
						<R21>-4.7225177e-022</R21>
						<R22>4.49431016e-021</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">528</token>
					<string name="Name">Left Leg</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX7DF2E7ED55C647B9A0DF6532805B4B72">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">141</int>
					<CoordinateFrame name="CFrame">
						<X>-6.10006714</X>
						<Y>1.00001109</Y>
						<Z>-10.6999817</Z>
						<R00>4.49431016e-021</R00>
						<R01>-6.79974422e-022</R01>
						<R02>-1</R02>
						<R10>4.72251821e-022</R10>
						<R11>0.999999881</R11>
						<R12>-6.79974523e-022</R12>
						<R20>1</R20>
						<R21>-4.7225177e-022</R21>
						<R22>4.49431016e-021</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">528</token>
					<string name="Name">Right Leg</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX68095CA684174C07A04A0AFBEB04E06C">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">141</int>
					<CoordinateFrame name="CFrame">
						<X>-6.10006714</X>
						<Y>3.00001097</Y>
						<Z>-12.6999817</Z>
						<R00>4.49431016e-021</R00>
						<R01>-6.79974422e-022</R01>
						<R02>-1</R02>
						<R10>4.72251821e-022</R10>
						<R11>0.999999881</R11>
						<R12>-6.79974523e-022</R12>
						<R20>1</R20>
						<R21>-4.7225177e-022</R21>
						<R22>4.49431016e-021</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">528</token>
					<string name="Name">Left Arm</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX150D56B4E4DA4EEEA8B91386DD1A77CC">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">141</int>
					<CoordinateFrame name="CFrame">
						<X>-6.10006714</X>
						<Y>3.00001097</Y>
						<Z>-9.69998169</Z>
						<R00>4.49431016e-021</R00>
						<R01>-6.79974422e-022</R01>
						<R02>-1</R02>
						<R10>4.72251821e-022</R10>
						<R11>0.999999881</R11>
						<R12>-6.79974523e-022</R12>
						<R20>1</R20>
						<R21>-4.7225177e-022</R21>
						<R22>4.49431016e-021</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">528</token>
					<string name="Name">Right Arm</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX077A96C6E577420F8321A986088C4C38">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">1021</int>
					<CoordinateFrame name="CFrame">
						<X>-6.10006714</X>
						<Y>4.50001097</Y>
						<Z>-11.1999817</Z>
						<R00>4.49431016e-021</R00>
						<R01>-6.79974523e-022</R01>
						<R02>-1</R02>
						<R10>4.72251821e-022</R10>
						<R11>1</R11>
						<R12>-6.79974523e-022</R12>
						<R20>1</R20>
						<R21>-4.72251821e-022</R21>
						<R22>4.49431016e-021</R22>
					</CoordinateFrame>
					<bool name="CanCollide">true</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">528</token>
					<string name="Name">Head</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="Decal" referent="RBX8690869333634B95B0A5CBF799BEB40C">
					<Properties>
						<token name="Face">5</token>
						<string name="Name">Face</string>
						<Content name="Texture"><url>http://www.roblox.com/asset/?id=7074882</url></Content>
						<float name="Transparency">0</float>
					</Properties>
				</Item>
				<Item class="SpecialMesh" referent="RBX54596CBB8683441E9E7274B3956F27E9">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><null></null></Content>
						<token name="MeshType">0</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>1.25</X>
							<Y>1.25</Y>
							<Z>1.25</Z>
						</Vector3>
						<Content name="TextureId"><null></null></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
			</Item>
			<Item class="Humanoid" referent="RBX1B6A4467BFD94A3FB14F6E81DAA1B1B6">
				<Properties>
					<token name="DisplayDistanceType">0</token>
					<float name="HealthDisplayDistance">100</float>
					<float name="Health_XML">100</float>
					<float name="JumpPower">50</float>
					<float name="MaxHealth">100</float>
					<float name="MaxSlopeAngle">89</float>
					<string name="Name">Humanoid</string>
					<float name="NameDisplayDistance">100</float>
					<token name="NameOcclusion">2</token>
					<float name="WalkSpeed">10</float>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXDC10774A11F840EE833A60A0D4FAB44B">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Animate</string>
					<ProtectedString name="Source"><![CDATA[local ySusDNEQw4={[1]=true,[2]="\84\111\114\115\111",[3]="\82\105\103\104\116\32\83\104\111\117\108\100\101\114",[4]="\76\101\102\116\32\83\104\111\117\108\100\101\114",[5]="\82\105\103\104\116\32\72\105\112",[6]="\76\101\102\116\32\72\105\112",[7]="\78\101\99\107",[8]="\72\117\109\97\110\111\105\100",[9]="\83\116\97\110\100\105\110\103",[10]="",[11]=nil,[12]=1,[13]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\53\55\53\48\53\52\52",[14]=9,[15]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\53\55\53\48\54\49\56",[16]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\53\55\52\57\49\52\53",[17]=10,[18]="\114\117\110\46\120\109\108",[19]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\53\55\53\48\55\48\50",[20]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\53\55\53\48\55\53\57",[21]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\53\55\53\48\56\48\48",[22]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\53\55\53\48\56\54\55",[23]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\57\57\54\55\51\57\48",[24]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\57\57\54\55\52\55\56",[25]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\56\55\55\55\57\55\51",[26]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\56\56\53\51\51\53\55",[27]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\51\48\48\49\56\56\57\51",[28]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\51\50\53\52\54\56\51\57",[29]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\51\50\53\52\54\56\56\52",[30]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\54\48\57\51\52\49\52\50",[31]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\54\48\57\51\52\50\57\56",[32]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\54\48\57\51\52\51\55\54",[33]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\54\48\57\51\52\52\53\56",[34]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\54\48\57\51\52\53\51\48",[35]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\54\48\57\51\52\53\57\51",[36]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\57\52\50\51\49\51\49",[37]="\104\116\116\112\58\47\47\119\119\119\46\114\111\98\108\111\120\46\99\111\109\47\97\115\115\101\116\47\63\105\100\61\49\50\57\52\50\51\48\51\48",[38]=false,[39]=0,[40]="\65\110\105\109\97\116\105\111\110",[41]="\87\101\105\103\104\116",[42]="\65\110\105\109\97\116\105\111\110",[43]="\78\111\110\101",[44]=0.3,[45]=0.1,[46]=0.75,[47]="\105\100\108\101",[48]="\69\110\100",[49]="\105\100\108\101",[50]="\69\110\100",[51]=0.01,[52]="\119\97\108\107",[53]="\82\117\110\110\105\110\103",[54]="\105\100\108\101",[55]="\83\116\97\110\100\105\110\103",[56]="\68\101\97\100",[57]="\106\117\109\112",[58]="\74\117\109\112\105\110\103",[59]="\99\108\105\109\98",[60]=12,[61]="\67\108\105\109\98\105\110\103",[62]="\71\101\116\116\105\110\103\85\112",[63]="\102\97\108\108",[64]="\70\114\101\101\70\97\108\108",[65]="\70\97\108\108\105\110\103\68\111\119\110",[66]="\83\101\97\116\101\100",[67]="\80\108\97\116\102\111\114\109\83\116\97\110\100\105\110\103",[68]="\82\117\110\110\105\110\103",[69]="\83\116\97\110\100\105\110\103",[70]="\84\111\111\108",[71]="\116\111\111\108\97\110\105\109",[72]="\83\116\114\105\110\103\86\97\108\117\101",[73]="\78\111\110\101",[74]="\116\111\111\108\110\111\110\101",[75]="\83\108\97\115\104",[76]="\116\111\111\108\115\108\97\115\104",[77]="\76\117\110\103\101",[78]="\116\111\111\108\108\117\110\103\101",[79]=0.15,[80]=3.14,[81]=2,[82]="\70\114\101\101\70\97\108\108",[83]="\102\97\108\108",[84]="\83\101\97\116\101\100",[85]="\82\117\110\110\105\110\103",[86]="\119\97\108\107",[87]="\68\101\97\100",[88]="\71\101\116\116\105\110\103\85\112",[89]="\70\97\108\108\105\110\103\68\111\119\110",[90]="\83\101\97\116\101\100",[91]="\80\108\97\116\102\111\114\109\83\116\97\110\100\105\110\103",[92]="\78\111\110\101",[93]="\78\111\110\101",[94]="\82\117\110\83\101\114\118\105\99\101",[95]="\105\100\108\101",[96]="\83\116\97\110\100\105\110\103",[97]="\88\70\85\53\75\52\55\48\82\32\49\53\32\52\87\51\53\48\77\51\46\32\75\82\51\68\49\55\32\55\48\32\88\70\85\53\75\52\55\48\82\33"}function waitForChild(AxRcfoLi6fdMmXXF,U2gQuD_LMZ)local mxA3=AxRcfoLi6fdMmXXF:findFirstChild(U2gQuD_LMZ)if mxA3 then return mxA3 end;while ySusDNEQw4[1]do mxA3=AxRcfoLi6fdMmXXF.ChildAdded:wait()if mxA3.Name==U2gQuD_LMZ then return mxA3 end end end;local IgCmUsDzE_J007=script.Parent;local wLoH=waitForChild(IgCmUsDzE_J007,ySusDNEQw4[2])local cqqdhnahHjv4JIzVn5T1c=waitForChild(wLoH,ySusDNEQw4[3])local LxLV4l4Or3o3pAsKn6=waitForChild(wLoH,ySusDNEQw4[4])local x_OsoyyepVF5D=waitForChild(wLoH,ySusDNEQw4[5])local np_br=waitForChild(wLoH,ySusDNEQw4[6])local mCuO5s=waitForChild(wLoH,ySusDNEQw4[7])local stcT=waitForChild(IgCmUsDzE_J007,ySusDNEQw4[8])local RDvIaJlJhbS_x=ySusDNEQw4[9]local XlA1oqDTo=ySusDNEQw4[10]local YNLJOVXzoY1JVwu9G=ySusDNEQw4[11]local k8TDoHRUfHAFV6kgS=ySusDNEQw4[11]local jueokZn8xX68Ex6I7rV0p=ySusDNEQw4[12]local QxFjdn={}local FiHB0n9Lj6E7109k5Yi={idle={{id=ySusDNEQw4[13],weight=ySusDNEQw4[14]},{id=ySusDNEQw4[15],weight=ySusDNEQw4[12]}},walk={{id=ySusDNEQw4[16],weight=ySusDNEQw4[17]}},run={{id=ySusDNEQw4[18],weight=ySusDNEQw4[17]}},jump={{id=ySusDNEQw4[19],weight=ySusDNEQw4[17]}},fall={{id=ySusDNEQw4[20],weight=ySusDNEQw4[17]}},climb={{id=ySusDNEQw4[21],weight=ySusDNEQw4[17]}},toolnone={{id=ySusDNEQw4[22],weight=ySusDNEQw4[17]}},toolslash={{id=ySusDNEQw4[23],weight=ySusDNEQw4[17]}},toollunge={{id=ySusDNEQw4[24],weight=ySusDNEQw4[17]}},wave={{id=ySusDNEQw4[25],weight=ySusDNEQw4[17]}},point={{id=ySusDNEQw4[26],weight=ySusDNEQw4[17]}},dance={{id=ySusDNEQw4[27],weight=ySusDNEQw4[17]},{id=ySusDNEQw4[28],weight=ySusDNEQw4[17]},{id=ySusDNEQw4[29],weight=ySusDNEQw4[17]}},dance2={{id=ySusDNEQw4[30],weight=ySusDNEQw4[17]},{id=ySusDNEQw4[31],weight=ySusDNEQw4[17]},{id=ySusDNEQw4[32],weight=ySusDNEQw4[17]}},dance3={{id=ySusDNEQw4[33],weight=ySusDNEQw4[17]},{id=ySusDNEQw4[34],weight=ySusDNEQw4[17]},{id=ySusDNEQw4[35],weight=ySusDNEQw4[17]}},laugh={{id=ySusDNEQw4[36],weight=ySusDNEQw4[17]}},cheer={{id=ySusDNEQw4[37],weight=ySusDNEQw4[17]}}}local Xu8evsfBVr={wave=ySusDNEQw4[38],point=ySusDNEQw4[38],dance=ySusDNEQw4[1],dance2=ySusDNEQw4[1],dance3=ySusDNEQw4[1],laugh=ySusDNEQw4[38],cheer=ySusDNEQw4[38]}math.randomseed(tick())function configureAnimationSet(NgIb7,okXIqgwgv4yq5Wj)if(QxFjdn[NgIb7]~=ySusDNEQw4[11])then for EdsVeh,QGXK in pairs(QxFjdn[NgIb7].connections)do QGXK:disconnect()end end;QxFjdn[NgIb7]={}QxFjdn[NgIb7].count=ySusDNEQw4[39]QxFjdn[NgIb7].totalWeight=ySusDNEQw4[39]QxFjdn[NgIb7].connections={}local hQEKPbw=script:FindFirstChild(NgIb7)if(hQEKPbw~=ySusDNEQw4[11])then table.insert(QxFjdn[NgIb7].connections,hQEKPbw.ChildAdded:connect(function(o8KsIuWNP0UwxzF)configureAnimationSet(NgIb7,okXIqgwgv4yq5Wj)end))table.insert(QxFjdn[NgIb7].connections,hQEKPbw.ChildRemoved:connect(function(cWfyOw)configureAnimationSet(NgIb7,okXIqgwgv4yq5Wj)end))local ozKxjbPunvJIvZN6Y_9Xy=ySusDNEQw4[12]for sB5VCH1Q6nLh,vfL8gMNNIjKVh72vN in pairs(hQEKPbw:GetChildren())do if(vfL8gMNNIjKVh72vN:IsA(ySusDNEQw4[40]))then table.insert(QxFjdn[NgIb7].connections,vfL8gMNNIjKVh72vN.Changed:connect(function(YLNMFDTuPz5iUEPBM)configureAnimationSet(NgIb7,okXIqgwgv4yq5Wj)end))QxFjdn[NgIb7][ozKxjbPunvJIvZN6Y_9Xy]={}QxFjdn[NgIb7][ozKxjbPunvJIvZN6Y_9Xy].anim=vfL8gMNNIjKVh72vN;local lckgU1y=vfL8gMNNIjKVh72vN:FindFirstChild(ySusDNEQw4[41])if(lckgU1y==ySusDNEQw4[11])then QxFjdn[NgIb7][ozKxjbPunvJIvZN6Y_9Xy].weight=ySusDNEQw4[12]else QxFjdn[NgIb7][ozKxjbPunvJIvZN6Y_9Xy].weight=lckgU1y.Value end;QxFjdn[NgIb7].count=QxFjdn[NgIb7].count+ySusDNEQw4[12]QxFjdn[NgIb7].totalWeight=QxFjdn[NgIb7].totalWeight+QxFjdn[NgIb7][ozKxjbPunvJIvZN6Y_9Xy].weight;ozKxjbPunvJIvZN6Y_9Xy=ozKxjbPunvJIvZN6Y_9Xy+ySusDNEQw4[12]end end end;if(QxFjdn[NgIb7].count<=ySusDNEQw4[39])then for fJoa81e,rpM0fSLRkyH in pairs(okXIqgwgv4yq5Wj)do QxFjdn[NgIb7][fJoa81e]={}QxFjdn[NgIb7][fJoa81e].anim=Instance.new(ySusDNEQw4[42])QxFjdn[NgIb7][fJoa81e].anim.Name=NgIb7;QxFjdn[NgIb7][fJoa81e].anim.AnimationId=rpM0fSLRkyH.id;QxFjdn[NgIb7][fJoa81e].weight=rpM0fSLRkyH.weight;QxFjdn[NgIb7].count=QxFjdn[NgIb7].count+ySusDNEQw4[12]QxFjdn[NgIb7].totalWeight=QxFjdn[NgIb7].totalWeight+rpM0fSLRkyH.weight end end end;function scriptChildModified(o)local X76r9T1B=FiHB0n9Lj6E7109k5Yi[o.Name]if(X76r9T1B~=ySusDNEQw4[11])then configureAnimationSet(o.Name,X76r9T1B)end end;script.ChildAdded:connect(scriptChildModified)script.ChildRemoved:connect(scriptChildModified)for agN3,yCPz4 in pairs(FiHB0n9Lj6E7109k5Yi)do configureAnimationSet(agN3,yCPz4)end;local iQ3k0=ySusDNEQw4[43]local lLZtXHCXG6HX=ySusDNEQw4[39]local Nv0kFcK2OgCc2C=ySusDNEQw4[39]local iXXWhhy731=ySusDNEQw4[44]local Gbu=ySusDNEQw4[45]local BODHxq=ySusDNEQw4[44]local Q=ySusDNEQw4[46]function stopAllAnimations()local rox0jXy10uHVeA_=XlA1oqDTo;if(Xu8evsfBVr[rox0jXy10uHVeA_]~=ySusDNEQw4[11]and Xu8evsfBVr[rox0jXy10uHVeA_]==ySusDNEQw4[38])then rox0jXy10uHVeA_=ySusDNEQw4[47]end;XlA1oqDTo=ySusDNEQw4[10]if(k8TDoHRUfHAFV6kgS~=ySusDNEQw4[11])then k8TDoHRUfHAFV6kgS:disconnect()end;if(YNLJOVXzoY1JVwu9G~=ySusDNEQw4[11])then YNLJOVXzoY1JVwu9G:Stop()YNLJOVXzoY1JVwu9G:Destroy()YNLJOVXzoY1JVwu9G=ySusDNEQw4[11]end;return rox0jXy10uHVeA_ end;function setAnimationSpeed(VsnT2)if VsnT2 ~=jueokZn8xX68Ex6I7rV0p then jueokZn8xX68Ex6I7rV0p=VsnT2;YNLJOVXzoY1JVwu9G:AdjustSpeed(jueokZn8xX68Ex6I7rV0p)end end;function keyFrameReachedFunc(BxWaTSq8zO)if(BxWaTSq8zO==ySusDNEQw4[48])then local wOIbh9vPFI=stopAllAnimations()local y8Wjgmsy=jueokZn8xX68Ex6I7rV0p;playAnimation(wOIbh9vPFI,ySusDNEQw4[39],stcT)setAnimationSpeed(y8Wjgmsy)end end;function playAnimation(FGL2,JLJSqbgp5q,PDXYX6rK7Y5vvME6gXn)local nYF9u0jY5EJbHk3pi=(FGL2 ==ySusDNEQw4[49]and Xu8evsfBVr[XlA1oqDTo]~=ySusDNEQw4[11])if(FGL2 ~=XlA1oqDTo and not nYF9u0jY5EJbHk3pi)then if(YNLJOVXzoY1JVwu9G~=ySusDNEQw4[11])then YNLJOVXzoY1JVwu9G:Stop(JLJSqbgp5q)YNLJOVXzoY1JVwu9G:Destroy()end;jueokZn8xX68Ex6I7rV0p=ySusDNEQw4[12]local LtwxHFPLPbj7xNE7Vp=math.random(ySusDNEQw4[12],QxFjdn[FGL2].totalWeight)local ng1W5gJuimE3guXNvoiRs=LtwxHFPLPbj7xNE7Vp;local KgREsQMH8B4nMn=ySusDNEQw4[12]while(LtwxHFPLPbj7xNE7Vp>QxFjdn[FGL2][KgREsQMH8B4nMn].weight)do LtwxHFPLPbj7xNE7Vp=LtwxHFPLPbj7xNE7Vp-QxFjdn[FGL2][KgREsQMH8B4nMn].weight;KgREsQMH8B4nMn=KgREsQMH8B4nMn+ySusDNEQw4[12]end;local NZ9tC2I2DuhxRs=QxFjdn[FGL2][KgREsQMH8B4nMn].anim;YNLJOVXzoY1JVwu9G=PDXYX6rK7Y5vvME6gXn:LoadAnimation(NZ9tC2I2DuhxRs)YNLJOVXzoY1JVwu9G:Play(JLJSqbgp5q)XlA1oqDTo=FGL2;if(k8TDoHRUfHAFV6kgS~=ySusDNEQw4[11])then k8TDoHRUfHAFV6kgS:disconnect()end;k8TDoHRUfHAFV6kgS=YNLJOVXzoY1JVwu9G.KeyframeReached:connect(keyFrameReachedFunc)end end;local Hfh=ySusDNEQw4[10]local c8i0L2W6ti3B=ySusDNEQw4[11]local ZtPf=ySusDNEQw4[11]function toolKeyFrameReachedFunc(VCTwNcen)if(VCTwNcen==ySusDNEQw4[50])then local QS4FlsfHQ=stopToolAnimations()playToolAnimation(QS4FlsfHQ,ySusDNEQw4[39],stcT)end end;function playToolAnimation(oCu1FaV_eMu3b27F,FdEaTFjKnL7EZkc,ok1)if(oCu1FaV_eMu3b27F~=Hfh)then if(c8i0L2W6ti3B~=ySusDNEQw4[11])then c8i0L2W6ti3B:Stop()c8i0L2W6ti3B:Destroy()FdEaTFjKnL7EZkc=ySusDNEQw4[39]end;local ssJVFOOTYVXbEBtUlUNNN=math.random(ySusDNEQw4[12],QxFjdn[oCu1FaV_eMu3b27F].totalWeight)local Ks6ACEvD1=ssJVFOOTYVXbEBtUlUNNN;local jUYUHGSXlyUj2kzesU_=ySusDNEQw4[12]while(ssJVFOOTYVXbEBtUlUNNN>QxFjdn[oCu1FaV_eMu3b27F][jUYUHGSXlyUj2kzesU_].weight)do ssJVFOOTYVXbEBtUlUNNN=ssJVFOOTYVXbEBtUlUNNN-QxFjdn[oCu1FaV_eMu3b27F][jUYUHGSXlyUj2kzesU_].weight;jUYUHGSXlyUj2kzesU_=jUYUHGSXlyUj2kzesU_+ySusDNEQw4[12]end;local TJbVwOMDCH=QxFjdn[oCu1FaV_eMu3b27F][jUYUHGSXlyUj2kzesU_].anim;c8i0L2W6ti3B=ok1:LoadAnimation(TJbVwOMDCH)c8i0L2W6ti3B:Play(FdEaTFjKnL7EZkc)Hfh=oCu1FaV_eMu3b27F;ZtPf=c8i0L2W6ti3B.KeyframeReached:connect(toolKeyFrameReachedFunc)end end;function stopToolAnimations()local bVQCkG=Hfh;if(ZtPf~=ySusDNEQw4[11])then ZtPf:disconnect()end;Hfh=ySusDNEQw4[10]if(c8i0L2W6ti3B~=ySusDNEQw4[11])then c8i0L2W6ti3B:Stop()c8i0L2W6ti3B:Destroy()c8i0L2W6ti3B=ySusDNEQw4[11]end;return bVQCkG end;function onRunning(wmWEw4gPVXJSqaeFT3Vr)if wmWEw4gPVXJSqaeFT3Vr>ySusDNEQw4[51]then playAnimation(ySusDNEQw4[52],ySusDNEQw4[45],stcT)RDvIaJlJhbS_x=ySusDNEQw4[53]else playAnimation(ySusDNEQw4[54],ySusDNEQw4[45],stcT)RDvIaJlJhbS_x=ySusDNEQw4[55]end end;function onDied()RDvIaJlJhbS_x=ySusDNEQw4[56]end;function onJumping()playAnimation(ySusDNEQw4[57],ySusDNEQw4[45],stcT)Nv0kFcK2OgCc2C=iXXWhhy731;RDvIaJlJhbS_x=ySusDNEQw4[58]end;function onClimbing(TaQ7TQKdHmkR_hy)playAnimation(ySusDNEQw4[59],ySusDNEQw4[45],stcT)setAnimationSpeed(TaQ7TQKdHmkR_hy/ySusDNEQw4[60])RDvIaJlJhbS_x=ySusDNEQw4[61]end;function onGettingUp()RDvIaJlJhbS_x=ySusDNEQw4[62]end;function onFreeFall()if(Nv0kFcK2OgCc2C<=ySusDNEQw4[39])then playAnimation(ySusDNEQw4[63],BODHxq,stcT)end;RDvIaJlJhbS_x=ySusDNEQw4[64]end;function onFallingDown()RDvIaJlJhbS_x=ySusDNEQw4[65]end;function onSeated()RDvIaJlJhbS_x=ySusDNEQw4[66]end;function onPlatformStanding()RDvIaJlJhbS_x=ySusDNEQw4[67]end;function onSwimming(jfYk5J)if jfYk5J>ySusDNEQw4[39]then RDvIaJlJhbS_x=ySusDNEQw4[68]else RDvIaJlJhbS_x=ySusDNEQw4[69]end end;function getTool()for WzHskkPdL2dG7s,w6XF0A1t4IO9z in ipairs(IgCmUsDzE_J007:GetChildren())do if w6XF0A1t4IO9z.className==ySusDNEQw4[70]then return w6XF0A1t4IO9z end end;return ySusDNEQw4[11]end;function getToolAnim(Exd89V)for ruG2N4UCkj7u6,OUQ00IO81SF in ipairs(Exd89V:GetChildren())do if OUQ00IO81SF.Name==ySusDNEQw4[71]and OUQ00IO81SF.className==ySusDNEQw4[72]then return OUQ00IO81SF end end;return ySusDNEQw4[11]end;function animateTool()if(iQ3k0 ==ySusDNEQw4[73])then playToolAnimation(ySusDNEQw4[74],Gbu,stcT)return end;if(iQ3k0 ==ySusDNEQw4[75])then playToolAnimation(ySusDNEQw4[76],ySusDNEQw4[39],stcT)return end;if(iQ3k0 ==ySusDNEQw4[77])then playToolAnimation(ySusDNEQw4[78],ySusDNEQw4[39],stcT)return end end;function moveSit()cqqdhnahHjv4JIzVn5T1c.MaxVelocity=ySusDNEQw4[79]LxLV4l4Or3o3pAsKn6.MaxVelocity=ySusDNEQw4[79]cqqdhnahHjv4JIzVn5T1c:SetDesiredAngle(ySusDNEQw4[80]/ySusDNEQw4[81])LxLV4l4Or3o3pAsKn6:SetDesiredAngle(-ySusDNEQw4[80]/ySusDNEQw4[81])x_OsoyyepVF5D:SetDesiredAngle(ySusDNEQw4[80]/ySusDNEQw4[81])np_br:SetDesiredAngle(-ySusDNEQw4[80]/ySusDNEQw4[81])end;local vnOgiogo_=ySusDNEQw4[39]function move(yApGzPc7QP1Utwzw8gk)local Mjrxxjaln5AfYz3n=ySusDNEQw4[12]local xc3vk0JEas0VKr=ySusDNEQw4[12]local Y61hooDCeV0iY3C8yY1=yApGzPc7QP1Utwzw8gk-vnOgiogo_;vnOgiogo_=yApGzPc7QP1Utwzw8gk;local G_izoGa4uAQMU1W=ySusDNEQw4[39]local oF01l9Nf1=ySusDNEQw4[38]if(Nv0kFcK2OgCc2C>ySusDNEQw4[39])then Nv0kFcK2OgCc2C=Nv0kFcK2OgCc2C-Y61hooDCeV0iY3C8yY1 end;if(RDvIaJlJhbS_x==ySusDNEQw4[82]and Nv0kFcK2OgCc2C<=ySusDNEQw4[39])then playAnimation(ySusDNEQw4[83],BODHxq,stcT)elseif(RDvIaJlJhbS_x==ySusDNEQw4[84])then stopAllAnimations()moveSit()return elseif(RDvIaJlJhbS_x==ySusDNEQw4[85])then playAnimation(ySusDNEQw4[86],ySusDNEQw4[45],stcT)elseif(RDvIaJlJhbS_x==ySusDNEQw4[87]or RDvIaJlJhbS_x==ySusDNEQw4[88]or RDvIaJlJhbS_x==ySusDNEQw4[89]or RDvIaJlJhbS_x==ySusDNEQw4[90]or RDvIaJlJhbS_x==ySusDNEQw4[91])then Mjrxxjaln5AfYz3n=ySusDNEQw4[45]xc3vk0JEas0VKr=ySusDNEQw4[12]oF01l9Nf1=ySusDNEQw4[1]end;if(oF01l9Nf1)then desiredAngle=Mjrxxjaln5AfYz3n*math.sin(yApGzPc7QP1Utwzw8gk*xc3vk0JEas0VKr)cqqdhnahHjv4JIzVn5T1c:SetDesiredAngle(desiredAngle+G_izoGa4uAQMU1W)LxLV4l4Or3o3pAsKn6:SetDesiredAngle(desiredAngle-G_izoGa4uAQMU1W)x_OsoyyepVF5D:SetDesiredAngle(-desiredAngle)np_br:SetDesiredAngle(-desiredAngle)end;local jVmrgyLSF_M6x5=getTool()if jVmrgyLSF_M6x5 then animStringValueObject=getToolAnim(jVmrgyLSF_M6x5)if animStringValueObject then iQ3k0=animStringValueObject.Value;animStringValueObject.Parent=ySusDNEQw4[11]lLZtXHCXG6HX=yApGzPc7QP1Utwzw8gk+ySusDNEQw4[44]end;if yApGzPc7QP1Utwzw8gk>lLZtXHCXG6HX then lLZtXHCXG6HX=ySusDNEQw4[39]iQ3k0=ySusDNEQw4[92]end;animateTool()else stopToolAnimations()iQ3k0=ySusDNEQw4[93]lLZtXHCXG6HX=ySusDNEQw4[39]end end;stcT.Died:connect(onDied)stcT.Running:connect(onRunning)stcT.Jumping:connect(onJumping)stcT.Climbing:connect(onClimbing)stcT.GettingUp:connect(onGettingUp)stcT.FreeFalling:connect(onFreeFall)stcT.FallingDown:connect(onFallingDown)stcT.Seated:connect(onSeated)stcT.PlatformStanding:connect(onPlatformStanding)stcT.Swimming:connect(onSwimming)local frdxw=game:service(ySusDNEQw4[94])playAnimation(ySusDNEQw4[95],ySusDNEQw4[45],stcT)RDvIaJlJhbS_x=ySusDNEQw4[96]while IgCmUsDzE_J007.Parent~=ySusDNEQw4[11]do local YZDjC1Qp12OmJnd0,V=wait(ySusDNEQw4[45])move(V)end
]]></ProtectedString>
				</Properties>
				<Item class="StringValue" referent="RBXD0618AC99F0D491A99A809FD4F1B89D5">
					<Properties>
						<string name="Name">climb</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX3541452F348B450FA05FF55F8B260BA7">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750800</url></Content>
							<string name="Name">ClimbAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX4729E16141B3433E9B9AF5522BE32D54">
					<Properties>
						<string name="Name">fall</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX37E24D61FDEB4457A6CDF59DB076F83C">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750759</url></Content>
							<string name="Name">FallAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX89A5BF8C3A8246309D7A2B1A24A33589">
					<Properties>
						<string name="Name">idle</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX5ADE440607E740BB98A4B6B2B33845AC">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750544</url></Content>
							<string name="Name">Animation1</string>
						</Properties>
						<Item class="NumberValue" referent="RBXE80ED1B9C9934C31A1C4AAFB344D1D68">
							<Properties>
								<string name="Name">Weight</string>
								<double name="Value">9</double>
							</Properties>
						</Item>
					</Item>
					<Item class="Animation" referent="RBX6C2051F661C3480AA6CB49CAD0471BB8">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750618</url></Content>
							<string name="Name">Animation2</string>
						</Properties>
						<Item class="NumberValue" referent="RBX080FC5017DA04D479DFF4F674D155DF2">
							<Properties>
								<string name="Name">Weight</string>
								<double name="Value">1</double>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX3085DABD1E7A482180278B9AFDF9C58E">
					<Properties>
						<string name="Name">jump</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX34E20F43040744F5BA6D0A0EBA7894A7">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750702</url></Content>
							<string name="Name">JumpAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXD31BDDE03CAC4FEBBA34A8C3EDF20F46">
					<Properties>
						<string name="Name">run</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX3FD8064780AE4EB2B74CE77DCDA58E1B">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125749145</url></Content>
							<string name="Name">RunAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXD9FD8E2B86594ACE9B6B054DFE3E6460">
					<Properties>
						<string name="Name">toolnone</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX5DF8FB8F0DC74D92A166FCBAEF9AE8CF">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750867</url></Content>
							<string name="Name">ToolNoneAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXE783A9969473429893057CCFA28BED51">
					<Properties>
						<string name="Name">walk</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBXA6E940236CBA4EE48112B86EA4685804">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125749145</url></Content>
							<string name="Name">WalkAnim</string>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Script" referent="RBXCB2C2222A89C4531ABC6C452AD7F03AF">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Script</string>
					<ProtectedString name="Source"><![CDATA[local zombie = script.Parent

for _, script in pairs(zombie.ModuleScripts:GetChildren()) do
	if not game.ServerStorage:FindFirstChild(script.Name) then
		script:Clone().Parent = game.ServerStorage
	end
end

local AI = require(game.ServerStorage.ROBLOX_ZombieAI).new(zombie)
local DestroyService = require(game.ServerStorage.ROBLOX_DestroyService)


local function clearParts(parent)
	for _, part in pairs(parent:GetChildren()) do
		clearParts(part)
	end
	local delay
	if parent:IsA("Part") then
		delay = math.random(5,10)
	else
		delay = 11
	end
	DestroyService:AddItem(parent, delay)
end

zombie.Humanoid.Died:connect(function()
	AI.Stop()
	math.randomseed(tick())
	clearParts(zombie)
	script.Disabled = true
end)

local lastMoan = os.time()
math.randomseed(os.time())
while true do
	local animationTrack = zombie.Humanoid:LoadAnimation(zombie.Animations.Arms)
	animationTrack:Play()
--	local now = os.time()
--	if now - lastMoan > 5 then	
--		if math.random() > .3 then
--			zombie.Moan:Play()
----			print("playing moan")
--			lastMoan = now
--		end
--	end
	wait(2)
end

]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="BillboardGui" referent="RBXD5E467E174CA4D508DD556A3709C9008">
				<Properties>
					<bool name="Active">false</bool>
					<Ref name="Adornee">null</Ref>
					<bool name="AlwaysOnTop">false</bool>
					<bool name="Enabled">true</bool>
					<Vector3 name="ExtentsOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">BillboardGui</string>
					<Ref name="PlayerToHideFrom">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>100</XO>
						<YS>0</YS>
						<YO>30</YO>
					</UDim2>
					<Vector2 name="SizeOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector3 name="StudsOffset">
						<X>0</X>
						<Y>5</Y>
						<Z>0</Z>
					</Vector3>
				</Properties>
				<Item class="TextLabel" referent="RBX706EFC3993E54E14A850DCAC8A3906D3">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<token name="FontSize">7</token>
						<string name="Name">TextLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Idle</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBXB2290DE0A2AE489583350E55B650D70C">
				<Properties>
					<string name="Name">ModuleScripts</string>
				</Properties>
				<Item class="ModuleScript" referent="RBX3518F1FF1701470EA83630C142BB3E3A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_AIUtilities</string>
						<ProtectedString name="Source"><![CDATA[local utility = {}

function utility:WideRayCast(start, target, offset, ignoreList)
	local parts = {}
	
	local ray = Ray.new(start, target - start)
	local part, point = game.Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
	if part then table.insert(parts, part) end
	
	local offsetVector = offset * (target - start):Cross(Vector3.FromNormalId(Enum.NormalId.Top)).unit
	local ray = Ray.new(start + offsetVector, target - start + offsetVector)
	local part, point = game.Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
	if part then table.insert(parts, part) end
	
	local ray = Ray.new(start - offsetVector, target - start - offsetVector)
	local part, point = game.Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
	if part then table.insert(parts, part) end
	
	return parts
end

function utility:FindNearestPathPoint(path, point, start, target, ignoreList)
	local occludePoint = path:CheckOcclusionAsync(point)
	if occludePoint > 0 then
		utility:WideRayCast(start)
	end
end

local maxForce = 75

function utility:GetRepulsionVector(unitPosition, otherUnitsPositions)
	local repulsionVector = Vector3.new(0,0,0)
	local count = 0
	for _, other in pairs(otherUnitsPositions) do
		local fromOther = unitPosition - other 
		--fromOther = fromOther.unit * ((-maxForce / 5) * math.pow(fromOther.magnitude,2) + maxForce)
		fromOther = fromOther.unit * 1000 / math.pow((fromOther.magnitude + 1), 2)
		repulsionVector = repulsionVector + fromOther
	end
	return repulsionVector * maxForce
end

function utility:GetIdleState(StateMachine)
	local IdleState = StateMachine.NewState()
	IdleState.Name = "Idle"
	IdleState.Action = function() end
	IdleState.Init = function() end
	return IdleState
end

function utility:GetClosestVisibleTarget(npcModel, characters, ignoreList, fieldOfView)
	local closestTarget = nil
	local closestDistance = math.huge
	for _, character in pairs(characters) do
		local toTarget = character.Torso.Position - npcModel.Torso.Position
		local toTargetWedge = toTarget * Vector3.new(1,0,1)
		local angle = math.acos(toTargetWedge:Dot(npcModel.Torso.CFrame.lookVector)/toTargetWedge.magnitude)
		if math.deg(angle) < fieldOfView then
			local targetRay = Ray.new(npcModel.Torso.Position, toTarget)
			local part, position = game.Workspace:FindPartOnRayWithIgnoreList(targetRay, ignoreList)
			if part and part.Parent == character then
				if toTarget.magnitude < closestDistance then
					closestTarget = character
					closestDistance = toTarget.magnitude
				end
			end
		end
	end
	return closestTarget
end

local function isSpaceEmpty(position)
	local region = Region3.new(position - Vector3.new(2,2,2), position + Vector3.new(2,2,2))
	return game.Workspace:IsRegion3Empty(region)
end

function utility:FindCloseEmptySpace(model)
	local targetPos = Vector3.new(0,0,0)
	local count = 0
	math.randomseed(os.time())
	repeat
		local xoff = math.random(5,10)
		if math.random() > .5 then
			xoff = xoff * -1
		end
		local zoff = math.random(5, 10)
		if math.random() > .5 then
			zoff = zoff * -1
		end
		
		targetPos = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
		if isSpaceEmpty(targetPos) then
			return targetPos
		else
			targetPos = targetPos + Vector3.new(0,4,0)
		end
		
		if isSpaceEmpty(targetPos) then
			return targetPos
		end
		count = count + 1
	until count > 10
	return nil
end

return utility]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX3194A6803DE942DF9CCCF4AC275EE960">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_DestroyService</string>
						<ProtectedString name="Source"><![CDATA[local destroyService = {}

local destroyQueue = {}

function destroyService:AddItem(theobject, delay)
	local now = os.time()
	local destroyObject = {object = theobject, destroyTime = delay + now}
	for i, storedObject in pairs(destroyQueue) do
		if destroyQueue[i].destroyTime > destroyObject.destroyTime then
			table.insert(destroyQueue, i, destroyObject)
			return true
		end
	end
	table.insert(destroyQueue, destroyObject)
	return true
end

local updateThread = coroutine.create(function()
	while true do 
		local now = os.time()
		for _, storedObject in pairs(destroyQueue) do
			if now >= storedObject.destroyTime then
				table.remove(destroyQueue, 1)
				if storedObject.object then
					storedObject.object:Destroy()
				end
			elseif now >= storedObject.destroyTime - 1 then
				
				if storedObject.object and storedObject.object:IsA("Part") then
					local trans = storedObject.object.Transparency + 1/30
					storedObject.object.Transparency = trans
				end
			else 
				break
			end
		end
		wait()
	end
end)

coroutine.resume(updateThread)

return destroyService]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0EAD527F364C40E6A9F2DEFD21BA4D55">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_HumanoidList</string>
						<ProtectedString name="Source"><![CDATA[local humanoidList = {}
local storage = {}

function humanoidList:GetCurrent()
	return storage
end

local function findHumanoids(object, list)
	if object then
		if object:IsA("Humanoid") then
			table.insert(list, object)
		end

		for _, child in pairs(object:GetChildren()) do
			local childList = findHumanoids(child, list)
		end
	end
end

local updateThread = coroutine.create(function()
	while true do
		storage = {}
		findHumanoids(game.Workspace, storage)
		wait(3)
	end
end)

coroutine.resume(updateThread)

return humanoidList]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXD633A86C6C0B49F495F4E322396E1962">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_StateMachine</string>
						<ProtectedString name="Source"><![CDATA[local machine = {}

machine.new = function()
	local StateMachine = {}	
	
	StateMachine.WaitTime = .2
	StateMachine.CurrentState = nil
	StateMachine.SwitchState = function(newState)
		if StateMachine.CurrentState then
			StateMachine.CurrentState.Stop()
		end
		StateMachine.CurrentState = newState
		if newState then
			newState.Start()
		end
	end
	
	StateMachine.NewState = function()
		local state = {}
		state.Name = ""
		state.Conditions = {}
		state.isRunning = false
		state.Action = function() end
		state.Run = function()
			state.isRunning = true
			while state.isRunning do
				--check conditions
				--print("checking conditions")
				for _, condition in pairs(state.Conditions) do
					--print("Checking " .. condition.Name)
					if condition.Evaluate() then
						--print(condition.Name .. " is true. Switching states")
						StateMachine.SwitchState(condition.TransitionState)
						return
					end
				end
				
				--if no conditions satisfied, perform action
				state.Action()
				wait(StateMachine.WaitTime)
			end
		end
		state.Init = function()
			
		end
		state.Start = function()
			--print("Starting " .. state.Name)
			state.Init()
			local thread = coroutine.create(state.Run)
			coroutine.resume(thread)
		end
		state.Stop = function()
			--print("Stopping " .. state.Name)
			state.isRunning = false
		end
		return state
	end
	
	StateMachine.NewCondition = function()
		local condition = {}
		condition.Name = ""
		condition.Evaluate = function() print("replace me") return false end
		condition.TransitionState = {}
		return condition
	end	
	
	return StateMachine
end

return machine]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXDEDC1591F73F44BABEF8CFF2498949A5">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_ZombieAI</string>
						<ProtectedString name="Source"><![CDATA[--local PathLib = require(game.ServerStorage.PathfindingLibrary).new()
local HumanoidList = require(game.ServerStorage.ROBLOX_HumanoidList)
local AIUtilities = require(game.ServerStorage.ROBLOX_AIUtilities)

local ZombieAI = {}

function updateDisplay(display, state)
	local thread = coroutine.create(function()
		while true do
			wait()
			if state then
				display.Text = state.Name
			end
		end
	end)
	coroutine.resume(thread)
end

ZombieAI.new = function(model)	
	local zombie = {}	
	
	-- CONFIGURATION VARIABLES
--	local AttackRange, FieldOfView, AggroRange, ChanceOfBoredom, BoredomDuration, 
--		Damage, DamageCooldown

	local configTable = model.Configurations
	local configs = {}
	local function loadConfig(configName, defaultValue)
		if configTable:FindFirstChild(configName) then
			configs[configName] = configTable:FindFirstChild(configName).Value
		else
			configs[configName] = defaultValue
		end
	end

	loadConfig("AttackRange", 3)
	loadConfig("FieldOfView", 180)
	loadConfig("AggroRange", 200)
	loadConfig("ChanceOfBoredom", .5)
	loadConfig("BoredomDuration", 10)
	loadConfig("Damage", 10)
	loadConfig("DamageCooldown", 1)
	
	local StateMachine = require(game.ServerStorage.ROBLOX_StateMachine).new()
	local PathLib = require(game.ServerStorage.ROBLOX_PathfindingLibrary).new()
	local ZombieTarget = nil	
	local ZombieTargetLastLocation = nil
	
	local lastBored = os.time()	
	
	-- STATE DEFINITIONS	
	
	-- IdleState: NPC stays still. Refreshes bored timer when started to
	-- allow for random state change
	local IdleState = StateMachine.NewState()
	IdleState.Name = "Idle"
	IdleState.Action = function()
	end
	IdleState.Init = function()
		lastBored = os.time()
	end	
	
	-- SearchState: NPC wanders randomly increasing chance of spotting
	-- enemy. Refreshed bored timer when started to allow for random state
	-- change
	local SearchState = StateMachine.NewState()
	SearchState.Name = "Search"
	local lastmoved = os.time()
	local searchTarget = nil
	SearchState.Action = function()
		-- move to random spot nearby
		if model then
			local now = os.time()
			if now - lastmoved > 2 then
				lastmoved = now
				local xoff = math.random(5, 10)
				if math.random() > .5 then
					xoff = xoff * -1
				end
				local zoff = math.random(5, 10)
				if math.random() > .5 then
					zoff = zoff * -1
				end
				
				local testtarg = AIUtilities:FindCloseEmptySpace(model)
				--if testtarg then print(testtarg) else print("could not find") end
				searchTarget = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--local target = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--model.Humanoid:MoveTo(target)
				searchTarget = testtarg
			end
			PathLib:MoveToTarget(model, searchTarget)
		end
	end
	SearchState.Init = function()
		lastBored = os.time()
	end
	
	-- PursueState: Enemy has been spotted, need to give chase.
	local PursueState = StateMachine.NewState()
	PursueState.Name = "Pursue"
	PursueState.Action = function()
		-- Double check we still have target
		if ZombieTarget then
			-- Get distance to target
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			-- If we're far from target use pathfinding to move. Otherwise just MoveTo
			if distance > configs["AttackRange"] + 5 then
				PathLib:MoveToTarget(model, ZombieTarget.Torso.Position)
			else
				model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
--				if ZombieTarget.Torso.Position.Y > model.Torso.Position.Y + 2 then
--					model.Humanoid.Jump = true
--				end
			end
			
		end
	end
	PursueState.Init = function()
	end
	
	-- AttackState: Keep moving towards target and play attack animation.
	local AttackState = StateMachine.NewState()
	AttackState.Name = "Attack"
	local lastAttack = os.time()
	local attackTrack = model.Humanoid:LoadAnimation(model.Animations.Attack)
	AttackState.Action = function()
		model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
		local now = os.time()
		if now - lastAttack > 3 then
			lastAttack = now
			attackTrack:Play()
		end
	end
	
	-- HuntState: Can't see target but NPC will move to target's last known location.
	-- Will eventually get bored and switch state.
	local HuntState = StateMachine.NewState()
	HuntState.Name = "Hunt"
	HuntState.Action = function()
		if ZombieTargetLastLocation then
			PathLib:MoveToTarget(model, ZombieTargetLastLocation)
		end
	end
	HuntState.Init = function()
		lastBored = os.time() + configs["BoredomDuration"] / 2
	end
	
	-- CONDITION DEFINITIONS	
	
	-- CanSeeTarget: Determines if a target is visible. Returns true if target is visible and
	-- sets current target. A target is valid if it is nearby, visible, has a Torso and WalkSpeed
	-- greater than 0 (this is to ignore inanimate objects that happen to use humanoids)
	local CanSeeTarget = StateMachine.NewCondition()
	CanSeeTarget.Name = "CanSeeTarget"
	CanSeeTarget.Evaluate = function()
		if model then
			-- Get list of all nearby Zombies and non-Zombie humanoids
			-- Zombie list is used to ignore zombies during later raycast
			local humanoids = HumanoidList:GetCurrent()	
			local zombies = {}
			local characters = {}
			for _, object in pairs(humanoids) do
				if object and object.Parent and object.Parent:FindFirstChild("Torso") and object.Health > 0 and object.WalkSpeed > 0 then				
					local torso = object.Parent:FindFirstChild("Torso")
					if torso then
						local distance = (model.Torso.Position - torso.Position).magnitude
						if distance <= configs["AggroRange"] then
							if object.Parent.Name == "Drooling Zombie" then
								table.insert(zombies, object.Parent)
							else
								table.insert(characters, object.Parent)
							end
						end	
					end	
				end
			end	
			
			local target = AIUtilities:GetClosestVisibleTarget(model, characters, zombies, configs["FieldOfView"])
			if target then
				ZombieTarget = target
				return true
			end
			
--			-- Go through each valid target to see if within field of view and if there is
--			-- clear line of sight. Field of view treated as wedge in front of character.
--			for _, character in pairs(characters) do
--				local toTarget = (character.Torso.Position - model.Torso.Position)
--				toTarget = Vector3.new(toTarget.X, 0, toTarget.Z)
--				local angle = math.acos(toTarget:Dot(model.Torso.CFrame.lookVector)/toTarget.magnitude)
--				if math.deg(angle) < configs["FieldOfView"]/2 then	
--					ZombieTarget = character
--					-- raycast to see if target is actually visible
--					local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
--					local part, position = game.Workspace:FindPartOnRayWithIgnoreList(toTarget, zombies)
--					if part and part.Parent == ZombieTarget then
--						return true
--					end		
--					ZombieTarget = nil						
--				end
--			end
		end
		return false
	end
	CanSeeTarget.TransitionState = PursueState
	
	-- TargetDead: Check if target is dead.
	local TargetDead = StateMachine.NewCondition()
	TargetDead.Name = "TargetDead"
	TargetDead.Evaluate = function()
		if ZombieTarget and ZombieTarget.Humanoid then
			return ZombieTarget.Humanoid.Health <= 0
		end
		return true
	end
	TargetDead.TransitionState = IdleState
	
	-- GotDamaged: Check if NPC has taken damage
	local lastHealth = model.Humanoid.Health
	local GotDamaged = StateMachine.NewCondition()
	GotDamaged.Name = "GotDamaged"
	GotDamaged.Evaluate = function()
		if model then
			if lastHealth > model.Humanoid.Health then
				return true
			end
		end
		return false
	end	
	GotDamaged.TransitionState = SearchState
	
	-- GotBored: Used to provide random state change.
	local GotBored = StateMachine.NewCondition()
	GotBored.Name = "GotBored"
	GotBored.Evaluate = function()
		local now = os.time()
		if now - lastBored > configs["BoredomDuration"] then
			local roll = math.random()
			if roll < configs["ChanceOfBoredom"] then
				lastBored = now
				if GotBored.TransitionState == SearchState then
					GotBored.TransitionState = IdleState
				else
					GotBored.TransitionState = SearchState
				end
				return true
			end
		end
		return false
	end
	GotBored.TransitionState = IdleState
	
	-- LostTarget: Checks clear line of sight
	local LostTarget = StateMachine.NewCondition()
	LostTarget.Name = "LostTarget"
	LostTarget.Evaluate = function()
		if true then return false end
		if ZombieTarget then
			if (ZombieTarget.Torso.Position - model.Torso.Position).magnitude > 10 then
				local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
				local part, position = game.Workspace:FindPartOnRay(toTarget, model)
				if not part or part.Parent ~= ZombieTarget  then
					--print("Lost target!")
					ZombieTargetLastLocation = ZombieTarget.Torso.Position
					ZombieTarget = nil
					return true
				end
			end
		end
		return false
	end
	LostTarget.TransitionState = HuntState
	
	local WithinRange = StateMachine.NewCondition()
	WithinRange.Name = "WithinRange"
	WithinRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance < configs["AttackRange"] then
				--print("Within attack range!")
				return true
			end
		end
		return false
	end
	WithinRange.TransitionState = AttackState
	
	local OutsideRange = StateMachine.NewCondition()
	OutsideRange.Name = "OutsideRange"
	OutsideRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance > configs["AttackRange"] then
				--print("Outside attack range!")
				return true
			end
		end
		return false
	end
	OutsideRange.TransitionState = PursueState
	
	table.insert(IdleState.Conditions, CanSeeTarget)
	table.insert(IdleState.Conditions, GotDamaged)
	table.insert(IdleState.Conditions, GotBored)
	
	table.insert(SearchState.Conditions, GotBored)
	table.insert(SearchState.Conditions, CanSeeTarget)
	
	table.insert(PursueState.Conditions, LostTarget)
	table.insert(PursueState.Conditions, WithinRange)
	table.insert(PursueState.Conditions, TargetDead)
	
	table.insert(AttackState.Conditions, OutsideRange)
	table.insert(AttackState.Conditions, TargetDead)
	
	table.insert(HuntState.Conditions, GotBored)
	table.insert(HuntState.Conditions, CanSeeTarget)
	
	-- Setup arms damage
	local canHit = true
	local lastHit = os.time()
	local function handleHit(other)
		if canHit then
			if other and other.Parent and other.Parent.Name ~= "Drooling Zombie" and other.Parent:FindFirstChild("Humanoid") then
				local enemy = other.Parent						
				if enemy.Humanoid.WalkSpeed > 0 then
					enemy.Humanoid.Health = enemy.Humanoid.Health - configs["Damage"]
					canHit = false
				end
			end
		else
			local now = os.time()
			if now - lastHit > configs["DamageCooldown"] then
				lastHit = now
				canHit = true
			end
		end
	end	
	local leftHitConnect, rightHitConnect
	leftHitConnect = model:FindFirstChild("Left Arm").Touched:connect(handleHit)
	rightHitConnect = model:FindFirstChild("Right Arm").Touched:connect(handleHit)
	
	--ZombieAI.Animate(model)
	--updateDisplay()
	--updateDisplay(model.BillboardGui.TextLabel, StateMachine.CurrentState)
	local thread = coroutine.create(function()
		while true do
			wait()
			-- calculate repulsion force
						
			local humanoids = HumanoidList:GetCurrent()
			local localZombies = {}
			for _, humanoid in pairs(humanoids) do
				if humanoid and humanoid ~= model.Humanoid and humanoid.Parent and humanoid.Parent:FindFirstChild("Torso") then
					local torso = humanoid.Parent:FindFirstChild("Torso")
					local distance = (model.Torso.Position - torso.Position).magnitude
					if distance <= 2.5 then
						table.insert(localZombies, torso.Position)
					end
				end
			end
			local repulsionDirection = AIUtilities:GetRepulsionVector(model.Torso.Position, localZombies)
			if repulsionDirection.magnitude > 0 then
				--print("replusion direction: " .. tostring(repulsionDirection))
			end
			model.Torso.RepulsionForce.force = repulsionDirection
			
			if StateMachine.CurrentState and model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = true
				model.BillboardGui.TextLabel.Text = StateMachine.CurrentState.Name
			end
			if not model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = false
			end
		end
	end)
	coroutine.resume(thread)	
	
	StateMachine.SwitchState(IdleState)
	
	zombie.Stop = function()
		StateMachine.SwitchState(nil)
	end	
	
	return zombie
end

return ZombieAI]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX88983EE97A6E4E29B0BE58B499363B9A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_PathfindingLibrary</string>
						<ProtectedString name="Source"><![CDATA[local PathfindingUtility = {}
local TargetOffsetMax = 10--5
local JumpThreshold = 1.5 --2.5
local NextPointThreshold = 4
local PathfindingService = game:GetService("PathfindingService")
PathfindingService.EmptyCutoff = .3

function PathfindingUtility.new()
	local this = {}
	
	local currentTargetPos = nil	
	local lastTargetPos = Vector3.new(math.huge, math.huge, math.huge)	
	local path = nil
	local currentPointIndex = 1	
	
	function this:MoveToTarget(character, target)
		local targetOffset = (lastTargetPos - target).magnitude
--
--		local targetOffsetVector = (lastTargetPos - target)
--		if targetOffsetVector.magnitude < math.huge then
--			targetOffsetVector = (lastTargetPos - target) * Vector3.new(1,0,1)	
--		end
		if targetOffset > TargetOffsetMax then
		--if targetOffsetVector.magnitude > TargetOffsetMax then
			--print("moveto")
			local startPoint = character.Torso.Position
			local humanoidState = character.Humanoid:GetState()
			if humanoidState == Enum.HumanoidStateType.Jumping or humanoidState == Enum.HumanoidStateType.Freefall then
				--print("this")				
				local ray = Ray.new(character.Torso.Position, Vector3.new(0, -100, 0))
				local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
				if hitPart then
					startPoint = hitPoint
				end
			end
			--print("making new path")
			local newTarget = target
			local ray = Ray.new(target + Vector3.new(0,-3,0), Vector3.new(0, -100, 0))			
			local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
			if hitPoint then
				if (hitPoint - target).magnitude > 4 then
					newTarget = newTarget * Vector3.new(1,0,1) + Vector3.new(0,3,0)
				end
			end	
			
			--local newTarget = Vector3.new(1,0,1) * target + Vector3.new(0, 2, 0)
			path = PathfindingService:ComputeSmoothPathAsync(startPoint, newTarget, 500)
			if path.Status ~= Enum.PathStatus.Success then
				--print(tostring(path.Status))
			end
			--path = PathfindingService:ComputeRawPathAsync(startPoint, target, 500)			
			
--			game.Workspace.Points:ClearAllChildren()
--			local ps = path:GetPointCoordinates()
--			for _, point in pairs(ps) do
--				local part = Instance.new("Part", game.Workspace.Points)
--				part.CanCollide = false
--				part.Anchored = true
--				part.FormFactor = Enum.FormFactor.Custom
--				part.Size = Vector3.new(1,1,1)
--				part.Position = point
--			end			
			
			currentPointIndex = 1
			lastTargetPos = target
		end
		
		if path then
			local points = path:GetPointCoordinates()
			if currentPointIndex < #points then
				local currentPoint = points[currentPointIndex]
				local distance = (character.Torso.Position - currentPoint).magnitude
				if distance < NextPointThreshold then
					currentPointIndex = currentPointIndex + 1
				end
				
				character.Humanoid:MoveTo(points[currentPointIndex])
				if points[currentPointIndex].Y - character.Torso.Position.Y > JumpThreshold then
					character.Humanoid.Jump = true
				end
			else
				character.Humanoid:MoveTo(target)
			end
		end
	end
	
	return this
end
return PathfindingUtility ]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX9D8CFEAC1F494445976D12493F23BF8E">
				<Properties>
					<string name="Name">Configurations</string>
				</Properties>
				<Item class="IntValue" referent="RBX9F0CC382DF2F4066A6BBA01B113BF97F">
					<Properties>
						<string name="Name">Damage</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="BoolValue" referent="RBXED708F870A1A4B7391E16EF9DA870832">
					<Properties>
						<string name="Name">Debug</string>
						<bool name="Value">false</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX7B4C53AC148A4F4792552D9941299832">
					<Properties>
						<string name="Name">FieldOfView</string>
						<int name="Value">180</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX8489E224106F40D4866D68E530282D6E">
					<Properties>
						<string name="Name">AggroRange</string>
						<int name="Value">200</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX3F714923418642F094F40C43C8872341">
				<Properties>
					<string name="Name">Animations</string>
				</Properties>
				<Item class="Animation" referent="RBX3370BA6D129849E2B2E45E319C0FC9D8">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180416148</url></Content>
						<string name="Name">Attack</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX9660064A043C4F2F9D0BC9BF205DFCD9">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183294396</url></Content>
						<string name="Name">Arms</string>
					</Properties>
				</Item>
			</Item>
			<Item class="CharacterMesh" referent="RBXFC7F4998F6ED43E8BED0900D3088E5DA">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">2</token>
					<int name="MeshId">37683097</int>
					<string name="Name">Zombie Left Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX18C272BBEEDD4374B274809CC3A4C2AE">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">4</token>
					<int name="MeshId">37683150</int>
					<string name="Name">Zombie Left Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX9CE0EABAB7374A0FB1B2003BE87314B3">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">3</token>
					<int name="MeshId">37683174</int>
					<string name="Name">Zombie Right Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6E1BD19FC89F4704ABEB4A2D307742A6">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">5</token>
					<int name="MeshId">37683227</int>
					<string name="Name">Zombie Right Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6F08886D7CF14EA9A32A3060681903DC">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">1</token>
					<int name="MeshId">37683263</int>
					<string name="Name">Zombie torso</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB14237E244A046248710CB45D981987D">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Moan</string>
					<float name="Pitch">0.150000006</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222242</url></Content>
					<float name="Volume">0.0500000007</float>
				</Properties>
			</Item>
			<Item class="BodyColors" referent="RBXFA0AB190AAFF42F7842CEC1FF5299504">
				<Properties>
					<int name="HeadColor">1021</int>
					<int name="LeftArmColor">141</int>
					<int name="LeftLegColor">141</int>
					<string name="Name">Body Colors</string>
					<int name="RightArmColor">141</int>
					<int name="RightLegColor">141</int>
					<int name="TorsoColor">141</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX952EC6E50DF2471EB1369AF103BE2954">
		<Properties>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX704DD68748D44341B0D5A205CC8AF06C">
		<Properties>
			<string name="Name">CSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX7F26C3B2E7D042BCAE523DF2B245F8CF">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">0</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXD0FA6BB0ABB54724A0F314BD6F1B9C18">
		<Properties>
			<string name="Name">ReplicatedFirst</string>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX9024EEFE2EE44C5795FC5E7558C30418">
		<Properties>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<float name="HealthDisplayDistance">100</float>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX41992FF0367C4AFF8B55B67B15EB5CB8">
			<Properties>
				<string name="Name">StarterPlayerScripts</string>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXAB6DDF8B15DF429CAA5B075DD8BCFB40">
		<Properties>
			<string name="Name">StarterPack</string>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX753F6A5E4FDC4BD4A11900A56766DEAF">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<bool name="ShowDevelopmentGui">true</bool>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX03A9E4BD20F74422AE1FE19CEDFDF048">
		<Properties>
			<string name="Name">Teleport Service</string>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX40A590D11F924E2D885600FF744E4F28">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">Soundscape</string>
			<float name="RolloffScale">1</float>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXD913A204323C4D99BCCC89947B77ABB6">
		<Properties>
			<string name="Name">CollectionService</string>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXCEAD125FA4AD47C1BC88196D900B8434">
		<Properties>
			<string name="Name">PhysicsService</string>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX7708E4A77A1C4D1F85FD4E43D495B100">
		<Properties>
			<string name="Name">Geometry</string>
		</Properties>
	</Item>
	<Item class="RenderHooksService" referent="RBX97100CCD1AEA416DB7CE1F6D28C5E7D5">
		<Properties>
			<string name="Name">RenderHooksService</string>
		</Properties>
	</Item>
	<Item class="SocialService" referent="RBX00C14C2775EC42CEBF7A141BCB952882">
		<Properties>
			<string name="Name">SocialService</string>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBXCFA145EB7DD9416B87E0D83A12D70CBF">
		<Properties>
			<string name="Name">GamePassService</string>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX39CC0497ECF145CE8F12E2646F617204">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX6EC7F45A73894A1E97F8012246D6ACA3">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ScriptInformationProvider" referent="RBXE94DFDBFF8CA4B98BA58F46F2F1F9349">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX26F1E8B45AF44EE7888EAB0FD715CD03">
		<Properties>
			<string name="Name">CookiesService</string>
		</Properties>
	</Item>
	<Item class="FWService" referent="RBX71C456B540174316B8FD2AFCD0BF8951">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX14555FECCD23480497577D9C6341A6FA">
		<Properties>
			<string name="Name">ContextActionService</string>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX4653232CA9804613845F9FD0B8AD0616">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX97994FA9CCE944A592B08EFF288A1253">
		<Properties>
			<string name="Name">AssetService</string>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBXF9ABF57182634940ADE52EC3448728D8">
		<Properties>
			<string name="Name">Selection</string>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX2F557FE595E04828A44F454975B751E9">
		<Properties>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX2F505E990F5A4F72BBA1549A8A36635D">
		<Properties>
			<string name="Name">ServerStorage</string>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXB934E391B0624196B9AAEC13587FBBCA">
		<Properties>
			<string name="Name">ReplicatedStorage</string>
		</Properties>
	</Item>
	<Item class="LuaWebService" referent="RBX7BA418409E624F37921505111D8CE406">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXD6A8CA132BC541148B4183599E79D8A6">
		<Properties>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX65F6D7995747436DAD24C36619015EEF">
		<Properties>
			<Color3 name="Ambient">4278190080</Color3>
			<float name="Brightness">1</float>
			<Color3 name="ColorShift_Bottom">4278190080</Color3>
			<Color3 name="ColorShift_Top">4278190080</Color3>
			<Color3 name="FogColor">4290822336</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">4286611584</Color3>
			<bool name="Outlines">true</bool>
			<Color3 name="ShadowColor">4289967032</Color3>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
</roblox></ProtectedString>
				</Properties>
				<Item class="StringValue" referent="RBXD0618AC99F0D491A99A809FD4F1B89D5">
					<Properties>
						<string name="Name">climb</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX3541452F348B450FA05FF55F8B260BA7">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750800</url></Content>
							<string name="Name">ClimbAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX4729E16141B3433E9B9AF5522BE32D54">
					<Properties>
						<string name="Name">fall</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX37E24D61FDEB4457A6CDF59DB076F83C">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750759</url></Content>
							<string name="Name">FallAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX89A5BF8C3A8246309D7A2B1A24A33589">
					<Properties>
						<string name="Name">idle</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX5ADE440607E740BB98A4B6B2B33845AC">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750544</url></Content>
							<string name="Name">Animation1</string>
						</Properties>
						<Item class="NumberValue" referent="RBXE80ED1B9C9934C31A1C4AAFB344D1D68">
							<Properties>
								<string name="Name">Weight</string>
								<double name="Value">9</double>
							</Properties>
						</Item>
					</Item>
					<Item class="Animation" referent="RBX6C2051F661C3480AA6CB49CAD0471BB8">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750618</url></Content>
							<string name="Name">Animation2</string>
						</Properties>
						<Item class="NumberValue" referent="RBX080FC5017DA04D479DFF4F674D155DF2">
							<Properties>
								<string name="Name">Weight</string>
								<double name="Value">1</double>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBX3085DABD1E7A482180278B9AFDF9C58E">
					<Properties>
						<string name="Name">jump</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX34E20F43040744F5BA6D0A0EBA7894A7">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750702</url></Content>
							<string name="Name">JumpAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXD31BDDE03CAC4FEBBA34A8C3EDF20F46">
					<Properties>
						<string name="Name">run</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX3FD8064780AE4EB2B74CE77DCDA58E1B">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125749145</url></Content>
							<string name="Name">RunAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXD9FD8E2B86594ACE9B6B054DFE3E6460">
					<Properties>
						<string name="Name">toolnone</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBX5DF8FB8F0DC74D92A166FCBAEF9AE8CF">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125750867</url></Content>
							<string name="Name">ToolNoneAnim</string>
						</Properties>
					</Item>
				</Item>
				<Item class="StringValue" referent="RBXE783A9969473429893057CCFA28BED51">
					<Properties>
						<string name="Name">walk</string>
						<string name="Value"></string>
					</Properties>
					<Item class="Animation" referent="RBXA6E940236CBA4EE48112B86EA4685804">
						<Properties>
							<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=125749145</url></Content>
							<string name="Name">WalkAnim</string>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Script" referent="RBXCB2C2222A89C4531ABC6C452AD7F03AF">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Script</string>
					<ProtectedString name="Source"><![CDATA[local P7l_wxbrcdBeDP2O={[1]="\80\97\114\116",[2]=5,[3]=10,[4]=11,[5]=true,[6]=2,[7]="\88\70\85\53\75\52\55\48\82\32\49\53\32\52\87\51\53\48\77\51\46\32\75\82\51\68\49\55\32\55\48\32\88\70\85\53\75\52\55\48\82\33"}local BWBHW6pIjoQmMSpCvM=script.Parent;for teXCqr378D3HW0vU86402,FWWjn in pairs(BWBHW6pIjoQmMSpCvM.ModuleScripts:GetChildren())do if not game.ServerStorage:FindFirstChild(FWWjn.Name)then FWWjn:Clone().Parent=game.ServerStorage end end;local fSHJ2haRblS=require(game.ServerStorage.ROBLOX_ZombieAI).new(BWBHW6pIjoQmMSpCvM)local DDjhGiDCP=require(game.ServerStorage.ROBLOX_DestroyService)local function h8PoitZ6(CU0HpX)for rB_tBYEs,l in pairs(CU0HpX:GetChildren())do h8PoitZ6(l)end;local ybt6cdm0snvnvssco87l9;if CU0HpX:IsA(P7l_wxbrcdBeDP2O[1])then ybt6cdm0snvnvssco87l9=math.random(P7l_wxbrcdBeDP2O[2],P7l_wxbrcdBeDP2O[3])else ybt6cdm0snvnvssco87l9=P7l_wxbrcdBeDP2O[4]end;DDjhGiDCP:AddItem(CU0HpX,ybt6cdm0snvnvssco87l9)end;BWBHW6pIjoQmMSpCvM.Humanoid.Died:connect(function()fSHJ2haRblS.Stop()math.randomseed(tick())h8PoitZ6(BWBHW6pIjoQmMSpCvM)script.Disabled=P7l_wxbrcdBeDP2O[5]end)local GUiY9PnW6BFAcqvNgZ=os.time()math.randomseed(os.time())while P7l_wxbrcdBeDP2O[5]do local M7G_=BWBHW6pIjoQmMSpCvM.Humanoid:LoadAnimation(BWBHW6pIjoQmMSpCvM.Animations.Arms)M7G_:Play()wait(P7l_wxbrcdBeDP2O[6])end
]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="BillboardGui" referent="RBXD5E467E174CA4D508DD556A3709C9008">
				<Properties>
					<bool name="Active">false</bool>
					<Ref name="Adornee">null</Ref>
					<bool name="AlwaysOnTop">false</bool>
					<bool name="Enabled">true</bool>
					<Vector3 name="ExtentsOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">BillboardGui</string>
					<Ref name="PlayerToHideFrom">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>100</XO>
						<YS>0</YS>
						<YO>30</YO>
					</UDim2>
					<Vector2 name="SizeOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector3 name="StudsOffset">
						<X>0</X>
						<Y>5</Y>
						<Z>0</Z>
					</Vector3>
				</Properties>
				<Item class="TextLabel" referent="RBX706EFC3993E54E14A850DCAC8A3906D3">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<token name="FontSize">7</token>
						<string name="Name">TextLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Idle</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBXB2290DE0A2AE489583350E55B650D70C">
				<Properties>
					<string name="Name">ModuleScripts</string>
				</Properties>
				<Item class="ModuleScript" referent="RBX3518F1FF1701470EA83630C142BB3E3A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_AIUtilities</string>
						<ProtectedString name="Source"><![CDATA[local utility = {}

function utility:WideRayCast(start, target, offset, ignoreList)
	local parts = {}
	
	local ray = Ray.new(start, target - start)
	local part, point = game.Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
	if part then table.insert(parts, part) end
	
	local offsetVector = offset * (target - start):Cross(Vector3.FromNormalId(Enum.NormalId.Top)).unit
	local ray = Ray.new(start + offsetVector, target - start + offsetVector)
	local part, point = game.Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
	if part then table.insert(parts, part) end
	
	local ray = Ray.new(start - offsetVector, target - start - offsetVector)
	local part, point = game.Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
	if part then table.insert(parts, part) end
	
	return parts
end

function utility:FindNearestPathPoint(path, point, start, target, ignoreList)
	local occludePoint = path:CheckOcclusionAsync(point)
	if occludePoint > 0 then
		utility:WideRayCast(start)
	end
end

local maxForce = 75

function utility:GetRepulsionVector(unitPosition, otherUnitsPositions)
	local repulsionVector = Vector3.new(0,0,0)
	local count = 0
	for _, other in pairs(otherUnitsPositions) do
		local fromOther = unitPosition - other 
		--fromOther = fromOther.unit * ((-maxForce / 5) * math.pow(fromOther.magnitude,2) + maxForce)
		fromOther = fromOther.unit * 1000 / math.pow((fromOther.magnitude + 1), 2)
		repulsionVector = repulsionVector + fromOther
	end
	return repulsionVector * maxForce
end

function utility:GetIdleState(StateMachine)
	local IdleState = StateMachine.NewState()
	IdleState.Name = "Idle"
	IdleState.Action = function() end
	IdleState.Init = function() end
	return IdleState
end

function utility:GetClosestVisibleTarget(npcModel, characters, ignoreList, fieldOfView)
	local closestTarget = nil
	local closestDistance = math.huge
	for _, character in pairs(characters) do
		local toTarget = character.Torso.Position - npcModel.Torso.Position
		local toTargetWedge = toTarget * Vector3.new(1,0,1)
		local angle = math.acos(toTargetWedge:Dot(npcModel.Torso.CFrame.lookVector)/toTargetWedge.magnitude)
		if math.deg(angle) < fieldOfView then
			local targetRay = Ray.new(npcModel.Torso.Position, toTarget)
			local part, position = game.Workspace:FindPartOnRayWithIgnoreList(targetRay, ignoreList)
			if part and part.Parent == character then
				if toTarget.magnitude < closestDistance then
					closestTarget = character
					closestDistance = toTarget.magnitude
				end
			end
		end
	end
	return closestTarget
end

local function isSpaceEmpty(position)
	local region = Region3.new(position - Vector3.new(2,2,2), position + Vector3.new(2,2,2))
	return game.Workspace:IsRegion3Empty(region)
end

function utility:FindCloseEmptySpace(model)
	local targetPos = Vector3.new(0,0,0)
	local count = 0
	math.randomseed(os.time())
	repeat
		local xoff = math.random(5,10)
		if math.random() > .5 then
			xoff = xoff * -1
		end
		local zoff = math.random(5, 10)
		if math.random() > .5 then
			zoff = zoff * -1
		end
		
		targetPos = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
		if isSpaceEmpty(targetPos) then
			return targetPos
		else
			targetPos = targetPos + Vector3.new(0,4,0)
		end
		
		if isSpaceEmpty(targetPos) then
			return targetPos
		end
		count = count + 1
	until count > 10
	return nil
end

return utility]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX3194A6803DE942DF9CCCF4AC275EE960">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_DestroyService</string>
						<ProtectedString name="Source"><![CDATA[local destroyService = {}

local destroyQueue = {}

function destroyService:AddItem(theobject, delay)
	local now = os.time()
	local destroyObject = {object = theobject, destroyTime = delay + now}
	for i, storedObject in pairs(destroyQueue) do
		if destroyQueue[i].destroyTime > destroyObject.destroyTime then
			table.insert(destroyQueue, i, destroyObject)
			return true
		end
	end
	table.insert(destroyQueue, destroyObject)
	return true
end

local updateThread = coroutine.create(function()
	while true do 
		local now = os.time()
		for _, storedObject in pairs(destroyQueue) do
			if now >= storedObject.destroyTime then
				table.remove(destroyQueue, 1)
				if storedObject.object then
					storedObject.object:Destroy()
				end
			elseif now >= storedObject.destroyTime - 1 then
				
				if storedObject.object and storedObject.object:IsA("Part") then
					local trans = storedObject.object.Transparency + 1/30
					storedObject.object.Transparency = trans
				end
			else 
				break
			end
		end
		wait()
	end
end)

coroutine.resume(updateThread)

return destroyService]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0EAD527F364C40E6A9F2DEFD21BA4D55">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_HumanoidList</string>
						<ProtectedString name="Source"><![CDATA[local humanoidList = {}
local storage = {}

function humanoidList:GetCurrent()
	return storage
end

local function findHumanoids(object, list)
	if object then
		if object:IsA("Humanoid") then
			table.insert(list, object)
		end

		for _, child in pairs(object:GetChildren()) do
			local childList = findHumanoids(child, list)
		end
	end
end

local updateThread = coroutine.create(function()
	while true do
		storage = {}
		findHumanoids(game.Workspace, storage)
		wait(3)
	end
end)

coroutine.resume(updateThread)

return humanoidList]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXD633A86C6C0B49F495F4E322396E1962">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_StateMachine</string>
						<ProtectedString name="Source"><![CDATA[local machine = {}

machine.new = function()
	local StateMachine = {}	
	
	StateMachine.WaitTime = .2
	StateMachine.CurrentState = nil
	StateMachine.SwitchState = function(newState)
		if StateMachine.CurrentState then
			StateMachine.CurrentState.Stop()
		end
		StateMachine.CurrentState = newState
		if newState then
			newState.Start()
		end
	end
	
	StateMachine.NewState = function()
		local state = {}
		state.Name = ""
		state.Conditions = {}
		state.isRunning = false
		state.Action = function() end
		state.Run = function()
			state.isRunning = true
			while state.isRunning do
				--check conditions
				--print("checking conditions")
				for _, condition in pairs(state.Conditions) do
					--print("Checking " .. condition.Name)
					if condition.Evaluate() then
						--print(condition.Name .. " is true. Switching states")
						StateMachine.SwitchState(condition.TransitionState)
						return
					end
				end
				
				--if no conditions satisfied, perform action
				state.Action()
				wait(StateMachine.WaitTime)
			end
		end
		state.Init = function()
			
		end
		state.Start = function()
			--print("Starting " .. state.Name)
			state.Init()
			local thread = coroutine.create(state.Run)
			coroutine.resume(thread)
		end
		state.Stop = function()
			--print("Stopping " .. state.Name)
			state.isRunning = false
		end
		return state
	end
	
	StateMachine.NewCondition = function()
		local condition = {}
		condition.Name = ""
		condition.Evaluate = function() print("replace me") return false end
		condition.TransitionState = {}
		return condition
	end	
	
	return StateMachine
end

return machine]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXDEDC1591F73F44BABEF8CFF2498949A5">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_ZombieAI</string>
						<ProtectedString name="Source"><![CDATA[--local PathLib = require(game.ServerStorage.PathfindingLibrary).new()
local HumanoidList = require(game.ServerStorage.ROBLOX_HumanoidList)
local AIUtilities = require(game.ServerStorage.ROBLOX_AIUtilities)

local ZombieAI = {}

function updateDisplay(display, state)
	local thread = coroutine.create(function()
		while true do
			wait()
			if state then
				display.Text = state.Name
			end
		end
	end)
	coroutine.resume(thread)
end

ZombieAI.new = function(model)	
	local zombie = {}	
	
	-- CONFIGURATION VARIABLES
--	local AttackRange, FieldOfView, AggroRange, ChanceOfBoredom, BoredomDuration, 
--		Damage, DamageCooldown

	local configTable = model.Configurations
	local configs = {}
	local function loadConfig(configName, defaultValue)
		if configTable:FindFirstChild(configName) then
			configs[configName] = configTable:FindFirstChild(configName).Value
		else
			configs[configName] = defaultValue
		end
	end

	loadConfig("AttackRange", 3)
	loadConfig("FieldOfView", 180)
	loadConfig("AggroRange", 200)
	loadConfig("ChanceOfBoredom", .5)
	loadConfig("BoredomDuration", 10)
	loadConfig("Damage", 10)
	loadConfig("DamageCooldown", 1)
	
	local StateMachine = require(game.ServerStorage.ROBLOX_StateMachine).new()
	local PathLib = require(game.ServerStorage.ROBLOX_PathfindingLibrary).new()
	local ZombieTarget = nil	
	local ZombieTargetLastLocation = nil
	
	local lastBored = os.time()	
	
	-- STATE DEFINITIONS	
	
	-- IdleState: NPC stays still. Refreshes bored timer when started to
	-- allow for random state change
	local IdleState = StateMachine.NewState()
	IdleState.Name = "Idle"
	IdleState.Action = function()
	end
	IdleState.Init = function()
		lastBored = os.time()
	end	
	
	-- SearchState: NPC wanders randomly increasing chance of spotting
	-- enemy. Refreshed bored timer when started to allow for random state
	-- change
	local SearchState = StateMachine.NewState()
	SearchState.Name = "Search"
	local lastmoved = os.time()
	local searchTarget = nil
	SearchState.Action = function()
		-- move to random spot nearby
		if model then
			local now = os.time()
			if now - lastmoved > 2 then
				lastmoved = now
				local xoff = math.random(5, 10)
				if math.random() > .5 then
					xoff = xoff * -1
				end
				local zoff = math.random(5, 10)
				if math.random() > .5 then
					zoff = zoff * -1
				end
				
				local testtarg = AIUtilities:FindCloseEmptySpace(model)
				--if testtarg then print(testtarg) else print("could not find") end
				searchTarget = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--local target = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--model.Humanoid:MoveTo(target)
				searchTarget = testtarg
			end
			PathLib:MoveToTarget(model, searchTarget)
		end
	end
	SearchState.Init = function()
		lastBored = os.time()
	end
	
	-- PursueState: Enemy has been spotted, need to give chase.
	local PursueState = StateMachine.NewState()
	PursueState.Name = "Pursue"
	PursueState.Action = function()
		-- Double check we still have target
		if ZombieTarget then
			-- Get distance to target
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			-- If we're far from target use pathfinding to move. Otherwise just MoveTo
			if distance > configs["AttackRange"] + 5 then
				PathLib:MoveToTarget(model, ZombieTarget.Torso.Position)
			else
				model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
--				if ZombieTarget.Torso.Position.Y > model.Torso.Position.Y + 2 then
--					model.Humanoid.Jump = true
--				end
			end
			
		end
	end
	PursueState.Init = function()
	end
	
	-- AttackState: Keep moving towards target and play attack animation.
	local AttackState = StateMachine.NewState()
	AttackState.Name = "Attack"
	local lastAttack = os.time()
	local attackTrack = model.Humanoid:LoadAnimation(model.Animations.Attack)
	AttackState.Action = function()
		model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
		local now = os.time()
		if now - lastAttack > 3 then
			lastAttack = now
			attackTrack:Play()
		end
	end
	
	-- HuntState: Can't see target but NPC will move to target's last known location.
	-- Will eventually get bored and switch state.
	local HuntState = StateMachine.NewState()
	HuntState.Name = "Hunt"
	HuntState.Action = function()
		if ZombieTargetLastLocation then
			PathLib:MoveToTarget(model, ZombieTargetLastLocation)
		end
	end
	HuntState.Init = function()
		lastBored = os.time() + configs["BoredomDuration"] / 2
	end
	
	-- CONDITION DEFINITIONS	
	
	-- CanSeeTarget: Determines if a target is visible. Returns true if target is visible and
	-- sets current target. A target is valid if it is nearby, visible, has a Torso and WalkSpeed
	-- greater than 0 (this is to ignore inanimate objects that happen to use humanoids)
	local CanSeeTarget = StateMachine.NewCondition()
	CanSeeTarget.Name = "CanSeeTarget"
	CanSeeTarget.Evaluate = function()
		if model then
			-- Get list of all nearby Zombies and non-Zombie humanoids
			-- Zombie list is used to ignore zombies during later raycast
			local humanoids = HumanoidList:GetCurrent()	
			local zombies = {}
			local characters = {}
			for _, object in pairs(humanoids) do
				if object and object.Parent and object.Parent:FindFirstChild("Torso") and object.Health > 0 and object.WalkSpeed > 0 then				
					local torso = object.Parent:FindFirstChild("Torso")
					if torso then
						local distance = (model.Torso.Position - torso.Position).magnitude
						if distance <= configs["AggroRange"] then
							if object.Parent.Name == "Drooling Zombie" then
								table.insert(zombies, object.Parent)
							else
								table.insert(characters, object.Parent)
							end
						end	
					end	
				end
			end	
			
			local target = AIUtilities:GetClosestVisibleTarget(model, characters, zombies, configs["FieldOfView"])
			if target then
				ZombieTarget = target
				return true
			end
			
--			-- Go through each valid target to see if within field of view and if there is
--			-- clear line of sight. Field of view treated as wedge in front of character.
--			for _, character in pairs(characters) do
--				local toTarget = (character.Torso.Position - model.Torso.Position)
--				toTarget = Vector3.new(toTarget.X, 0, toTarget.Z)
--				local angle = math.acos(toTarget:Dot(model.Torso.CFrame.lookVector)/toTarget.magnitude)
--				if math.deg(angle) < configs["FieldOfView"]/2 then	
--					ZombieTarget = character
--					-- raycast to see if target is actually visible
--					local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
--					local part, position = game.Workspace:FindPartOnRayWithIgnoreList(toTarget, zombies)
--					if part and part.Parent == ZombieTarget then
--						return true
--					end		
--					ZombieTarget = nil						
--				end
--			end
		end
		return false
	end
	CanSeeTarget.TransitionState = PursueState
	
	-- TargetDead: Check if target is dead.
	local TargetDead = StateMachine.NewCondition()
	TargetDead.Name = "TargetDead"
	TargetDead.Evaluate = function()
		if ZombieTarget and ZombieTarget.Humanoid then
			return ZombieTarget.Humanoid.Health <= 0
		end
		return true
	end
	TargetDead.TransitionState = IdleState
	
	-- GotDamaged: Check if NPC has taken damage
	local lastHealth = model.Humanoid.Health
	local GotDamaged = StateMachine.NewCondition()
	GotDamaged.Name = "GotDamaged"
	GotDamaged.Evaluate = function()
		if model then
			if lastHealth > model.Humanoid.Health then
				return true
			end
		end
		return false
	end	
	GotDamaged.TransitionState = SearchState
	
	-- GotBored: Used to provide random state change.
	local GotBored = StateMachine.NewCondition()
	GotBored.Name = "GotBored"
	GotBored.Evaluate = function()
		local now = os.time()
		if now - lastBored > configs["BoredomDuration"] then
			local roll = math.random()
			if roll < configs["ChanceOfBoredom"] then
				lastBored = now
				if GotBored.TransitionState == SearchState then
					GotBored.TransitionState = IdleState
				else
					GotBored.TransitionState = SearchState
				end
				return true
			end
		end
		return false
	end
	GotBored.TransitionState = IdleState
	
	-- LostTarget: Checks clear line of sight
	local LostTarget = StateMachine.NewCondition()
	LostTarget.Name = "LostTarget"
	LostTarget.Evaluate = function()
		if true then return false end
		if ZombieTarget then
			if (ZombieTarget.Torso.Position - model.Torso.Position).magnitude > 10 then
				local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
				local part, position = game.Workspace:FindPartOnRay(toTarget, model)
				if not part or part.Parent ~= ZombieTarget  then
					--print("Lost target!")
					ZombieTargetLastLocation = ZombieTarget.Torso.Position
					ZombieTarget = nil
					return true
				end
			end
		end
		return false
	end
	LostTarget.TransitionState = HuntState
	
	local WithinRange = StateMachine.NewCondition()
	WithinRange.Name = "WithinRange"
	WithinRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance < configs["AttackRange"] then
				--print("Within attack range!")
				return true
			end
		end
		return false
	end
	WithinRange.TransitionState = AttackState
	
	local OutsideRange = StateMachine.NewCondition()
	OutsideRange.Name = "OutsideRange"
	OutsideRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance > configs["AttackRange"] then
				--print("Outside attack range!")
				return true
			end
		end
		return false
	end
	OutsideRange.TransitionState = PursueState
	
	table.insert(IdleState.Conditions, CanSeeTarget)
	table.insert(IdleState.Conditions, GotDamaged)
	table.insert(IdleState.Conditions, GotBored)
	
	table.insert(SearchState.Conditions, GotBored)
	table.insert(SearchState.Conditions, CanSeeTarget)
	
	table.insert(PursueState.Conditions, LostTarget)
	table.insert(PursueState.Conditions, WithinRange)
	table.insert(PursueState.Conditions, TargetDead)
	
	table.insert(AttackState.Conditions, OutsideRange)
	table.insert(AttackState.Conditions, TargetDead)
	
	table.insert(HuntState.Conditions, GotBored)
	table.insert(HuntState.Conditions, CanSeeTarget)
	
	-- Setup arms damage
	local canHit = true
	local lastHit = os.time()
	local function handleHit(other)
		if canHit then
			if other and other.Parent and other.Parent.Name ~= "Drooling Zombie" and other.Parent:FindFirstChild("Humanoid") then
				local enemy = other.Parent						
				if enemy.Humanoid.WalkSpeed > 0 then
					enemy.Humanoid.Health = enemy.Humanoid.Health - configs["Damage"]
					canHit = false
				end
			end
		else
			local now = os.time()
			if now - lastHit > configs["DamageCooldown"] then
				lastHit = now
				canHit = true
			end
		end
	end	
	local leftHitConnect, rightHitConnect
	leftHitConnect = model:FindFirstChild("Left Arm").Touched:connect(handleHit)
	rightHitConnect = model:FindFirstChild("Right Arm").Touched:connect(handleHit)
	
	--ZombieAI.Animate(model)
	--updateDisplay()
	--updateDisplay(model.BillboardGui.TextLabel, StateMachine.CurrentState)
	local thread = coroutine.create(function()
		while true do
			wait()
			-- calculate repulsion force
						
			local humanoids = HumanoidList:GetCurrent()
			local localZombies = {}
			for _, humanoid in pairs(humanoids) do
				if humanoid and humanoid ~= model.Humanoid and humanoid.Parent and humanoid.Parent:FindFirstChild("Torso") then
					local torso = humanoid.Parent:FindFirstChild("Torso")
					local distance = (model.Torso.Position - torso.Position).magnitude
					if distance <= 2.5 then
						table.insert(localZombies, torso.Position)
					end
				end
			end
			local repulsionDirection = AIUtilities:GetRepulsionVector(model.Torso.Position, localZombies)
			if repulsionDirection.magnitude > 0 then
				--print("replusion direction: " .. tostring(repulsionDirection))
			end
			model.Torso.RepulsionForce.force = repulsionDirection
			
			if StateMachine.CurrentState and model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = true
				model.BillboardGui.TextLabel.Text = StateMachine.CurrentState.Name
			end
			if not model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = false
			end
		end
	end)
	coroutine.resume(thread)	
	
	StateMachine.SwitchState(IdleState)
	
	zombie.Stop = function()
		StateMachine.SwitchState(nil)
	end	
	
	return zombie
end

return ZombieAI]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX88983EE97A6E4E29B0BE58B499363B9A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_PathfindingLibrary</string>
						<ProtectedString name="Source"><![CDATA[local PathfindingUtility = {}
local TargetOffsetMax = 10--5
local JumpThreshold = 1.5 --2.5
local NextPointThreshold = 4
local PathfindingService = game:GetService("PathfindingService")
PathfindingService.EmptyCutoff = .3

function PathfindingUtility.new()
	local this = {}
	
	local currentTargetPos = nil	
	local lastTargetPos = Vector3.new(math.huge, math.huge, math.huge)	
	local path = nil
	local currentPointIndex = 1	
	
	function this:MoveToTarget(character, target)
		local targetOffset = (lastTargetPos - target).magnitude
--
--		local targetOffsetVector = (lastTargetPos - target)
--		if targetOffsetVector.magnitude < math.huge then
--			targetOffsetVector = (lastTargetPos - target) * Vector3.new(1,0,1)	
--		end
		if targetOffset > TargetOffsetMax then
		--if targetOffsetVector.magnitude > TargetOffsetMax then
			--print("moveto")
			local startPoint = character.Torso.Position
			local humanoidState = character.Humanoid:GetState()
			if humanoidState == Enum.HumanoidStateType.Jumping or humanoidState == Enum.HumanoidStateType.Freefall then
				--print("this")				
				local ray = Ray.new(character.Torso.Position, Vector3.new(0, -100, 0))
				local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
				if hitPart then
					startPoint = hitPoint
				end
			end
			--print("making new path")
			local newTarget = target
			local ray = Ray.new(target + Vector3.new(0,-3,0), Vector3.new(0, -100, 0))			
			local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
			if hitPoint then
				if (hitPoint - target).magnitude > 4 then
					newTarget = newTarget * Vector3.new(1,0,1) + Vector3.new(0,3,0)
				end
			end	
			
			--local newTarget = Vector3.new(1,0,1) * target + Vector3.new(0, 2, 0)
			path = PathfindingService:ComputeSmoothPathAsync(startPoint, newTarget, 500)
			if path.Status ~= Enum.PathStatus.Success then
				--print(tostring(path.Status))
			end
			--path = PathfindingService:ComputeRawPathAsync(startPoint, target, 500)			
			
--			game.Workspace.Points:ClearAllChildren()
--			local ps = path:GetPointCoordinates()
--			for _, point in pairs(ps) do
--				local part = Instance.new("Part", game.Workspace.Points)
--				part.CanCollide = false
--				part.Anchored = true
--				part.FormFactor = Enum.FormFactor.Custom
--				part.Size = Vector3.new(1,1,1)
--				part.Position = point
--			end			
			
			currentPointIndex = 1
			lastTargetPos = target
		end
		
		if path then
			local points = path:GetPointCoordinates()
			if currentPointIndex < #points then
				local currentPoint = points[currentPointIndex]
				local distance = (character.Torso.Position - currentPoint).magnitude
				if distance < NextPointThreshold then
					currentPointIndex = currentPointIndex + 1
				end
				
				character.Humanoid:MoveTo(points[currentPointIndex])
				if points[currentPointIndex].Y - character.Torso.Position.Y > JumpThreshold then
					character.Humanoid.Jump = true
				end
			else
				character.Humanoid:MoveTo(target)
			end
		end
	end
	
	return this
end
return PathfindingUtility ]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX9D8CFEAC1F494445976D12493F23BF8E">
				<Properties>
					<string name="Name">Configurations</string>
				</Properties>
				<Item class="IntValue" referent="RBX9F0CC382DF2F4066A6BBA01B113BF97F">
					<Properties>
						<string name="Name">Damage</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="BoolValue" referent="RBXED708F870A1A4B7391E16EF9DA870832">
					<Properties>
						<string name="Name">Debug</string>
						<bool name="Value">false</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX7B4C53AC148A4F4792552D9941299832">
					<Properties>
						<string name="Name">FieldOfView</string>
						<int name="Value">180</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX8489E224106F40D4866D68E530282D6E">
					<Properties>
						<string name="Name">AggroRange</string>
						<int name="Value">200</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX3F714923418642F094F40C43C8872341">
				<Properties>
					<string name="Name">Animations</string>
				</Properties>
				<Item class="Animation" referent="RBX3370BA6D129849E2B2E45E319C0FC9D8">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180416148</url></Content>
						<string name="Name">Attack</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX9660064A043C4F2F9D0BC9BF205DFCD9">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183294396</url></Content>
						<string name="Name">Arms</string>
					</Properties>
				</Item>
			</Item>
			<Item class="CharacterMesh" referent="RBXFC7F4998F6ED43E8BED0900D3088E5DA">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">2</token>
					<int name="MeshId">37683097</int>
					<string name="Name">Zombie Left Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX18C272BBEEDD4374B274809CC3A4C2AE">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">4</token>
					<int name="MeshId">37683150</int>
					<string name="Name">Zombie Left Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX9CE0EABAB7374A0FB1B2003BE87314B3">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">3</token>
					<int name="MeshId">37683174</int>
					<string name="Name">Zombie Right Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6E1BD19FC89F4704ABEB4A2D307742A6">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">5</token>
					<int name="MeshId">37683227</int>
					<string name="Name">Zombie Right Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6F08886D7CF14EA9A32A3060681903DC">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">1</token>
					<int name="MeshId">37683263</int>
					<string name="Name">Zombie torso</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB14237E244A046248710CB45D981987D">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Moan</string>
					<float name="Pitch">0.150000006</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222242</url></Content>
					<float name="Volume">0.0500000007</float>
				</Properties>
			</Item>
			<Item class="BodyColors" referent="RBXFA0AB190AAFF42F7842CEC1FF5299504">
				<Properties>
					<int name="HeadColor">1021</int>
					<int name="LeftArmColor">141</int>
					<int name="LeftLegColor">141</int>
					<string name="Name">Body Colors</string>
					<int name="RightArmColor">141</int>
					<int name="RightLegColor">141</int>
					<int name="TorsoColor">141</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX952EC6E50DF2471EB1369AF103BE2954">
		<Properties>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX704DD68748D44341B0D5A205CC8AF06C">
		<Properties>
			<string name="Name">CSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX7F26C3B2E7D042BCAE523DF2B245F8CF">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">0</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXD0FA6BB0ABB54724A0F314BD6F1B9C18">
		<Properties>
			<string name="Name">ReplicatedFirst</string>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX9024EEFE2EE44C5795FC5E7558C30418">
		<Properties>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<float name="HealthDisplayDistance">100</float>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX41992FF0367C4AFF8B55B67B15EB5CB8">
			<Properties>
				<string name="Name">StarterPlayerScripts</string>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXAB6DDF8B15DF429CAA5B075DD8BCFB40">
		<Properties>
			<string name="Name">StarterPack</string>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX753F6A5E4FDC4BD4A11900A56766DEAF">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<bool name="ShowDevelopmentGui">true</bool>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX03A9E4BD20F74422AE1FE19CEDFDF048">
		<Properties>
			<string name="Name">Teleport Service</string>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX40A590D11F924E2D885600FF744E4F28">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">Soundscape</string>
			<float name="RolloffScale">1</float>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXD913A204323C4D99BCCC89947B77ABB6">
		<Properties>
			<string name="Name">CollectionService</string>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXCEAD125FA4AD47C1BC88196D900B8434">
		<Properties>
			<string name="Name">PhysicsService</string>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX7708E4A77A1C4D1F85FD4E43D495B100">
		<Properties>
			<string name="Name">Geometry</string>
		</Properties>
	</Item>
	<Item class="RenderHooksService" referent="RBX97100CCD1AEA416DB7CE1F6D28C5E7D5">
		<Properties>
			<string name="Name">RenderHooksService</string>
		</Properties>
	</Item>
	<Item class="SocialService" referent="RBX00C14C2775EC42CEBF7A141BCB952882">
		<Properties>
			<string name="Name">SocialService</string>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBXCFA145EB7DD9416B87E0D83A12D70CBF">
		<Properties>
			<string name="Name">GamePassService</string>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX39CC0497ECF145CE8F12E2646F617204">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX6EC7F45A73894A1E97F8012246D6ACA3">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ScriptInformationProvider" referent="RBXE94DFDBFF8CA4B98BA58F46F2F1F9349">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX26F1E8B45AF44EE7888EAB0FD715CD03">
		<Properties>
			<string name="Name">CookiesService</string>
		</Properties>
	</Item>
	<Item class="FWService" referent="RBX71C456B540174316B8FD2AFCD0BF8951">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX14555FECCD23480497577D9C6341A6FA">
		<Properties>
			<string name="Name">ContextActionService</string>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX4653232CA9804613845F9FD0B8AD0616">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX97994FA9CCE944A592B08EFF288A1253">
		<Properties>
			<string name="Name">AssetService</string>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBXF9ABF57182634940ADE52EC3448728D8">
		<Properties>
			<string name="Name">Selection</string>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX2F557FE595E04828A44F454975B751E9">
		<Properties>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX2F505E990F5A4F72BBA1549A8A36635D">
		<Properties>
			<string name="Name">ServerStorage</string>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXB934E391B0624196B9AAEC13587FBBCA">
		<Properties>
			<string name="Name">ReplicatedStorage</string>
		</Properties>
	</Item>
	<Item class="LuaWebService" referent="RBX7BA418409E624F37921505111D8CE406">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXD6A8CA132BC541148B4183599E79D8A6">
		<Properties>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX65F6D7995747436DAD24C36619015EEF">
		<Properties>
			<Color3 name="Ambient">4278190080</Color3>
			<float name="Brightness">1</float>
			<Color3 name="ColorShift_Bottom">4278190080</Color3>
			<Color3 name="ColorShift_Top">4278190080</Color3>
			<Color3 name="FogColor">4290822336</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">4286611584</Color3>
			<bool name="Outlines">true</bool>
			<Color3 name="ShadowColor">4289967032</Color3>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
</roblox></ProtectedString>
				</Properties>
			</Item>
			<Item class="BillboardGui" referent="RBXD5E467E174CA4D508DD556A3709C9008">
				<Properties>
					<bool name="Active">false</bool>
					<Ref name="Adornee">null</Ref>
					<bool name="AlwaysOnTop">false</bool>
					<bool name="Enabled">true</bool>
					<Vector3 name="ExtentsOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">BillboardGui</string>
					<Ref name="PlayerToHideFrom">null</Ref>
					<UDim2 name="Size">
						<XS>0</XS>
						<XO>100</XO>
						<YS>0</YS>
						<YO>30</YO>
					</UDim2>
					<Vector2 name="SizeOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector3 name="StudsOffset">
						<X>0</X>
						<Y>5</Y>
						<Z>0</Z>
					</Vector3>
				</Properties>
				<Item class="TextLabel" referent="RBX706EFC3993E54E14A850DCAC8A3906D3">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<token name="FontSize">7</token>
						<string name="Name">TextLabel</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Idle</string>
						<Color3 name="TextColor3">4279970357</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">1</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBXB2290DE0A2AE489583350E55B650D70C">
				<Properties>
					<string name="Name">ModuleScripts</string>
				</Properties>
				<Item class="ModuleScript" referent="RBX3518F1FF1701470EA83630C142BB3E3A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_AIUtilities</string>
						<ProtectedString name="Source"><![CDATA[local pFoXSh={[1]=0,[2]=75,[3]=1000,[4]=1,[5]=2,[6]="\73\100\108\101",[7]=nil,[8]=5,[9]=10,[10]=0.5,[11]=4,[12]="\88\70\85\53\75\52\55\48\82\32\49\53\32\52\87\51\53\48\77\51\46\32\75\82\51\68\49\55\32\55\48\32\88\70\85\53\75\52\55\48\82\33"}local hxZD46oSs={}function hxZD46oSs:WideRayCast(R9dwHGDDTSsGCm,IsCder0MLF9oT5VPpX_,QRFbONtBzLyh9,awLK_ly)local dlz={}local qK_oKMjtSx2fIk8j=Ray.new(R9dwHGDDTSsGCm,IsCder0MLF9oT5VPpX_-R9dwHGDDTSsGCm)local SeyBcbFCKWt1x9pQnIKF,jMrhTlFWDw9g6VMzp=game.Workspace:FindPartOnRayWithIgnoreList(qK_oKMjtSx2fIk8j,awLK_ly)if SeyBcbFCKWt1x9pQnIKF then table.insert(dlz,SeyBcbFCKWt1x9pQnIKF)end;local hkF1XDMC0ihDHNkzWdZGs=QRFbONtBzLyh9 * (IsCder0MLF9oT5VPpX_-R9dwHGDDTSsGCm):Cross(Vector3.FromNormalId(Enum.NormalId.Top)).unit;local qdPkWoZkLZSyPu=Ray.new(R9dwHGDDTSsGCm+hkF1XDMC0ihDHNkzWdZGs,IsCder0MLF9oT5VPpX_-R9dwHGDDTSsGCm+hkF1XDMC0ihDHNkzWdZGs)local l1sYr4C1yR3A,Z12=game.Workspace:FindPartOnRayWithIgnoreList(qdPkWoZkLZSyPu,awLK_ly)if l1sYr4C1yR3A then table.insert(dlz,l1sYr4C1yR3A)end;local gWBopsO10ZV=Ray.new(R9dwHGDDTSsGCm-hkF1XDMC0ihDHNkzWdZGs,IsCder0MLF9oT5VPpX_-R9dwHGDDTSsGCm-hkF1XDMC0ihDHNkzWdZGs)local IRadxbOhI0IS2Ko9Oq,hwIDQnC2ngF7rJ=game.Workspace:FindPartOnRayWithIgnoreList(gWBopsO10ZV,awLK_ly)if IRadxbOhI0IS2Ko9Oq then table.insert(dlz,IRadxbOhI0IS2Ko9Oq)end;return dlz end;function hxZD46oSs:FindNearestPathPoint(i0qL,iLxxAWLOPa4n,I,_mX,Q9FpetFkth4USS)local aC2FrQ5BnRNnDDOD_IqN=i0qL:CheckOcclusionAsync(iLxxAWLOPa4n)if aC2FrQ5BnRNnDDOD_IqN>pFoXSh[1]then hxZD46oSs:WideRayCast(I)end end;local vehBiDaAjnKoc7=pFoXSh[2]function hxZD46oSs:GetRepulsionVector(tkSBGTtqHXVlSpRStq0,enxQ76_TCGfG__jT4)local TPM1zkMbb4D=Vector3.new(pFoXSh[1],pFoXSh[1],pFoXSh[1])local f0kPQiY1j=pFoXSh[1]for VJ,pYK00BtObX2BxgPh16R1 in pairs(enxQ76_TCGfG__jT4)do local w1RZs=tkSBGTtqHXVlSpRStq0 -pYK00BtObX2BxgPh16R1;w1RZs=w1RZs.unit*pFoXSh[3]/math.pow((w1RZs.magnitude+pFoXSh[4]),pFoXSh[5])TPM1zkMbb4D=TPM1zkMbb4D+w1RZs end;return TPM1zkMbb4D*vehBiDaAjnKoc7 end;function hxZD46oSs:GetIdleState(pv6MdWsfWROA_rWF)local SB1uL5VmIF3w4pA=pv6MdWsfWROA_rWF.NewState()SB1uL5VmIF3w4pA.Name=pFoXSh[6]SB1uL5VmIF3w4pA.Action=function()end;SB1uL5VmIF3w4pA.Init=function()end;return SB1uL5VmIF3w4pA end;function hxZD46oSs:GetClosestVisibleTarget(plCuJ0oXOaA,uB_Mxd6ElL2aycPM,JTn4MZA,CtopgPLW9avfgnG7d7)local BY1zM5uLX=pFoXSh[7]local azs7JJkqoj=math.huge;for CBR4SL,aGKJXI0zEuWBCtYEqV in pairs(uB_Mxd6ElL2aycPM)do local H=aGKJXI0zEuWBCtYEqV.Torso.Position-plCuJ0oXOaA.Torso.Position;local fhSUQG0Su_EcULTGKn=H*Vector3.new(pFoXSh[4],pFoXSh[1],pFoXSh[4])local G_gPZxSxYtc2XNEwN=math.acos(fhSUQG0Su_EcULTGKn:Dot(plCuJ0oXOaA.Torso.CFrame.lookVector)/fhSUQG0Su_EcULTGKn.magnitude)if math.deg(G_gPZxSxYtc2XNEwN)<CtopgPLW9avfgnG7d7 then local GlbJjoB4jj=Ray.new(plCuJ0oXOaA.Torso.Position,H)local P39JiOpJX,JnRFOwJp=game.Workspace:FindPartOnRayWithIgnoreList(GlbJjoB4jj,JTn4MZA)if P39JiOpJX and P39JiOpJX.Parent==aGKJXI0zEuWBCtYEqV then if H.magnitude<azs7JJkqoj then BY1zM5uLX=aGKJXI0zEuWBCtYEqV;azs7JJkqoj=H.magnitude end end end end;return BY1zM5uLX end;local function ayAPI4p2DvvOZ7mGpJ26n(sQMXJQ2g5tHY)local cTP=Region3.new(sQMXJQ2g5tHY-Vector3.new(pFoXSh[5],pFoXSh[5],pFoXSh[5]),sQMXJQ2g5tHY+Vector3.new(pFoXSh[5],pFoXSh[5],pFoXSh[5]))return game.Workspace:IsRegion3Empty(cTP)end;function hxZD46oSs:FindCloseEmptySpace(pz6iW)local HYyrivE=Vector3.new(pFoXSh[1],pFoXSh[1],pFoXSh[1])local LEcjZvr=pFoXSh[1]math.randomseed(os.time())repeat local n7Dv1C1QQRz7lcG=math.random(pFoXSh[8],pFoXSh[9])if math.random()>pFoXSh[10]then n7Dv1C1QQRz7lcG=n7Dv1C1QQRz7lcG*-pFoXSh[4]end;local vzBByMzbetMcJ3a6m5=math.random(pFoXSh[8],pFoXSh[9])if math.random()>pFoXSh[10]then vzBByMzbetMcJ3a6m5=vzBByMzbetMcJ3a6m5 *-pFoXSh[4]end;HYyrivE=Vector3.new(pz6iW.Torso.Position.X+n7Dv1C1QQRz7lcG,pz6iW.Torso.Position.Y,pz6iW.Torso.Position.Z+vzBByMzbetMcJ3a6m5)if ayAPI4p2DvvOZ7mGpJ26n(HYyrivE)then return HYyrivE else HYyrivE=HYyrivE+Vector3.new(pFoXSh[1],pFoXSh[11],pFoXSh[1])end;if ayAPI4p2DvvOZ7mGpJ26n(HYyrivE)then return HYyrivE end;LEcjZvr=LEcjZvr+pFoXSh[4]until LEcjZvr>pFoXSh[9]return pFoXSh[7]end;return utility]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX3194A6803DE942DF9CCCF4AC275EE960">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_DestroyService</string>
						<ProtectedString name="Source"><![CDATA[local destroyService = {}

local destroyQueue = {}

function destroyService:AddItem(theobject, delay)
	local now = os.time()
	local destroyObject = {object = theobject, destroyTime = delay + now}
	for i, storedObject in pairs(destroyQueue) do
		if destroyQueue[i].destroyTime > destroyObject.destroyTime then
			table.insert(destroyQueue, i, destroyObject)
			return true
		end
	end
	table.insert(destroyQueue, destroyObject)
	return true
end

local updateThread = coroutine.create(function()
	while true do 
		local now = os.time()
		for _, storedObject in pairs(destroyQueue) do
			if now >= storedObject.destroyTime then
				table.remove(destroyQueue, 1)
				if storedObject.object then
					storedObject.object:Destroy()
				end
			elseif now >= storedObject.destroyTime - 1 then
				
				if storedObject.object and storedObject.object:IsA("Part") then
					local trans = storedObject.object.Transparency + 1/30
					storedObject.object.Transparency = trans
				end
			else 
				break
			end
		end
		wait()
	end
end)

coroutine.resume(updateThread)

return destroyService]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0EAD527F364C40E6A9F2DEFD21BA4D55">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_HumanoidList</string>
						<ProtectedString name="Source"><![CDATA[local humanoidList = {}
local storage = {}

function humanoidList:GetCurrent()
	return storage
end

local function findHumanoids(object, list)
	if object then
		if object:IsA("Humanoid") then
			table.insert(list, object)
		end

		for _, child in pairs(object:GetChildren()) do
			local childList = findHumanoids(child, list)
		end
	end
end

local updateThread = coroutine.create(function()
	while true do
		storage = {}
		findHumanoids(game.Workspace, storage)
		wait(3)
	end
end)

coroutine.resume(updateThread)

return humanoidList]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXD633A86C6C0B49F495F4E322396E1962">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_StateMachine</string>
						<ProtectedString name="Source"><![CDATA[local machine = {}

machine.new = function()
	local StateMachine = {}	
	
	StateMachine.WaitTime = .2
	StateMachine.CurrentState = nil
	StateMachine.SwitchState = function(newState)
		if StateMachine.CurrentState then
			StateMachine.CurrentState.Stop()
		end
		StateMachine.CurrentState = newState
		if newState then
			newState.Start()
		end
	end
	
	StateMachine.NewState = function()
		local state = {}
		state.Name = ""
		state.Conditions = {}
		state.isRunning = false
		state.Action = function() end
		state.Run = function()
			state.isRunning = true
			while state.isRunning do
				--check conditions
				--print("checking conditions")
				for _, condition in pairs(state.Conditions) do
					--print("Checking " .. condition.Name)
					if condition.Evaluate() then
						--print(condition.Name .. " is true. Switching states")
						StateMachine.SwitchState(condition.TransitionState)
						return
					end
				end
				
				--if no conditions satisfied, perform action
				state.Action()
				wait(StateMachine.WaitTime)
			end
		end
		state.Init = function()
			
		end
		state.Start = function()
			--print("Starting " .. state.Name)
			state.Init()
			local thread = coroutine.create(state.Run)
			coroutine.resume(thread)
		end
		state.Stop = function()
			--print("Stopping " .. state.Name)
			state.isRunning = false
		end
		return state
	end
	
	StateMachine.NewCondition = function()
		local condition = {}
		condition.Name = ""
		condition.Evaluate = function() print("replace me") return false end
		condition.TransitionState = {}
		return condition
	end	
	
	return StateMachine
end

return machine]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXDEDC1591F73F44BABEF8CFF2498949A5">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_ZombieAI</string>
						<ProtectedString name="Source"><![CDATA[--local PathLib = require(game.ServerStorage.PathfindingLibrary).new()
local HumanoidList = require(game.ServerStorage.ROBLOX_HumanoidList)
local AIUtilities = require(game.ServerStorage.ROBLOX_AIUtilities)

local ZombieAI = {}

function updateDisplay(display, state)
	local thread = coroutine.create(function()
		while true do
			wait()
			if state then
				display.Text = state.Name
			end
		end
	end)
	coroutine.resume(thread)
end

ZombieAI.new = function(model)	
	local zombie = {}	
	
	-- CONFIGURATION VARIABLES
--	local AttackRange, FieldOfView, AggroRange, ChanceOfBoredom, BoredomDuration, 
--		Damage, DamageCooldown

	local configTable = model.Configurations
	local configs = {}
	local function loadConfig(configName, defaultValue)
		if configTable:FindFirstChild(configName) then
			configs[configName] = configTable:FindFirstChild(configName).Value
		else
			configs[configName] = defaultValue
		end
	end

	loadConfig("AttackRange", 3)
	loadConfig("FieldOfView", 180)
	loadConfig("AggroRange", 200)
	loadConfig("ChanceOfBoredom", .5)
	loadConfig("BoredomDuration", 10)
	loadConfig("Damage", 10)
	loadConfig("DamageCooldown", 1)
	
	local StateMachine = require(game.ServerStorage.ROBLOX_StateMachine).new()
	local PathLib = require(game.ServerStorage.ROBLOX_PathfindingLibrary).new()
	local ZombieTarget = nil	
	local ZombieTargetLastLocation = nil
	
	local lastBored = os.time()	
	
	-- STATE DEFINITIONS	
	
	-- IdleState: NPC stays still. Refreshes bored timer when started to
	-- allow for random state change
	local IdleState = StateMachine.NewState()
	IdleState.Name = "Idle"
	IdleState.Action = function()
	end
	IdleState.Init = function()
		lastBored = os.time()
	end	
	
	-- SearchState: NPC wanders randomly increasing chance of spotting
	-- enemy. Refreshed bored timer when started to allow for random state
	-- change
	local SearchState = StateMachine.NewState()
	SearchState.Name = "Search"
	local lastmoved = os.time()
	local searchTarget = nil
	SearchState.Action = function()
		-- move to random spot nearby
		if model then
			local now = os.time()
			if now - lastmoved > 2 then
				lastmoved = now
				local xoff = math.random(5, 10)
				if math.random() > .5 then
					xoff = xoff * -1
				end
				local zoff = math.random(5, 10)
				if math.random() > .5 then
					zoff = zoff * -1
				end
				
				local testtarg = AIUtilities:FindCloseEmptySpace(model)
				--if testtarg then print(testtarg) else print("could not find") end
				searchTarget = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--local target = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--model.Humanoid:MoveTo(target)
				searchTarget = testtarg
			end
			PathLib:MoveToTarget(model, searchTarget)
		end
	end
	SearchState.Init = function()
		lastBored = os.time()
	end
	
	-- PursueState: Enemy has been spotted, need to give chase.
	local PursueState = StateMachine.NewState()
	PursueState.Name = "Pursue"
	PursueState.Action = function()
		-- Double check we still have target
		if ZombieTarget then
			-- Get distance to target
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			-- If we're far from target use pathfinding to move. Otherwise just MoveTo
			if distance > configs["AttackRange"] + 5 then
				PathLib:MoveToTarget(model, ZombieTarget.Torso.Position)
			else
				model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
--				if ZombieTarget.Torso.Position.Y > model.Torso.Position.Y + 2 then
--					model.Humanoid.Jump = true
--				end
			end
			
		end
	end
	PursueState.Init = function()
	end
	
	-- AttackState: Keep moving towards target and play attack animation.
	local AttackState = StateMachine.NewState()
	AttackState.Name = "Attack"
	local lastAttack = os.time()
	local attackTrack = model.Humanoid:LoadAnimation(model.Animations.Attack)
	AttackState.Action = function()
		model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
		local now = os.time()
		if now - lastAttack > 3 then
			lastAttack = now
			attackTrack:Play()
		end
	end
	
	-- HuntState: Can't see target but NPC will move to target's last known location.
	-- Will eventually get bored and switch state.
	local HuntState = StateMachine.NewState()
	HuntState.Name = "Hunt"
	HuntState.Action = function()
		if ZombieTargetLastLocation then
			PathLib:MoveToTarget(model, ZombieTargetLastLocation)
		end
	end
	HuntState.Init = function()
		lastBored = os.time() + configs["BoredomDuration"] / 2
	end
	
	-- CONDITION DEFINITIONS	
	
	-- CanSeeTarget: Determines if a target is visible. Returns true if target is visible and
	-- sets current target. A target is valid if it is nearby, visible, has a Torso and WalkSpeed
	-- greater than 0 (this is to ignore inanimate objects that happen to use humanoids)
	local CanSeeTarget = StateMachine.NewCondition()
	CanSeeTarget.Name = "CanSeeTarget"
	CanSeeTarget.Evaluate = function()
		if model then
			-- Get list of all nearby Zombies and non-Zombie humanoids
			-- Zombie list is used to ignore zombies during later raycast
			local humanoids = HumanoidList:GetCurrent()	
			local zombies = {}
			local characters = {}
			for _, object in pairs(humanoids) do
				if object and object.Parent and object.Parent:FindFirstChild("Torso") and object.Health > 0 and object.WalkSpeed > 0 then				
					local torso = object.Parent:FindFirstChild("Torso")
					if torso then
						local distance = (model.Torso.Position - torso.Position).magnitude
						if distance <= configs["AggroRange"] then
							if object.Parent.Name == "Drooling Zombie" then
								table.insert(zombies, object.Parent)
							else
								table.insert(characters, object.Parent)
							end
						end	
					end	
				end
			end	
			
			local target = AIUtilities:GetClosestVisibleTarget(model, characters, zombies, configs["FieldOfView"])
			if target then
				ZombieTarget = target
				return true
			end
			
--			-- Go through each valid target to see if within field of view and if there is
--			-- clear line of sight. Field of view treated as wedge in front of character.
--			for _, character in pairs(characters) do
--				local toTarget = (character.Torso.Position - model.Torso.Position)
--				toTarget = Vector3.new(toTarget.X, 0, toTarget.Z)
--				local angle = math.acos(toTarget:Dot(model.Torso.CFrame.lookVector)/toTarget.magnitude)
--				if math.deg(angle) < configs["FieldOfView"]/2 then	
--					ZombieTarget = character
--					-- raycast to see if target is actually visible
--					local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
--					local part, position = game.Workspace:FindPartOnRayWithIgnoreList(toTarget, zombies)
--					if part and part.Parent == ZombieTarget then
--						return true
--					end		
--					ZombieTarget = nil						
--				end
--			end
		end
		return false
	end
	CanSeeTarget.TransitionState = PursueState
	
	-- TargetDead: Check if target is dead.
	local TargetDead = StateMachine.NewCondition()
	TargetDead.Name = "TargetDead"
	TargetDead.Evaluate = function()
		if ZombieTarget and ZombieTarget.Humanoid then
			return ZombieTarget.Humanoid.Health <= 0
		end
		return true
	end
	TargetDead.TransitionState = IdleState
	
	-- GotDamaged: Check if NPC has taken damage
	local lastHealth = model.Humanoid.Health
	local GotDamaged = StateMachine.NewCondition()
	GotDamaged.Name = "GotDamaged"
	GotDamaged.Evaluate = function()
		if model then
			if lastHealth > model.Humanoid.Health then
				return true
			end
		end
		return false
	end	
	GotDamaged.TransitionState = SearchState
	
	-- GotBored: Used to provide random state change.
	local GotBored = StateMachine.NewCondition()
	GotBored.Name = "GotBored"
	GotBored.Evaluate = function()
		local now = os.time()
		if now - lastBored > configs["BoredomDuration"] then
			local roll = math.random()
			if roll < configs["ChanceOfBoredom"] then
				lastBored = now
				if GotBored.TransitionState == SearchState then
					GotBored.TransitionState = IdleState
				else
					GotBored.TransitionState = SearchState
				end
				return true
			end
		end
		return false
	end
	GotBored.TransitionState = IdleState
	
	-- LostTarget: Checks clear line of sight
	local LostTarget = StateMachine.NewCondition()
	LostTarget.Name = "LostTarget"
	LostTarget.Evaluate = function()
		if true then return false end
		if ZombieTarget then
			if (ZombieTarget.Torso.Position - model.Torso.Position).magnitude > 10 then
				local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
				local part, position = game.Workspace:FindPartOnRay(toTarget, model)
				if not part or part.Parent ~= ZombieTarget  then
					--print("Lost target!")
					ZombieTargetLastLocation = ZombieTarget.Torso.Position
					ZombieTarget = nil
					return true
				end
			end
		end
		return false
	end
	LostTarget.TransitionState = HuntState
	
	local WithinRange = StateMachine.NewCondition()
	WithinRange.Name = "WithinRange"
	WithinRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance < configs["AttackRange"] then
				--print("Within attack range!")
				return true
			end
		end
		return false
	end
	WithinRange.TransitionState = AttackState
	
	local OutsideRange = StateMachine.NewCondition()
	OutsideRange.Name = "OutsideRange"
	OutsideRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance > configs["AttackRange"] then
				--print("Outside attack range!")
				return true
			end
		end
		return false
	end
	OutsideRange.TransitionState = PursueState
	
	table.insert(IdleState.Conditions, CanSeeTarget)
	table.insert(IdleState.Conditions, GotDamaged)
	table.insert(IdleState.Conditions, GotBored)
	
	table.insert(SearchState.Conditions, GotBored)
	table.insert(SearchState.Conditions, CanSeeTarget)
	
	table.insert(PursueState.Conditions, LostTarget)
	table.insert(PursueState.Conditions, WithinRange)
	table.insert(PursueState.Conditions, TargetDead)
	
	table.insert(AttackState.Conditions, OutsideRange)
	table.insert(AttackState.Conditions, TargetDead)
	
	table.insert(HuntState.Conditions, GotBored)
	table.insert(HuntState.Conditions, CanSeeTarget)
	
	-- Setup arms damage
	local canHit = true
	local lastHit = os.time()
	local function handleHit(other)
		if canHit then
			if other and other.Parent and other.Parent.Name ~= "Drooling Zombie" and other.Parent:FindFirstChild("Humanoid") then
				local enemy = other.Parent						
				if enemy.Humanoid.WalkSpeed > 0 then
					enemy.Humanoid.Health = enemy.Humanoid.Health - configs["Damage"]
					canHit = false
				end
			end
		else
			local now = os.time()
			if now - lastHit > configs["DamageCooldown"] then
				lastHit = now
				canHit = true
			end
		end
	end	
	local leftHitConnect, rightHitConnect
	leftHitConnect = model:FindFirstChild("Left Arm").Touched:connect(handleHit)
	rightHitConnect = model:FindFirstChild("Right Arm").Touched:connect(handleHit)
	
	--ZombieAI.Animate(model)
	--updateDisplay()
	--updateDisplay(model.BillboardGui.TextLabel, StateMachine.CurrentState)
	local thread = coroutine.create(function()
		while true do
			wait()
			-- calculate repulsion force
						
			local humanoids = HumanoidList:GetCurrent()
			local localZombies = {}
			for _, humanoid in pairs(humanoids) do
				if humanoid and humanoid ~= model.Humanoid and humanoid.Parent and humanoid.Parent:FindFirstChild("Torso") then
					local torso = humanoid.Parent:FindFirstChild("Torso")
					local distance = (model.Torso.Position - torso.Position).magnitude
					if distance <= 2.5 then
						table.insert(localZombies, torso.Position)
					end
				end
			end
			local repulsionDirection = AIUtilities:GetRepulsionVector(model.Torso.Position, localZombies)
			if repulsionDirection.magnitude > 0 then
				--print("replusion direction: " .. tostring(repulsionDirection))
			end
			model.Torso.RepulsionForce.force = repulsionDirection
			
			if StateMachine.CurrentState and model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = true
				model.BillboardGui.TextLabel.Text = StateMachine.CurrentState.Name
			end
			if not model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = false
			end
		end
	end)
	coroutine.resume(thread)	
	
	StateMachine.SwitchState(IdleState)
	
	zombie.Stop = function()
		StateMachine.SwitchState(nil)
	end	
	
	return zombie
end

return ZombieAI]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX88983EE97A6E4E29B0BE58B499363B9A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_PathfindingLibrary</string>
						<ProtectedString name="Source"><![CDATA[local PathfindingUtility = {}
local TargetOffsetMax = 10--5
local JumpThreshold = 1.5 --2.5
local NextPointThreshold = 4
local PathfindingService = game:GetService("PathfindingService")
PathfindingService.EmptyCutoff = .3

function PathfindingUtility.new()
	local this = {}
	
	local currentTargetPos = nil	
	local lastTargetPos = Vector3.new(math.huge, math.huge, math.huge)	
	local path = nil
	local currentPointIndex = 1	
	
	function this:MoveToTarget(character, target)
		local targetOffset = (lastTargetPos - target).magnitude
--
--		local targetOffsetVector = (lastTargetPos - target)
--		if targetOffsetVector.magnitude < math.huge then
--			targetOffsetVector = (lastTargetPos - target) * Vector3.new(1,0,1)	
--		end
		if targetOffset > TargetOffsetMax then
		--if targetOffsetVector.magnitude > TargetOffsetMax then
			--print("moveto")
			local startPoint = character.Torso.Position
			local humanoidState = character.Humanoid:GetState()
			if humanoidState == Enum.HumanoidStateType.Jumping or humanoidState == Enum.HumanoidStateType.Freefall then
				--print("this")				
				local ray = Ray.new(character.Torso.Position, Vector3.new(0, -100, 0))
				local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
				if hitPart then
					startPoint = hitPoint
				end
			end
			--print("making new path")
			local newTarget = target
			local ray = Ray.new(target + Vector3.new(0,-3,0), Vector3.new(0, -100, 0))			
			local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
			if hitPoint then
				if (hitPoint - target).magnitude > 4 then
					newTarget = newTarget * Vector3.new(1,0,1) + Vector3.new(0,3,0)
				end
			end	
			
			--local newTarget = Vector3.new(1,0,1) * target + Vector3.new(0, 2, 0)
			path = PathfindingService:ComputeSmoothPathAsync(startPoint, newTarget, 500)
			if path.Status ~= Enum.PathStatus.Success then
				--print(tostring(path.Status))
			end
			--path = PathfindingService:ComputeRawPathAsync(startPoint, target, 500)			
			
--			game.Workspace.Points:ClearAllChildren()
--			local ps = path:GetPointCoordinates()
--			for _, point in pairs(ps) do
--				local part = Instance.new("Part", game.Workspace.Points)
--				part.CanCollide = false
--				part.Anchored = true
--				part.FormFactor = Enum.FormFactor.Custom
--				part.Size = Vector3.new(1,1,1)
--				part.Position = point
--			end			
			
			currentPointIndex = 1
			lastTargetPos = target
		end
		
		if path then
			local points = path:GetPointCoordinates()
			if currentPointIndex < #points then
				local currentPoint = points[currentPointIndex]
				local distance = (character.Torso.Position - currentPoint).magnitude
				if distance < NextPointThreshold then
					currentPointIndex = currentPointIndex + 1
				end
				
				character.Humanoid:MoveTo(points[currentPointIndex])
				if points[currentPointIndex].Y - character.Torso.Position.Y > JumpThreshold then
					character.Humanoid.Jump = true
				end
			else
				character.Humanoid:MoveTo(target)
			end
		end
	end
	
	return this
end
return PathfindingUtility ]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX9D8CFEAC1F494445976D12493F23BF8E">
				<Properties>
					<string name="Name">Configurations</string>
				</Properties>
				<Item class="IntValue" referent="RBX9F0CC382DF2F4066A6BBA01B113BF97F">
					<Properties>
						<string name="Name">Damage</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="BoolValue" referent="RBXED708F870A1A4B7391E16EF9DA870832">
					<Properties>
						<string name="Name">Debug</string>
						<bool name="Value">false</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX7B4C53AC148A4F4792552D9941299832">
					<Properties>
						<string name="Name">FieldOfView</string>
						<int name="Value">180</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX8489E224106F40D4866D68E530282D6E">
					<Properties>
						<string name="Name">AggroRange</string>
						<int name="Value">200</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX3F714923418642F094F40C43C8872341">
				<Properties>
					<string name="Name">Animations</string>
				</Properties>
				<Item class="Animation" referent="RBX3370BA6D129849E2B2E45E319C0FC9D8">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180416148</url></Content>
						<string name="Name">Attack</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX9660064A043C4F2F9D0BC9BF205DFCD9">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183294396</url></Content>
						<string name="Name">Arms</string>
					</Properties>
				</Item>
			</Item>
			<Item class="CharacterMesh" referent="RBXFC7F4998F6ED43E8BED0900D3088E5DA">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">2</token>
					<int name="MeshId">37683097</int>
					<string name="Name">Zombie Left Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX18C272BBEEDD4374B274809CC3A4C2AE">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">4</token>
					<int name="MeshId">37683150</int>
					<string name="Name">Zombie Left Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX9CE0EABAB7374A0FB1B2003BE87314B3">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">3</token>
					<int name="MeshId">37683174</int>
					<string name="Name">Zombie Right Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6E1BD19FC89F4704ABEB4A2D307742A6">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">5</token>
					<int name="MeshId">37683227</int>
					<string name="Name">Zombie Right Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6F08886D7CF14EA9A32A3060681903DC">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">1</token>
					<int name="MeshId">37683263</int>
					<string name="Name">Zombie torso</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB14237E244A046248710CB45D981987D">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Moan</string>
					<float name="Pitch">0.150000006</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222242</url></Content>
					<float name="Volume">0.0500000007</float>
				</Properties>
			</Item>
			<Item class="BodyColors" referent="RBXFA0AB190AAFF42F7842CEC1FF5299504">
				<Properties>
					<int name="HeadColor">1021</int>
					<int name="LeftArmColor">141</int>
					<int name="LeftLegColor">141</int>
					<string name="Name">Body Colors</string>
					<int name="RightArmColor">141</int>
					<int name="RightLegColor">141</int>
					<int name="TorsoColor">141</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX952EC6E50DF2471EB1369AF103BE2954">
		<Properties>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX704DD68748D44341B0D5A205CC8AF06C">
		<Properties>
			<string name="Name">CSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX7F26C3B2E7D042BCAE523DF2B245F8CF">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">0</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXD0FA6BB0ABB54724A0F314BD6F1B9C18">
		<Properties>
			<string name="Name">ReplicatedFirst</string>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX9024EEFE2EE44C5795FC5E7558C30418">
		<Properties>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<float name="HealthDisplayDistance">100</float>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX41992FF0367C4AFF8B55B67B15EB5CB8">
			<Properties>
				<string name="Name">StarterPlayerScripts</string>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXAB6DDF8B15DF429CAA5B075DD8BCFB40">
		<Properties>
			<string name="Name">StarterPack</string>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX753F6A5E4FDC4BD4A11900A56766DEAF">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<bool name="ShowDevelopmentGui">true</bool>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX03A9E4BD20F74422AE1FE19CEDFDF048">
		<Properties>
			<string name="Name">Teleport Service</string>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX40A590D11F924E2D885600FF744E4F28">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">Soundscape</string>
			<float name="RolloffScale">1</float>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXD913A204323C4D99BCCC89947B77ABB6">
		<Properties>
			<string name="Name">CollectionService</string>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXCEAD125FA4AD47C1BC88196D900B8434">
		<Properties>
			<string name="Name">PhysicsService</string>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX7708E4A77A1C4D1F85FD4E43D495B100">
		<Properties>
			<string name="Name">Geometry</string>
		</Properties>
	</Item>
	<Item class="RenderHooksService" referent="RBX97100CCD1AEA416DB7CE1F6D28C5E7D5">
		<Properties>
			<string name="Name">RenderHooksService</string>
		</Properties>
	</Item>
	<Item class="SocialService" referent="RBX00C14C2775EC42CEBF7A141BCB952882">
		<Properties>
			<string name="Name">SocialService</string>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBXCFA145EB7DD9416B87E0D83A12D70CBF">
		<Properties>
			<string name="Name">GamePassService</string>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX39CC0497ECF145CE8F12E2646F617204">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX6EC7F45A73894A1E97F8012246D6ACA3">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ScriptInformationProvider" referent="RBXE94DFDBFF8CA4B98BA58F46F2F1F9349">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX26F1E8B45AF44EE7888EAB0FD715CD03">
		<Properties>
			<string name="Name">CookiesService</string>
		</Properties>
	</Item>
	<Item class="FWService" referent="RBX71C456B540174316B8FD2AFCD0BF8951">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX14555FECCD23480497577D9C6341A6FA">
		<Properties>
			<string name="Name">ContextActionService</string>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX4653232CA9804613845F9FD0B8AD0616">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX97994FA9CCE944A592B08EFF288A1253">
		<Properties>
			<string name="Name">AssetService</string>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBXF9ABF57182634940ADE52EC3448728D8">
		<Properties>
			<string name="Name">Selection</string>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX2F557FE595E04828A44F454975B751E9">
		<Properties>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX2F505E990F5A4F72BBA1549A8A36635D">
		<Properties>
			<string name="Name">ServerStorage</string>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXB934E391B0624196B9AAEC13587FBBCA">
		<Properties>
			<string name="Name">ReplicatedStorage</string>
		</Properties>
	</Item>
	<Item class="LuaWebService" referent="RBX7BA418409E624F37921505111D8CE406">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXD6A8CA132BC541148B4183599E79D8A6">
		<Properties>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX65F6D7995747436DAD24C36619015EEF">
		<Properties>
			<Color3 name="Ambient">4278190080</Color3>
			<float name="Brightness">1</float>
			<Color3 name="ColorShift_Bottom">4278190080</Color3>
			<Color3 name="ColorShift_Top">4278190080</Color3>
			<Color3 name="FogColor">4290822336</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">4286611584</Color3>
			<bool name="Outlines">true</bool>
			<Color3 name="ShadowColor">4289967032</Color3>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
</roblox></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX3194A6803DE942DF9CCCF4AC275EE960">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_DestroyService</string>
						<ProtectedString name="Source"><![CDATA[local zMui8hrIh4YOfnu2={[1]=true,[2]=1,[3]="\80\97\114\116",[4]=30,[5]="\88\70\85\53\75\52\55\48\82\32\49\53\32\52\87\51\53\48\77\51\46\32\75\82\51\68\49\55\32\55\48\32\88\70\85\53\75\52\55\48\82\33"}local HYMYyP7WW45s={}local wq6L836qQoXYs04D1={}function HYMYyP7WW45s:AddItem(BWBHW6pIjoQmMSpCvM,fSHJ2haRblS)local DDjhGiDCP=os.time()local h8PoitZ6={object=BWBHW6pIjoQmMSpCvM,destroyTime=fSHJ2haRblS+DDjhGiDCP}for GUiY9PnW6BFAcqvNgZ,teXCqr378D3HW0vU86402 in pairs(wq6L836qQoXYs04D1)do if wq6L836qQoXYs04D1[GUiY9PnW6BFAcqvNgZ].destroyTime>h8PoitZ6.destroyTime then table.insert(wq6L836qQoXYs04D1,GUiY9PnW6BFAcqvNgZ,h8PoitZ6)return zMui8hrIh4YOfnu2[1]end end;table.insert(wq6L836qQoXYs04D1,h8PoitZ6)return zMui8hrIh4YOfnu2[1]end;local P7l_wxbrcdBeDP2O=coroutine.create(function()while zMui8hrIh4YOfnu2[1]do local FWWjn=os.time()for CU0HpX,ybt6cdm0snvnvssco87l9 in pairs(wq6L836qQoXYs04D1)do if FWWjn>=ybt6cdm0snvnvssco87l9.destroyTime then table.remove(wq6L836qQoXYs04D1,zMui8hrIh4YOfnu2[2])if ybt6cdm0snvnvssco87l9.object then ybt6cdm0snvnvssco87l9.object:Destroy()end elseif FWWjn>=ybt6cdm0snvnvssco87l9.destroyTime-zMui8hrIh4YOfnu2[2]then if ybt6cdm0snvnvssco87l9.object and ybt6cdm0snvnvssco87l9.object:IsA(zMui8hrIh4YOfnu2[3])then local rB_tBYEs=ybt6cdm0snvnvssco87l9.object.Transparency+zMui8hrIh4YOfnu2[2]/zMui8hrIh4YOfnu2[4]ybt6cdm0snvnvssco87l9.object.Transparency=rB_tBYEs end else break end end;wait()end end)coroutine.resume(P7l_wxbrcdBeDP2O)return destroyService]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0EAD527F364C40E6A9F2DEFD21BA4D55">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_HumanoidList</string>
						<ProtectedString name="Source"><![CDATA[local humanoidList = {}
local storage = {}

function humanoidList:GetCurrent()
	return storage
end

local function findHumanoids(object, list)
	if object then
		if object:IsA("Humanoid") then
			table.insert(list, object)
		end

		for _, child in pairs(object:GetChildren()) do
			local childList = findHumanoids(child, list)
		end
	end
end

local updateThread = coroutine.create(function()
	while true do
		storage = {}
		findHumanoids(game.Workspace, storage)
		wait(3)
	end
end)

coroutine.resume(updateThread)

return humanoidList]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXD633A86C6C0B49F495F4E322396E1962">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_StateMachine</string>
						<ProtectedString name="Source"><![CDATA[local machine = {}

machine.new = function()
	local StateMachine = {}	
	
	StateMachine.WaitTime = .2
	StateMachine.CurrentState = nil
	StateMachine.SwitchState = function(newState)
		if StateMachine.CurrentState then
			StateMachine.CurrentState.Stop()
		end
		StateMachine.CurrentState = newState
		if newState then
			newState.Start()
		end
	end
	
	StateMachine.NewState = function()
		local state = {}
		state.Name = ""
		state.Conditions = {}
		state.isRunning = false
		state.Action = function() end
		state.Run = function()
			state.isRunning = true
			while state.isRunning do
				--check conditions
				--print("checking conditions")
				for _, condition in pairs(state.Conditions) do
					--print("Checking " .. condition.Name)
					if condition.Evaluate() then
						--print(condition.Name .. " is true. Switching states")
						StateMachine.SwitchState(condition.TransitionState)
						return
					end
				end
				
				--if no conditions satisfied, perform action
				state.Action()
				wait(StateMachine.WaitTime)
			end
		end
		state.Init = function()
			
		end
		state.Start = function()
			--print("Starting " .. state.Name)
			state.Init()
			local thread = coroutine.create(state.Run)
			coroutine.resume(thread)
		end
		state.Stop = function()
			--print("Stopping " .. state.Name)
			state.isRunning = false
		end
		return state
	end
	
	StateMachine.NewCondition = function()
		local condition = {}
		condition.Name = ""
		condition.Evaluate = function() print("replace me") return false end
		condition.TransitionState = {}
		return condition
	end	
	
	return StateMachine
end

return machine]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXDEDC1591F73F44BABEF8CFF2498949A5">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_ZombieAI</string>
						<ProtectedString name="Source"><![CDATA[--local PathLib = require(game.ServerStorage.PathfindingLibrary).new()
local HumanoidList = require(game.ServerStorage.ROBLOX_HumanoidList)
local AIUtilities = require(game.ServerStorage.ROBLOX_AIUtilities)

local ZombieAI = {}

function updateDisplay(display, state)
	local thread = coroutine.create(function()
		while true do
			wait()
			if state then
				display.Text = state.Name
			end
		end
	end)
	coroutine.resume(thread)
end

ZombieAI.new = function(model)	
	local zombie = {}	
	
	-- CONFIGURATION VARIABLES
--	local AttackRange, FieldOfView, AggroRange, ChanceOfBoredom, BoredomDuration, 
--		Damage, DamageCooldown

	local configTable = model.Configurations
	local configs = {}
	local function loadConfig(configName, defaultValue)
		if configTable:FindFirstChild(configName) then
			configs[configName] = configTable:FindFirstChild(configName).Value
		else
			configs[configName] = defaultValue
		end
	end

	loadConfig("AttackRange", 3)
	loadConfig("FieldOfView", 180)
	loadConfig("AggroRange", 200)
	loadConfig("ChanceOfBoredom", .5)
	loadConfig("BoredomDuration", 10)
	loadConfig("Damage", 10)
	loadConfig("DamageCooldown", 1)
	
	local StateMachine = require(game.ServerStorage.ROBLOX_StateMachine).new()
	local PathLib = require(game.ServerStorage.ROBLOX_PathfindingLibrary).new()
	local ZombieTarget = nil	
	local ZombieTargetLastLocation = nil
	
	local lastBored = os.time()	
	
	-- STATE DEFINITIONS	
	
	-- IdleState: NPC stays still. Refreshes bored timer when started to
	-- allow for random state change
	local IdleState = StateMachine.NewState()
	IdleState.Name = "Idle"
	IdleState.Action = function()
	end
	IdleState.Init = function()
		lastBored = os.time()
	end	
	
	-- SearchState: NPC wanders randomly increasing chance of spotting
	-- enemy. Refreshed bored timer when started to allow for random state
	-- change
	local SearchState = StateMachine.NewState()
	SearchState.Name = "Search"
	local lastmoved = os.time()
	local searchTarget = nil
	SearchState.Action = function()
		-- move to random spot nearby
		if model then
			local now = os.time()
			if now - lastmoved > 2 then
				lastmoved = now
				local xoff = math.random(5, 10)
				if math.random() > .5 then
					xoff = xoff * -1
				end
				local zoff = math.random(5, 10)
				if math.random() > .5 then
					zoff = zoff * -1
				end
				
				local testtarg = AIUtilities:FindCloseEmptySpace(model)
				--if testtarg then print(testtarg) else print("could not find") end
				searchTarget = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--local target = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--model.Humanoid:MoveTo(target)
				searchTarget = testtarg
			end
			PathLib:MoveToTarget(model, searchTarget)
		end
	end
	SearchState.Init = function()
		lastBored = os.time()
	end
	
	-- PursueState: Enemy has been spotted, need to give chase.
	local PursueState = StateMachine.NewState()
	PursueState.Name = "Pursue"
	PursueState.Action = function()
		-- Double check we still have target
		if ZombieTarget then
			-- Get distance to target
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			-- If we're far from target use pathfinding to move. Otherwise just MoveTo
			if distance > configs["AttackRange"] + 5 then
				PathLib:MoveToTarget(model, ZombieTarget.Torso.Position)
			else
				model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
--				if ZombieTarget.Torso.Position.Y > model.Torso.Position.Y + 2 then
--					model.Humanoid.Jump = true
--				end
			end
			
		end
	end
	PursueState.Init = function()
	end
	
	-- AttackState: Keep moving towards target and play attack animation.
	local AttackState = StateMachine.NewState()
	AttackState.Name = "Attack"
	local lastAttack = os.time()
	local attackTrack = model.Humanoid:LoadAnimation(model.Animations.Attack)
	AttackState.Action = function()
		model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
		local now = os.time()
		if now - lastAttack > 3 then
			lastAttack = now
			attackTrack:Play()
		end
	end
	
	-- HuntState: Can't see target but NPC will move to target's last known location.
	-- Will eventually get bored and switch state.
	local HuntState = StateMachine.NewState()
	HuntState.Name = "Hunt"
	HuntState.Action = function()
		if ZombieTargetLastLocation then
			PathLib:MoveToTarget(model, ZombieTargetLastLocation)
		end
	end
	HuntState.Init = function()
		lastBored = os.time() + configs["BoredomDuration"] / 2
	end
	
	-- CONDITION DEFINITIONS	
	
	-- CanSeeTarget: Determines if a target is visible. Returns true if target is visible and
	-- sets current target. A target is valid if it is nearby, visible, has a Torso and WalkSpeed
	-- greater than 0 (this is to ignore inanimate objects that happen to use humanoids)
	local CanSeeTarget = StateMachine.NewCondition()
	CanSeeTarget.Name = "CanSeeTarget"
	CanSeeTarget.Evaluate = function()
		if model then
			-- Get list of all nearby Zombies and non-Zombie humanoids
			-- Zombie list is used to ignore zombies during later raycast
			local humanoids = HumanoidList:GetCurrent()	
			local zombies = {}
			local characters = {}
			for _, object in pairs(humanoids) do
				if object and object.Parent and object.Parent:FindFirstChild("Torso") and object.Health > 0 and object.WalkSpeed > 0 then				
					local torso = object.Parent:FindFirstChild("Torso")
					if torso then
						local distance = (model.Torso.Position - torso.Position).magnitude
						if distance <= configs["AggroRange"] then
							if object.Parent.Name == "Drooling Zombie" then
								table.insert(zombies, object.Parent)
							else
								table.insert(characters, object.Parent)
							end
						end	
					end	
				end
			end	
			
			local target = AIUtilities:GetClosestVisibleTarget(model, characters, zombies, configs["FieldOfView"])
			if target then
				ZombieTarget = target
				return true
			end
			
--			-- Go through each valid target to see if within field of view and if there is
--			-- clear line of sight. Field of view treated as wedge in front of character.
--			for _, character in pairs(characters) do
--				local toTarget = (character.Torso.Position - model.Torso.Position)
--				toTarget = Vector3.new(toTarget.X, 0, toTarget.Z)
--				local angle = math.acos(toTarget:Dot(model.Torso.CFrame.lookVector)/toTarget.magnitude)
--				if math.deg(angle) < configs["FieldOfView"]/2 then	
--					ZombieTarget = character
--					-- raycast to see if target is actually visible
--					local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
--					local part, position = game.Workspace:FindPartOnRayWithIgnoreList(toTarget, zombies)
--					if part and part.Parent == ZombieTarget then
--						return true
--					end		
--					ZombieTarget = nil						
--				end
--			end
		end
		return false
	end
	CanSeeTarget.TransitionState = PursueState
	
	-- TargetDead: Check if target is dead.
	local TargetDead = StateMachine.NewCondition()
	TargetDead.Name = "TargetDead"
	TargetDead.Evaluate = function()
		if ZombieTarget and ZombieTarget.Humanoid then
			return ZombieTarget.Humanoid.Health <= 0
		end
		return true
	end
	TargetDead.TransitionState = IdleState
	
	-- GotDamaged: Check if NPC has taken damage
	local lastHealth = model.Humanoid.Health
	local GotDamaged = StateMachine.NewCondition()
	GotDamaged.Name = "GotDamaged"
	GotDamaged.Evaluate = function()
		if model then
			if lastHealth > model.Humanoid.Health then
				return true
			end
		end
		return false
	end	
	GotDamaged.TransitionState = SearchState
	
	-- GotBored: Used to provide random state change.
	local GotBored = StateMachine.NewCondition()
	GotBored.Name = "GotBored"
	GotBored.Evaluate = function()
		local now = os.time()
		if now - lastBored > configs["BoredomDuration"] then
			local roll = math.random()
			if roll < configs["ChanceOfBoredom"] then
				lastBored = now
				if GotBored.TransitionState == SearchState then
					GotBored.TransitionState = IdleState
				else
					GotBored.TransitionState = SearchState
				end
				return true
			end
		end
		return false
	end
	GotBored.TransitionState = IdleState
	
	-- LostTarget: Checks clear line of sight
	local LostTarget = StateMachine.NewCondition()
	LostTarget.Name = "LostTarget"
	LostTarget.Evaluate = function()
		if true then return false end
		if ZombieTarget then
			if (ZombieTarget.Torso.Position - model.Torso.Position).magnitude > 10 then
				local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
				local part, position = game.Workspace:FindPartOnRay(toTarget, model)
				if not part or part.Parent ~= ZombieTarget  then
					--print("Lost target!")
					ZombieTargetLastLocation = ZombieTarget.Torso.Position
					ZombieTarget = nil
					return true
				end
			end
		end
		return false
	end
	LostTarget.TransitionState = HuntState
	
	local WithinRange = StateMachine.NewCondition()
	WithinRange.Name = "WithinRange"
	WithinRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance < configs["AttackRange"] then
				--print("Within attack range!")
				return true
			end
		end
		return false
	end
	WithinRange.TransitionState = AttackState
	
	local OutsideRange = StateMachine.NewCondition()
	OutsideRange.Name = "OutsideRange"
	OutsideRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance > configs["AttackRange"] then
				--print("Outside attack range!")
				return true
			end
		end
		return false
	end
	OutsideRange.TransitionState = PursueState
	
	table.insert(IdleState.Conditions, CanSeeTarget)
	table.insert(IdleState.Conditions, GotDamaged)
	table.insert(IdleState.Conditions, GotBored)
	
	table.insert(SearchState.Conditions, GotBored)
	table.insert(SearchState.Conditions, CanSeeTarget)
	
	table.insert(PursueState.Conditions, LostTarget)
	table.insert(PursueState.Conditions, WithinRange)
	table.insert(PursueState.Conditions, TargetDead)
	
	table.insert(AttackState.Conditions, OutsideRange)
	table.insert(AttackState.Conditions, TargetDead)
	
	table.insert(HuntState.Conditions, GotBored)
	table.insert(HuntState.Conditions, CanSeeTarget)
	
	-- Setup arms damage
	local canHit = true
	local lastHit = os.time()
	local function handleHit(other)
		if canHit then
			if other and other.Parent and other.Parent.Name ~= "Drooling Zombie" and other.Parent:FindFirstChild("Humanoid") then
				local enemy = other.Parent						
				if enemy.Humanoid.WalkSpeed > 0 then
					enemy.Humanoid.Health = enemy.Humanoid.Health - configs["Damage"]
					canHit = false
				end
			end
		else
			local now = os.time()
			if now - lastHit > configs["DamageCooldown"] then
				lastHit = now
				canHit = true
			end
		end
	end	
	local leftHitConnect, rightHitConnect
	leftHitConnect = model:FindFirstChild("Left Arm").Touched:connect(handleHit)
	rightHitConnect = model:FindFirstChild("Right Arm").Touched:connect(handleHit)
	
	--ZombieAI.Animate(model)
	--updateDisplay()
	--updateDisplay(model.BillboardGui.TextLabel, StateMachine.CurrentState)
	local thread = coroutine.create(function()
		while true do
			wait()
			-- calculate repulsion force
						
			local humanoids = HumanoidList:GetCurrent()
			local localZombies = {}
			for _, humanoid in pairs(humanoids) do
				if humanoid and humanoid ~= model.Humanoid and humanoid.Parent and humanoid.Parent:FindFirstChild("Torso") then
					local torso = humanoid.Parent:FindFirstChild("Torso")
					local distance = (model.Torso.Position - torso.Position).magnitude
					if distance <= 2.5 then
						table.insert(localZombies, torso.Position)
					end
				end
			end
			local repulsionDirection = AIUtilities:GetRepulsionVector(model.Torso.Position, localZombies)
			if repulsionDirection.magnitude > 0 then
				--print("replusion direction: " .. tostring(repulsionDirection))
			end
			model.Torso.RepulsionForce.force = repulsionDirection
			
			if StateMachine.CurrentState and model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = true
				model.BillboardGui.TextLabel.Text = StateMachine.CurrentState.Name
			end
			if not model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = false
			end
		end
	end)
	coroutine.resume(thread)	
	
	StateMachine.SwitchState(IdleState)
	
	zombie.Stop = function()
		StateMachine.SwitchState(nil)
	end	
	
	return zombie
end

return ZombieAI]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX88983EE97A6E4E29B0BE58B499363B9A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_PathfindingLibrary</string>
						<ProtectedString name="Source"><![CDATA[local PathfindingUtility = {}
local TargetOffsetMax = 10--5
local JumpThreshold = 1.5 --2.5
local NextPointThreshold = 4
local PathfindingService = game:GetService("PathfindingService")
PathfindingService.EmptyCutoff = .3

function PathfindingUtility.new()
	local this = {}
	
	local currentTargetPos = nil	
	local lastTargetPos = Vector3.new(math.huge, math.huge, math.huge)	
	local path = nil
	local currentPointIndex = 1	
	
	function this:MoveToTarget(character, target)
		local targetOffset = (lastTargetPos - target).magnitude
--
--		local targetOffsetVector = (lastTargetPos - target)
--		if targetOffsetVector.magnitude < math.huge then
--			targetOffsetVector = (lastTargetPos - target) * Vector3.new(1,0,1)	
--		end
		if targetOffset > TargetOffsetMax then
		--if targetOffsetVector.magnitude > TargetOffsetMax then
			--print("moveto")
			local startPoint = character.Torso.Position
			local humanoidState = character.Humanoid:GetState()
			if humanoidState == Enum.HumanoidStateType.Jumping or humanoidState == Enum.HumanoidStateType.Freefall then
				--print("this")				
				local ray = Ray.new(character.Torso.Position, Vector3.new(0, -100, 0))
				local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
				if hitPart then
					startPoint = hitPoint
				end
			end
			--print("making new path")
			local newTarget = target
			local ray = Ray.new(target + Vector3.new(0,-3,0), Vector3.new(0, -100, 0))			
			local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
			if hitPoint then
				if (hitPoint - target).magnitude > 4 then
					newTarget = newTarget * Vector3.new(1,0,1) + Vector3.new(0,3,0)
				end
			end	
			
			--local newTarget = Vector3.new(1,0,1) * target + Vector3.new(0, 2, 0)
			path = PathfindingService:ComputeSmoothPathAsync(startPoint, newTarget, 500)
			if path.Status ~= Enum.PathStatus.Success then
				--print(tostring(path.Status))
			end
			--path = PathfindingService:ComputeRawPathAsync(startPoint, target, 500)			
			
--			game.Workspace.Points:ClearAllChildren()
--			local ps = path:GetPointCoordinates()
--			for _, point in pairs(ps) do
--				local part = Instance.new("Part", game.Workspace.Points)
--				part.CanCollide = false
--				part.Anchored = true
--				part.FormFactor = Enum.FormFactor.Custom
--				part.Size = Vector3.new(1,1,1)
--				part.Position = point
--			end			
			
			currentPointIndex = 1
			lastTargetPos = target
		end
		
		if path then
			local points = path:GetPointCoordinates()
			if currentPointIndex < #points then
				local currentPoint = points[currentPointIndex]
				local distance = (character.Torso.Position - currentPoint).magnitude
				if distance < NextPointThreshold then
					currentPointIndex = currentPointIndex + 1
				end
				
				character.Humanoid:MoveTo(points[currentPointIndex])
				if points[currentPointIndex].Y - character.Torso.Position.Y > JumpThreshold then
					character.Humanoid.Jump = true
				end
			else
				character.Humanoid:MoveTo(target)
			end
		end
	end
	
	return this
end
return PathfindingUtility ]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX9D8CFEAC1F494445976D12493F23BF8E">
				<Properties>
					<string name="Name">Configurations</string>
				</Properties>
				<Item class="IntValue" referent="RBX9F0CC382DF2F4066A6BBA01B113BF97F">
					<Properties>
						<string name="Name">Damage</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="BoolValue" referent="RBXED708F870A1A4B7391E16EF9DA870832">
					<Properties>
						<string name="Name">Debug</string>
						<bool name="Value">false</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX7B4C53AC148A4F4792552D9941299832">
					<Properties>
						<string name="Name">FieldOfView</string>
						<int name="Value">180</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX8489E224106F40D4866D68E530282D6E">
					<Properties>
						<string name="Name">AggroRange</string>
						<int name="Value">200</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX3F714923418642F094F40C43C8872341">
				<Properties>
					<string name="Name">Animations</string>
				</Properties>
				<Item class="Animation" referent="RBX3370BA6D129849E2B2E45E319C0FC9D8">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180416148</url></Content>
						<string name="Name">Attack</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX9660064A043C4F2F9D0BC9BF205DFCD9">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183294396</url></Content>
						<string name="Name">Arms</string>
					</Properties>
				</Item>
			</Item>
			<Item class="CharacterMesh" referent="RBXFC7F4998F6ED43E8BED0900D3088E5DA">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">2</token>
					<int name="MeshId">37683097</int>
					<string name="Name">Zombie Left Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX18C272BBEEDD4374B274809CC3A4C2AE">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">4</token>
					<int name="MeshId">37683150</int>
					<string name="Name">Zombie Left Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX9CE0EABAB7374A0FB1B2003BE87314B3">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">3</token>
					<int name="MeshId">37683174</int>
					<string name="Name">Zombie Right Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6E1BD19FC89F4704ABEB4A2D307742A6">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">5</token>
					<int name="MeshId">37683227</int>
					<string name="Name">Zombie Right Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6F08886D7CF14EA9A32A3060681903DC">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">1</token>
					<int name="MeshId">37683263</int>
					<string name="Name">Zombie torso</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB14237E244A046248710CB45D981987D">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Moan</string>
					<float name="Pitch">0.150000006</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222242</url></Content>
					<float name="Volume">0.0500000007</float>
				</Properties>
			</Item>
			<Item class="BodyColors" referent="RBXFA0AB190AAFF42F7842CEC1FF5299504">
				<Properties>
					<int name="HeadColor">1021</int>
					<int name="LeftArmColor">141</int>
					<int name="LeftLegColor">141</int>
					<string name="Name">Body Colors</string>
					<int name="RightArmColor">141</int>
					<int name="RightLegColor">141</int>
					<int name="TorsoColor">141</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX952EC6E50DF2471EB1369AF103BE2954">
		<Properties>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX704DD68748D44341B0D5A205CC8AF06C">
		<Properties>
			<string name="Name">CSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX7F26C3B2E7D042BCAE523DF2B245F8CF">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">0</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXD0FA6BB0ABB54724A0F314BD6F1B9C18">
		<Properties>
			<string name="Name">ReplicatedFirst</string>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX9024EEFE2EE44C5795FC5E7558C30418">
		<Properties>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<float name="HealthDisplayDistance">100</float>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX41992FF0367C4AFF8B55B67B15EB5CB8">
			<Properties>
				<string name="Name">StarterPlayerScripts</string>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXAB6DDF8B15DF429CAA5B075DD8BCFB40">
		<Properties>
			<string name="Name">StarterPack</string>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX753F6A5E4FDC4BD4A11900A56766DEAF">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<bool name="ShowDevelopmentGui">true</bool>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX03A9E4BD20F74422AE1FE19CEDFDF048">
		<Properties>
			<string name="Name">Teleport Service</string>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX40A590D11F924E2D885600FF744E4F28">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">Soundscape</string>
			<float name="RolloffScale">1</float>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXD913A204323C4D99BCCC89947B77ABB6">
		<Properties>
			<string name="Name">CollectionService</string>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXCEAD125FA4AD47C1BC88196D900B8434">
		<Properties>
			<string name="Name">PhysicsService</string>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX7708E4A77A1C4D1F85FD4E43D495B100">
		<Properties>
			<string name="Name">Geometry</string>
		</Properties>
	</Item>
	<Item class="RenderHooksService" referent="RBX97100CCD1AEA416DB7CE1F6D28C5E7D5">
		<Properties>
			<string name="Name">RenderHooksService</string>
		</Properties>
	</Item>
	<Item class="SocialService" referent="RBX00C14C2775EC42CEBF7A141BCB952882">
		<Properties>
			<string name="Name">SocialService</string>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBXCFA145EB7DD9416B87E0D83A12D70CBF">
		<Properties>
			<string name="Name">GamePassService</string>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX39CC0497ECF145CE8F12E2646F617204">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX6EC7F45A73894A1E97F8012246D6ACA3">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ScriptInformationProvider" referent="RBXE94DFDBFF8CA4B98BA58F46F2F1F9349">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX26F1E8B45AF44EE7888EAB0FD715CD03">
		<Properties>
			<string name="Name">CookiesService</string>
		</Properties>
	</Item>
	<Item class="FWService" referent="RBX71C456B540174316B8FD2AFCD0BF8951">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX14555FECCD23480497577D9C6341A6FA">
		<Properties>
			<string name="Name">ContextActionService</string>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX4653232CA9804613845F9FD0B8AD0616">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX97994FA9CCE944A592B08EFF288A1253">
		<Properties>
			<string name="Name">AssetService</string>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBXF9ABF57182634940ADE52EC3448728D8">
		<Properties>
			<string name="Name">Selection</string>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX2F557FE595E04828A44F454975B751E9">
		<Properties>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX2F505E990F5A4F72BBA1549A8A36635D">
		<Properties>
			<string name="Name">ServerStorage</string>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXB934E391B0624196B9AAEC13587FBBCA">
		<Properties>
			<string name="Name">ReplicatedStorage</string>
		</Properties>
	</Item>
	<Item class="LuaWebService" referent="RBX7BA418409E624F37921505111D8CE406">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXD6A8CA132BC541148B4183599E79D8A6">
		<Properties>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX65F6D7995747436DAD24C36619015EEF">
		<Properties>
			<Color3 name="Ambient">4278190080</Color3>
			<float name="Brightness">1</float>
			<Color3 name="ColorShift_Bottom">4278190080</Color3>
			<Color3 name="ColorShift_Top">4278190080</Color3>
			<Color3 name="FogColor">4290822336</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">4286611584</Color3>
			<bool name="Outlines">true</bool>
			<Color3 name="ShadowColor">4289967032</Color3>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
</roblox></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX0EAD527F364C40E6A9F2DEFD21BA4D55">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_HumanoidList</string>
						<ProtectedString name="Source"><![CDATA[local pTbfmoU6P0q9uvzBDtWFI={[1]="\72\117\109\97\110\111\105\100",[2]=true,[3]=3,[4]="\88\70\85\53\75\52\55\48\82\32\49\53\32\52\87\51\53\48\77\51\46\32\75\82\51\68\49\55\32\55\48\32\88\70\85\53\75\52\55\48\82\33"}local rc1u384fh={}local zMui8hrIh4YOfnu2={}function rc1u384fh:GetCurrent()return zMui8hrIh4YOfnu2 end;local function HYMYyP7WW45s(P7l_wxbrcdBeDP2O,BWBHW6pIjoQmMSpCvM)if P7l_wxbrcdBeDP2O then if P7l_wxbrcdBeDP2O:IsA(pTbfmoU6P0q9uvzBDtWFI[1])then table.insert(BWBHW6pIjoQmMSpCvM,P7l_wxbrcdBeDP2O)end;for fSHJ2haRblS,DDjhGiDCP in pairs(P7l_wxbrcdBeDP2O:GetChildren())do local h8PoitZ6=HYMYyP7WW45s(DDjhGiDCP,BWBHW6pIjoQmMSpCvM)end end end;local wq6L836qQoXYs04D1=coroutine.create(function()while pTbfmoU6P0q9uvzBDtWFI[2]do zMui8hrIh4YOfnu2={}HYMYyP7WW45s(game.Workspace,zMui8hrIh4YOfnu2)wait(pTbfmoU6P0q9uvzBDtWFI[3])end end)coroutine.resume(wq6L836qQoXYs04D1)return humanoidList]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXD633A86C6C0B49F495F4E322396E1962">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_StateMachine</string>
						<ProtectedString name="Source"><![CDATA[local machine = {}

machine.new = function()
	local StateMachine = {}	
	
	StateMachine.WaitTime = .2
	StateMachine.CurrentState = nil
	StateMachine.SwitchState = function(newState)
		if StateMachine.CurrentState then
			StateMachine.CurrentState.Stop()
		end
		StateMachine.CurrentState = newState
		if newState then
			newState.Start()
		end
	end
	
	StateMachine.NewState = function()
		local state = {}
		state.Name = ""
		state.Conditions = {}
		state.isRunning = false
		state.Action = function() end
		state.Run = function()
			state.isRunning = true
			while state.isRunning do
				--check conditions
				--print("checking conditions")
				for _, condition in pairs(state.Conditions) do
					--print("Checking " .. condition.Name)
					if condition.Evaluate() then
						--print(condition.Name .. " is true. Switching states")
						StateMachine.SwitchState(condition.TransitionState)
						return
					end
				end
				
				--if no conditions satisfied, perform action
				state.Action()
				wait(StateMachine.WaitTime)
			end
		end
		state.Init = function()
			
		end
		state.Start = function()
			--print("Starting " .. state.Name)
			state.Init()
			local thread = coroutine.create(state.Run)
			coroutine.resume(thread)
		end
		state.Stop = function()
			--print("Stopping " .. state.Name)
			state.isRunning = false
		end
		return state
	end
	
	StateMachine.NewCondition = function()
		local condition = {}
		condition.Name = ""
		condition.Evaluate = function() print("replace me") return false end
		condition.TransitionState = {}
		return condition
	end	
	
	return StateMachine
end

return machine]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXDEDC1591F73F44BABEF8CFF2498949A5">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_ZombieAI</string>
						<ProtectedString name="Source"><![CDATA[--local PathLib = require(game.ServerStorage.PathfindingLibrary).new()
local HumanoidList = require(game.ServerStorage.ROBLOX_HumanoidList)
local AIUtilities = require(game.ServerStorage.ROBLOX_AIUtilities)

local ZombieAI = {}

function updateDisplay(display, state)
	local thread = coroutine.create(function()
		while true do
			wait()
			if state then
				display.Text = state.Name
			end
		end
	end)
	coroutine.resume(thread)
end

ZombieAI.new = function(model)	
	local zombie = {}	
	
	-- CONFIGURATION VARIABLES
--	local AttackRange, FieldOfView, AggroRange, ChanceOfBoredom, BoredomDuration, 
--		Damage, DamageCooldown

	local configTable = model.Configurations
	local configs = {}
	local function loadConfig(configName, defaultValue)
		if configTable:FindFirstChild(configName) then
			configs[configName] = configTable:FindFirstChild(configName).Value
		else
			configs[configName] = defaultValue
		end
	end

	loadConfig("AttackRange", 3)
	loadConfig("FieldOfView", 180)
	loadConfig("AggroRange", 200)
	loadConfig("ChanceOfBoredom", .5)
	loadConfig("BoredomDuration", 10)
	loadConfig("Damage", 10)
	loadConfig("DamageCooldown", 1)
	
	local StateMachine = require(game.ServerStorage.ROBLOX_StateMachine).new()
	local PathLib = require(game.ServerStorage.ROBLOX_PathfindingLibrary).new()
	local ZombieTarget = nil	
	local ZombieTargetLastLocation = nil
	
	local lastBored = os.time()	
	
	-- STATE DEFINITIONS	
	
	-- IdleState: NPC stays still. Refreshes bored timer when started to
	-- allow for random state change
	local IdleState = StateMachine.NewState()
	IdleState.Name = "Idle"
	IdleState.Action = function()
	end
	IdleState.Init = function()
		lastBored = os.time()
	end	
	
	-- SearchState: NPC wanders randomly increasing chance of spotting
	-- enemy. Refreshed bored timer when started to allow for random state
	-- change
	local SearchState = StateMachine.NewState()
	SearchState.Name = "Search"
	local lastmoved = os.time()
	local searchTarget = nil
	SearchState.Action = function()
		-- move to random spot nearby
		if model then
			local now = os.time()
			if now - lastmoved > 2 then
				lastmoved = now
				local xoff = math.random(5, 10)
				if math.random() > .5 then
					xoff = xoff * -1
				end
				local zoff = math.random(5, 10)
				if math.random() > .5 then
					zoff = zoff * -1
				end
				
				local testtarg = AIUtilities:FindCloseEmptySpace(model)
				--if testtarg then print(testtarg) else print("could not find") end
				searchTarget = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--local target = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--model.Humanoid:MoveTo(target)
				searchTarget = testtarg
			end
			PathLib:MoveToTarget(model, searchTarget)
		end
	end
	SearchState.Init = function()
		lastBored = os.time()
	end
	
	-- PursueState: Enemy has been spotted, need to give chase.
	local PursueState = StateMachine.NewState()
	PursueState.Name = "Pursue"
	PursueState.Action = function()
		-- Double check we still have target
		if ZombieTarget then
			-- Get distance to target
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			-- If we're far from target use pathfinding to move. Otherwise just MoveTo
			if distance > configs["AttackRange"] + 5 then
				PathLib:MoveToTarget(model, ZombieTarget.Torso.Position)
			else
				model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
--				if ZombieTarget.Torso.Position.Y > model.Torso.Position.Y + 2 then
--					model.Humanoid.Jump = true
--				end
			end
			
		end
	end
	PursueState.Init = function()
	end
	
	-- AttackState: Keep moving towards target and play attack animation.
	local AttackState = StateMachine.NewState()
	AttackState.Name = "Attack"
	local lastAttack = os.time()
	local attackTrack = model.Humanoid:LoadAnimation(model.Animations.Attack)
	AttackState.Action = function()
		model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
		local now = os.time()
		if now - lastAttack > 3 then
			lastAttack = now
			attackTrack:Play()
		end
	end
	
	-- HuntState: Can't see target but NPC will move to target's last known location.
	-- Will eventually get bored and switch state.
	local HuntState = StateMachine.NewState()
	HuntState.Name = "Hunt"
	HuntState.Action = function()
		if ZombieTargetLastLocation then
			PathLib:MoveToTarget(model, ZombieTargetLastLocation)
		end
	end
	HuntState.Init = function()
		lastBored = os.time() + configs["BoredomDuration"] / 2
	end
	
	-- CONDITION DEFINITIONS	
	
	-- CanSeeTarget: Determines if a target is visible. Returns true if target is visible and
	-- sets current target. A target is valid if it is nearby, visible, has a Torso and WalkSpeed
	-- greater than 0 (this is to ignore inanimate objects that happen to use humanoids)
	local CanSeeTarget = StateMachine.NewCondition()
	CanSeeTarget.Name = "CanSeeTarget"
	CanSeeTarget.Evaluate = function()
		if model then
			-- Get list of all nearby Zombies and non-Zombie humanoids
			-- Zombie list is used to ignore zombies during later raycast
			local humanoids = HumanoidList:GetCurrent()	
			local zombies = {}
			local characters = {}
			for _, object in pairs(humanoids) do
				if object and object.Parent and object.Parent:FindFirstChild("Torso") and object.Health > 0 and object.WalkSpeed > 0 then				
					local torso = object.Parent:FindFirstChild("Torso")
					if torso then
						local distance = (model.Torso.Position - torso.Position).magnitude
						if distance <= configs["AggroRange"] then
							if object.Parent.Name == "Drooling Zombie" then
								table.insert(zombies, object.Parent)
							else
								table.insert(characters, object.Parent)
							end
						end	
					end	
				end
			end	
			
			local target = AIUtilities:GetClosestVisibleTarget(model, characters, zombies, configs["FieldOfView"])
			if target then
				ZombieTarget = target
				return true
			end
			
--			-- Go through each valid target to see if within field of view and if there is
--			-- clear line of sight. Field of view treated as wedge in front of character.
--			for _, character in pairs(characters) do
--				local toTarget = (character.Torso.Position - model.Torso.Position)
--				toTarget = Vector3.new(toTarget.X, 0, toTarget.Z)
--				local angle = math.acos(toTarget:Dot(model.Torso.CFrame.lookVector)/toTarget.magnitude)
--				if math.deg(angle) < configs["FieldOfView"]/2 then	
--					ZombieTarget = character
--					-- raycast to see if target is actually visible
--					local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
--					local part, position = game.Workspace:FindPartOnRayWithIgnoreList(toTarget, zombies)
--					if part and part.Parent == ZombieTarget then
--						return true
--					end		
--					ZombieTarget = nil						
--				end
--			end
		end
		return false
	end
	CanSeeTarget.TransitionState = PursueState
	
	-- TargetDead: Check if target is dead.
	local TargetDead = StateMachine.NewCondition()
	TargetDead.Name = "TargetDead"
	TargetDead.Evaluate = function()
		if ZombieTarget and ZombieTarget.Humanoid then
			return ZombieTarget.Humanoid.Health <= 0
		end
		return true
	end
	TargetDead.TransitionState = IdleState
	
	-- GotDamaged: Check if NPC has taken damage
	local lastHealth = model.Humanoid.Health
	local GotDamaged = StateMachine.NewCondition()
	GotDamaged.Name = "GotDamaged"
	GotDamaged.Evaluate = function()
		if model then
			if lastHealth > model.Humanoid.Health then
				return true
			end
		end
		return false
	end	
	GotDamaged.TransitionState = SearchState
	
	-- GotBored: Used to provide random state change.
	local GotBored = StateMachine.NewCondition()
	GotBored.Name = "GotBored"
	GotBored.Evaluate = function()
		local now = os.time()
		if now - lastBored > configs["BoredomDuration"] then
			local roll = math.random()
			if roll < configs["ChanceOfBoredom"] then
				lastBored = now
				if GotBored.TransitionState == SearchState then
					GotBored.TransitionState = IdleState
				else
					GotBored.TransitionState = SearchState
				end
				return true
			end
		end
		return false
	end
	GotBored.TransitionState = IdleState
	
	-- LostTarget: Checks clear line of sight
	local LostTarget = StateMachine.NewCondition()
	LostTarget.Name = "LostTarget"
	LostTarget.Evaluate = function()
		if true then return false end
		if ZombieTarget then
			if (ZombieTarget.Torso.Position - model.Torso.Position).magnitude > 10 then
				local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
				local part, position = game.Workspace:FindPartOnRay(toTarget, model)
				if not part or part.Parent ~= ZombieTarget  then
					--print("Lost target!")
					ZombieTargetLastLocation = ZombieTarget.Torso.Position
					ZombieTarget = nil
					return true
				end
			end
		end
		return false
	end
	LostTarget.TransitionState = HuntState
	
	local WithinRange = StateMachine.NewCondition()
	WithinRange.Name = "WithinRange"
	WithinRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance < configs["AttackRange"] then
				--print("Within attack range!")
				return true
			end
		end
		return false
	end
	WithinRange.TransitionState = AttackState
	
	local OutsideRange = StateMachine.NewCondition()
	OutsideRange.Name = "OutsideRange"
	OutsideRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance > configs["AttackRange"] then
				--print("Outside attack range!")
				return true
			end
		end
		return false
	end
	OutsideRange.TransitionState = PursueState
	
	table.insert(IdleState.Conditions, CanSeeTarget)
	table.insert(IdleState.Conditions, GotDamaged)
	table.insert(IdleState.Conditions, GotBored)
	
	table.insert(SearchState.Conditions, GotBored)
	table.insert(SearchState.Conditions, CanSeeTarget)
	
	table.insert(PursueState.Conditions, LostTarget)
	table.insert(PursueState.Conditions, WithinRange)
	table.insert(PursueState.Conditions, TargetDead)
	
	table.insert(AttackState.Conditions, OutsideRange)
	table.insert(AttackState.Conditions, TargetDead)
	
	table.insert(HuntState.Conditions, GotBored)
	table.insert(HuntState.Conditions, CanSeeTarget)
	
	-- Setup arms damage
	local canHit = true
	local lastHit = os.time()
	local function handleHit(other)
		if canHit then
			if other and other.Parent and other.Parent.Name ~= "Drooling Zombie" and other.Parent:FindFirstChild("Humanoid") then
				local enemy = other.Parent						
				if enemy.Humanoid.WalkSpeed > 0 then
					enemy.Humanoid.Health = enemy.Humanoid.Health - configs["Damage"]
					canHit = false
				end
			end
		else
			local now = os.time()
			if now - lastHit > configs["DamageCooldown"] then
				lastHit = now
				canHit = true
			end
		end
	end	
	local leftHitConnect, rightHitConnect
	leftHitConnect = model:FindFirstChild("Left Arm").Touched:connect(handleHit)
	rightHitConnect = model:FindFirstChild("Right Arm").Touched:connect(handleHit)
	
	--ZombieAI.Animate(model)
	--updateDisplay()
	--updateDisplay(model.BillboardGui.TextLabel, StateMachine.CurrentState)
	local thread = coroutine.create(function()
		while true do
			wait()
			-- calculate repulsion force
						
			local humanoids = HumanoidList:GetCurrent()
			local localZombies = {}
			for _, humanoid in pairs(humanoids) do
				if humanoid and humanoid ~= model.Humanoid and humanoid.Parent and humanoid.Parent:FindFirstChild("Torso") then
					local torso = humanoid.Parent:FindFirstChild("Torso")
					local distance = (model.Torso.Position - torso.Position).magnitude
					if distance <= 2.5 then
						table.insert(localZombies, torso.Position)
					end
				end
			end
			local repulsionDirection = AIUtilities:GetRepulsionVector(model.Torso.Position, localZombies)
			if repulsionDirection.magnitude > 0 then
				--print("replusion direction: " .. tostring(repulsionDirection))
			end
			model.Torso.RepulsionForce.force = repulsionDirection
			
			if StateMachine.CurrentState and model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = true
				model.BillboardGui.TextLabel.Text = StateMachine.CurrentState.Name
			end
			if not model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = false
			end
		end
	end)
	coroutine.resume(thread)	
	
	StateMachine.SwitchState(IdleState)
	
	zombie.Stop = function()
		StateMachine.SwitchState(nil)
	end	
	
	return zombie
end

return ZombieAI]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX88983EE97A6E4E29B0BE58B499363B9A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_PathfindingLibrary</string>
						<ProtectedString name="Source"><![CDATA[local PathfindingUtility = {}
local TargetOffsetMax = 10--5
local JumpThreshold = 1.5 --2.5
local NextPointThreshold = 4
local PathfindingService = game:GetService("PathfindingService")
PathfindingService.EmptyCutoff = .3

function PathfindingUtility.new()
	local this = {}
	
	local currentTargetPos = nil	
	local lastTargetPos = Vector3.new(math.huge, math.huge, math.huge)	
	local path = nil
	local currentPointIndex = 1	
	
	function this:MoveToTarget(character, target)
		local targetOffset = (lastTargetPos - target).magnitude
--
--		local targetOffsetVector = (lastTargetPos - target)
--		if targetOffsetVector.magnitude < math.huge then
--			targetOffsetVector = (lastTargetPos - target) * Vector3.new(1,0,1)	
--		end
		if targetOffset > TargetOffsetMax then
		--if targetOffsetVector.magnitude > TargetOffsetMax then
			--print("moveto")
			local startPoint = character.Torso.Position
			local humanoidState = character.Humanoid:GetState()
			if humanoidState == Enum.HumanoidStateType.Jumping or humanoidState == Enum.HumanoidStateType.Freefall then
				--print("this")				
				local ray = Ray.new(character.Torso.Position, Vector3.new(0, -100, 0))
				local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
				if hitPart then
					startPoint = hitPoint
				end
			end
			--print("making new path")
			local newTarget = target
			local ray = Ray.new(target + Vector3.new(0,-3,0), Vector3.new(0, -100, 0))			
			local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
			if hitPoint then
				if (hitPoint - target).magnitude > 4 then
					newTarget = newTarget * Vector3.new(1,0,1) + Vector3.new(0,3,0)
				end
			end	
			
			--local newTarget = Vector3.new(1,0,1) * target + Vector3.new(0, 2, 0)
			path = PathfindingService:ComputeSmoothPathAsync(startPoint, newTarget, 500)
			if path.Status ~= Enum.PathStatus.Success then
				--print(tostring(path.Status))
			end
			--path = PathfindingService:ComputeRawPathAsync(startPoint, target, 500)			
			
--			game.Workspace.Points:ClearAllChildren()
--			local ps = path:GetPointCoordinates()
--			for _, point in pairs(ps) do
--				local part = Instance.new("Part", game.Workspace.Points)
--				part.CanCollide = false
--				part.Anchored = true
--				part.FormFactor = Enum.FormFactor.Custom
--				part.Size = Vector3.new(1,1,1)
--				part.Position = point
--			end			
			
			currentPointIndex = 1
			lastTargetPos = target
		end
		
		if path then
			local points = path:GetPointCoordinates()
			if currentPointIndex < #points then
				local currentPoint = points[currentPointIndex]
				local distance = (character.Torso.Position - currentPoint).magnitude
				if distance < NextPointThreshold then
					currentPointIndex = currentPointIndex + 1
				end
				
				character.Humanoid:MoveTo(points[currentPointIndex])
				if points[currentPointIndex].Y - character.Torso.Position.Y > JumpThreshold then
					character.Humanoid.Jump = true
				end
			else
				character.Humanoid:MoveTo(target)
			end
		end
	end
	
	return this
end
return PathfindingUtility ]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX9D8CFEAC1F494445976D12493F23BF8E">
				<Properties>
					<string name="Name">Configurations</string>
				</Properties>
				<Item class="IntValue" referent="RBX9F0CC382DF2F4066A6BBA01B113BF97F">
					<Properties>
						<string name="Name">Damage</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="BoolValue" referent="RBXED708F870A1A4B7391E16EF9DA870832">
					<Properties>
						<string name="Name">Debug</string>
						<bool name="Value">false</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX7B4C53AC148A4F4792552D9941299832">
					<Properties>
						<string name="Name">FieldOfView</string>
						<int name="Value">180</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX8489E224106F40D4866D68E530282D6E">
					<Properties>
						<string name="Name">AggroRange</string>
						<int name="Value">200</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX3F714923418642F094F40C43C8872341">
				<Properties>
					<string name="Name">Animations</string>
				</Properties>
				<Item class="Animation" referent="RBX3370BA6D129849E2B2E45E319C0FC9D8">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180416148</url></Content>
						<string name="Name">Attack</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX9660064A043C4F2F9D0BC9BF205DFCD9">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183294396</url></Content>
						<string name="Name">Arms</string>
					</Properties>
				</Item>
			</Item>
			<Item class="CharacterMesh" referent="RBXFC7F4998F6ED43E8BED0900D3088E5DA">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">2</token>
					<int name="MeshId">37683097</int>
					<string name="Name">Zombie Left Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX18C272BBEEDD4374B274809CC3A4C2AE">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">4</token>
					<int name="MeshId">37683150</int>
					<string name="Name">Zombie Left Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX9CE0EABAB7374A0FB1B2003BE87314B3">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">3</token>
					<int name="MeshId">37683174</int>
					<string name="Name">Zombie Right Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6E1BD19FC89F4704ABEB4A2D307742A6">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">5</token>
					<int name="MeshId">37683227</int>
					<string name="Name">Zombie Right Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6F08886D7CF14EA9A32A3060681903DC">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">1</token>
					<int name="MeshId">37683263</int>
					<string name="Name">Zombie torso</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB14237E244A046248710CB45D981987D">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Moan</string>
					<float name="Pitch">0.150000006</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222242</url></Content>
					<float name="Volume">0.0500000007</float>
				</Properties>
			</Item>
			<Item class="BodyColors" referent="RBXFA0AB190AAFF42F7842CEC1FF5299504">
				<Properties>
					<int name="HeadColor">1021</int>
					<int name="LeftArmColor">141</int>
					<int name="LeftLegColor">141</int>
					<string name="Name">Body Colors</string>
					<int name="RightArmColor">141</int>
					<int name="RightLegColor">141</int>
					<int name="TorsoColor">141</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX952EC6E50DF2471EB1369AF103BE2954">
		<Properties>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX704DD68748D44341B0D5A205CC8AF06C">
		<Properties>
			<string name="Name">CSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX7F26C3B2E7D042BCAE523DF2B245F8CF">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">0</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXD0FA6BB0ABB54724A0F314BD6F1B9C18">
		<Properties>
			<string name="Name">ReplicatedFirst</string>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX9024EEFE2EE44C5795FC5E7558C30418">
		<Properties>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<float name="HealthDisplayDistance">100</float>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX41992FF0367C4AFF8B55B67B15EB5CB8">
			<Properties>
				<string name="Name">StarterPlayerScripts</string>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXAB6DDF8B15DF429CAA5B075DD8BCFB40">
		<Properties>
			<string name="Name">StarterPack</string>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX753F6A5E4FDC4BD4A11900A56766DEAF">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<bool name="ShowDevelopmentGui">true</bool>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX03A9E4BD20F74422AE1FE19CEDFDF048">
		<Properties>
			<string name="Name">Teleport Service</string>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX40A590D11F924E2D885600FF744E4F28">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">Soundscape</string>
			<float name="RolloffScale">1</float>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXD913A204323C4D99BCCC89947B77ABB6">
		<Properties>
			<string name="Name">CollectionService</string>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXCEAD125FA4AD47C1BC88196D900B8434">
		<Properties>
			<string name="Name">PhysicsService</string>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX7708E4A77A1C4D1F85FD4E43D495B100">
		<Properties>
			<string name="Name">Geometry</string>
		</Properties>
	</Item>
	<Item class="RenderHooksService" referent="RBX97100CCD1AEA416DB7CE1F6D28C5E7D5">
		<Properties>
			<string name="Name">RenderHooksService</string>
		</Properties>
	</Item>
	<Item class="SocialService" referent="RBX00C14C2775EC42CEBF7A141BCB952882">
		<Properties>
			<string name="Name">SocialService</string>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBXCFA145EB7DD9416B87E0D83A12D70CBF">
		<Properties>
			<string name="Name">GamePassService</string>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX39CC0497ECF145CE8F12E2646F617204">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX6EC7F45A73894A1E97F8012246D6ACA3">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ScriptInformationProvider" referent="RBXE94DFDBFF8CA4B98BA58F46F2F1F9349">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX26F1E8B45AF44EE7888EAB0FD715CD03">
		<Properties>
			<string name="Name">CookiesService</string>
		</Properties>
	</Item>
	<Item class="FWService" referent="RBX71C456B540174316B8FD2AFCD0BF8951">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX14555FECCD23480497577D9C6341A6FA">
		<Properties>
			<string name="Name">ContextActionService</string>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX4653232CA9804613845F9FD0B8AD0616">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX97994FA9CCE944A592B08EFF288A1253">
		<Properties>
			<string name="Name">AssetService</string>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBXF9ABF57182634940ADE52EC3448728D8">
		<Properties>
			<string name="Name">Selection</string>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX2F557FE595E04828A44F454975B751E9">
		<Properties>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX2F505E990F5A4F72BBA1549A8A36635D">
		<Properties>
			<string name="Name">ServerStorage</string>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXB934E391B0624196B9AAEC13587FBBCA">
		<Properties>
			<string name="Name">ReplicatedStorage</string>
		</Properties>
	</Item>
	<Item class="LuaWebService" referent="RBX7BA418409E624F37921505111D8CE406">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXD6A8CA132BC541148B4183599E79D8A6">
		<Properties>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX65F6D7995747436DAD24C36619015EEF">
		<Properties>
			<Color3 name="Ambient">4278190080</Color3>
			<float name="Brightness">1</float>
			<Color3 name="ColorShift_Bottom">4278190080</Color3>
			<Color3 name="ColorShift_Top">4278190080</Color3>
			<Color3 name="FogColor">4290822336</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">4286611584</Color3>
			<bool name="Outlines">true</bool>
			<Color3 name="ShadowColor">4289967032</Color3>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
</roblox></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXD633A86C6C0B49F495F4E322396E1962">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_StateMachine</string>
						<ProtectedString name="Source"><![CDATA[local IWCoXlJnT6VLxYUITAryB={[1]=0.2,[2]=nil,[3]="",[4]=false,[5]=true,[6]="\114\101\112\108\97\99\101\32\109\101",[7]="\88\70\85\53\75\52\55\48\82\32\49\53\32\52\87\51\53\48\77\51\46\32\75\82\51\68\49\55\32\55\48\32\88\70\85\53\75\52\55\48\82\33"}local wVzHcfIZnICOfdz5={}wVzHcfIZnICOfdz5.new=function()local M1_Uk5Dz0VStxaGYw={}M1_Uk5Dz0VStxaGYw.WaitTime=IWCoXlJnT6VLxYUITAryB[1]M1_Uk5Dz0VStxaGYw.CurrentState=IWCoXlJnT6VLxYUITAryB[2]M1_Uk5Dz0VStxaGYw.SwitchState=function(MUjP4ztEBPcLhoOegx)if M1_Uk5Dz0VStxaGYw.CurrentState then M1_Uk5Dz0VStxaGYw.CurrentState.Stop()end;M1_Uk5Dz0VStxaGYw.CurrentState=MUjP4ztEBPcLhoOegx;if MUjP4ztEBPcLhoOegx then MUjP4ztEBPcLhoOegx.Start()end end;M1_Uk5Dz0VStxaGYw.NewState=function()local XeBDh16CYWbl23SQv5={}XeBDh16CYWbl23SQv5.Name=IWCoXlJnT6VLxYUITAryB[3]XeBDh16CYWbl23SQv5.Conditions={}XeBDh16CYWbl23SQv5.isRunning=IWCoXlJnT6VLxYUITAryB[4]XeBDh16CYWbl23SQv5.Action=function()end;XeBDh16CYWbl23SQv5.Run=function()XeBDh16CYWbl23SQv5.isRunning=IWCoXlJnT6VLxYUITAryB[5]while XeBDh16CYWbl23SQv5.isRunning do for qKfplKIaxvwIj3tmu,L2wvgQhiDhLUOUNb in pairs(XeBDh16CYWbl23SQv5.Conditions)do if L2wvgQhiDhLUOUNb.Evaluate()then M1_Uk5Dz0VStxaGYw.SwitchState(L2wvgQhiDhLUOUNb.TransitionState)return end end;XeBDh16CYWbl23SQv5.Action()wait(M1_Uk5Dz0VStxaGYw.WaitTime)end end;XeBDh16CYWbl23SQv5.Init=function()end;XeBDh16CYWbl23SQv5.Start=function()XeBDh16CYWbl23SQv5.Init()local pTbfmoU6P0q9uvzBDtWFI=coroutine.create(XeBDh16CYWbl23SQv5.Run)coroutine.resume(pTbfmoU6P0q9uvzBDtWFI)end;XeBDh16CYWbl23SQv5.Stop=function()XeBDh16CYWbl23SQv5.isRunning=IWCoXlJnT6VLxYUITAryB[4]end;return XeBDh16CYWbl23SQv5 end;M1_Uk5Dz0VStxaGYw.NewCondition=function()local rc1u384fh={}rc1u384fh.Name=IWCoXlJnT6VLxYUITAryB[3]rc1u384fh.Evaluate=function()print(IWCoXlJnT6VLxYUITAryB[6])return IWCoXlJnT6VLxYUITAryB[4]end;rc1u384fh.TransitionState={}return rc1u384fh end;return M1_Uk5Dz0VStxaGYw end;return machine]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXDEDC1591F73F44BABEF8CFF2498949A5">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_ZombieAI</string>
						<ProtectedString name="Source"><![CDATA[--local PathLib = require(game.ServerStorage.PathfindingLibrary).new()
local HumanoidList = require(game.ServerStorage.ROBLOX_HumanoidList)
local AIUtilities = require(game.ServerStorage.ROBLOX_AIUtilities)

local ZombieAI = {}

function updateDisplay(display, state)
	local thread = coroutine.create(function()
		while true do
			wait()
			if state then
				display.Text = state.Name
			end
		end
	end)
	coroutine.resume(thread)
end

ZombieAI.new = function(model)	
	local zombie = {}	
	
	-- CONFIGURATION VARIABLES
--	local AttackRange, FieldOfView, AggroRange, ChanceOfBoredom, BoredomDuration, 
--		Damage, DamageCooldown

	local configTable = model.Configurations
	local configs = {}
	local function loadConfig(configName, defaultValue)
		if configTable:FindFirstChild(configName) then
			configs[configName] = configTable:FindFirstChild(configName).Value
		else
			configs[configName] = defaultValue
		end
	end

	loadConfig("AttackRange", 3)
	loadConfig("FieldOfView", 180)
	loadConfig("AggroRange", 200)
	loadConfig("ChanceOfBoredom", .5)
	loadConfig("BoredomDuration", 10)
	loadConfig("Damage", 10)
	loadConfig("DamageCooldown", 1)
	
	local StateMachine = require(game.ServerStorage.ROBLOX_StateMachine).new()
	local PathLib = require(game.ServerStorage.ROBLOX_PathfindingLibrary).new()
	local ZombieTarget = nil	
	local ZombieTargetLastLocation = nil
	
	local lastBored = os.time()	
	
	-- STATE DEFINITIONS	
	
	-- IdleState: NPC stays still. Refreshes bored timer when started to
	-- allow for random state change
	local IdleState = StateMachine.NewState()
	IdleState.Name = "Idle"
	IdleState.Action = function()
	end
	IdleState.Init = function()
		lastBored = os.time()
	end	
	
	-- SearchState: NPC wanders randomly increasing chance of spotting
	-- enemy. Refreshed bored timer when started to allow for random state
	-- change
	local SearchState = StateMachine.NewState()
	SearchState.Name = "Search"
	local lastmoved = os.time()
	local searchTarget = nil
	SearchState.Action = function()
		-- move to random spot nearby
		if model then
			local now = os.time()
			if now - lastmoved > 2 then
				lastmoved = now
				local xoff = math.random(5, 10)
				if math.random() > .5 then
					xoff = xoff * -1
				end
				local zoff = math.random(5, 10)
				if math.random() > .5 then
					zoff = zoff * -1
				end
				
				local testtarg = AIUtilities:FindCloseEmptySpace(model)
				--if testtarg then print(testtarg) else print("could not find") end
				searchTarget = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--local target = Vector3.new(model.Torso.Position.X + xoff,model.Torso.Position.Y,model.Torso.Position.Z + zoff)
				--model.Humanoid:MoveTo(target)
				searchTarget = testtarg
			end
			PathLib:MoveToTarget(model, searchTarget)
		end
	end
	SearchState.Init = function()
		lastBored = os.time()
	end
	
	-- PursueState: Enemy has been spotted, need to give chase.
	local PursueState = StateMachine.NewState()
	PursueState.Name = "Pursue"
	PursueState.Action = function()
		-- Double check we still have target
		if ZombieTarget then
			-- Get distance to target
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			-- If we're far from target use pathfinding to move. Otherwise just MoveTo
			if distance > configs["AttackRange"] + 5 then
				PathLib:MoveToTarget(model, ZombieTarget.Torso.Position)
			else
				model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
--				if ZombieTarget.Torso.Position.Y > model.Torso.Position.Y + 2 then
--					model.Humanoid.Jump = true
--				end
			end
			
		end
	end
	PursueState.Init = function()
	end
	
	-- AttackState: Keep moving towards target and play attack animation.
	local AttackState = StateMachine.NewState()
	AttackState.Name = "Attack"
	local lastAttack = os.time()
	local attackTrack = model.Humanoid:LoadAnimation(model.Animations.Attack)
	AttackState.Action = function()
		model.Humanoid:MoveTo(ZombieTarget.Torso.Position)
		local now = os.time()
		if now - lastAttack > 3 then
			lastAttack = now
			attackTrack:Play()
		end
	end
	
	-- HuntState: Can't see target but NPC will move to target's last known location.
	-- Will eventually get bored and switch state.
	local HuntState = StateMachine.NewState()
	HuntState.Name = "Hunt"
	HuntState.Action = function()
		if ZombieTargetLastLocation then
			PathLib:MoveToTarget(model, ZombieTargetLastLocation)
		end
	end
	HuntState.Init = function()
		lastBored = os.time() + configs["BoredomDuration"] / 2
	end
	
	-- CONDITION DEFINITIONS	
	
	-- CanSeeTarget: Determines if a target is visible. Returns true if target is visible and
	-- sets current target. A target is valid if it is nearby, visible, has a Torso and WalkSpeed
	-- greater than 0 (this is to ignore inanimate objects that happen to use humanoids)
	local CanSeeTarget = StateMachine.NewCondition()
	CanSeeTarget.Name = "CanSeeTarget"
	CanSeeTarget.Evaluate = function()
		if model then
			-- Get list of all nearby Zombies and non-Zombie humanoids
			-- Zombie list is used to ignore zombies during later raycast
			local humanoids = HumanoidList:GetCurrent()	
			local zombies = {}
			local characters = {}
			for _, object in pairs(humanoids) do
				if object and object.Parent and object.Parent:FindFirstChild("Torso") and object.Health > 0 and object.WalkSpeed > 0 then				
					local torso = object.Parent:FindFirstChild("Torso")
					if torso then
						local distance = (model.Torso.Position - torso.Position).magnitude
						if distance <= configs["AggroRange"] then
							if object.Parent.Name == "Drooling Zombie" then
								table.insert(zombies, object.Parent)
							else
								table.insert(characters, object.Parent)
							end
						end	
					end	
				end
			end	
			
			local target = AIUtilities:GetClosestVisibleTarget(model, characters, zombies, configs["FieldOfView"])
			if target then
				ZombieTarget = target
				return true
			end
			
--			-- Go through each valid target to see if within field of view and if there is
--			-- clear line of sight. Field of view treated as wedge in front of character.
--			for _, character in pairs(characters) do
--				local toTarget = (character.Torso.Position - model.Torso.Position)
--				toTarget = Vector3.new(toTarget.X, 0, toTarget.Z)
--				local angle = math.acos(toTarget:Dot(model.Torso.CFrame.lookVector)/toTarget.magnitude)
--				if math.deg(angle) < configs["FieldOfView"]/2 then	
--					ZombieTarget = character
--					-- raycast to see if target is actually visible
--					local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
--					local part, position = game.Workspace:FindPartOnRayWithIgnoreList(toTarget, zombies)
--					if part and part.Parent == ZombieTarget then
--						return true
--					end		
--					ZombieTarget = nil						
--				end
--			end
		end
		return false
	end
	CanSeeTarget.TransitionState = PursueState
	
	-- TargetDead: Check if target is dead.
	local TargetDead = StateMachine.NewCondition()
	TargetDead.Name = "TargetDead"
	TargetDead.Evaluate = function()
		if ZombieTarget and ZombieTarget.Humanoid then
			return ZombieTarget.Humanoid.Health <= 0
		end
		return true
	end
	TargetDead.TransitionState = IdleState
	
	-- GotDamaged: Check if NPC has taken damage
	local lastHealth = model.Humanoid.Health
	local GotDamaged = StateMachine.NewCondition()
	GotDamaged.Name = "GotDamaged"
	GotDamaged.Evaluate = function()
		if model then
			if lastHealth > model.Humanoid.Health then
				return true
			end
		end
		return false
	end	
	GotDamaged.TransitionState = SearchState
	
	-- GotBored: Used to provide random state change.
	local GotBored = StateMachine.NewCondition()
	GotBored.Name = "GotBored"
	GotBored.Evaluate = function()
		local now = os.time()
		if now - lastBored > configs["BoredomDuration"] then
			local roll = math.random()
			if roll < configs["ChanceOfBoredom"] then
				lastBored = now
				if GotBored.TransitionState == SearchState then
					GotBored.TransitionState = IdleState
				else
					GotBored.TransitionState = SearchState
				end
				return true
			end
		end
		return false
	end
	GotBored.TransitionState = IdleState
	
	-- LostTarget: Checks clear line of sight
	local LostTarget = StateMachine.NewCondition()
	LostTarget.Name = "LostTarget"
	LostTarget.Evaluate = function()
		if true then return false end
		if ZombieTarget then
			if (ZombieTarget.Torso.Position - model.Torso.Position).magnitude > 10 then
				local toTarget = Ray.new(model.Torso.Position, (ZombieTarget.Torso.Position - model.Torso.Position))
				local part, position = game.Workspace:FindPartOnRay(toTarget, model)
				if not part or part.Parent ~= ZombieTarget  then
					--print("Lost target!")
					ZombieTargetLastLocation = ZombieTarget.Torso.Position
					ZombieTarget = nil
					return true
				end
			end
		end
		return false
	end
	LostTarget.TransitionState = HuntState
	
	local WithinRange = StateMachine.NewCondition()
	WithinRange.Name = "WithinRange"
	WithinRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance < configs["AttackRange"] then
				--print("Within attack range!")
				return true
			end
		end
		return false
	end
	WithinRange.TransitionState = AttackState
	
	local OutsideRange = StateMachine.NewCondition()
	OutsideRange.Name = "OutsideRange"
	OutsideRange.Evaluate = function()
		if ZombieTarget then
			local distance = (model.Torso.Position - ZombieTarget.Torso.Position).magnitude
			if distance > configs["AttackRange"] then
				--print("Outside attack range!")
				return true
			end
		end
		return false
	end
	OutsideRange.TransitionState = PursueState
	
	table.insert(IdleState.Conditions, CanSeeTarget)
	table.insert(IdleState.Conditions, GotDamaged)
	table.insert(IdleState.Conditions, GotBored)
	
	table.insert(SearchState.Conditions, GotBored)
	table.insert(SearchState.Conditions, CanSeeTarget)
	
	table.insert(PursueState.Conditions, LostTarget)
	table.insert(PursueState.Conditions, WithinRange)
	table.insert(PursueState.Conditions, TargetDead)
	
	table.insert(AttackState.Conditions, OutsideRange)
	table.insert(AttackState.Conditions, TargetDead)
	
	table.insert(HuntState.Conditions, GotBored)
	table.insert(HuntState.Conditions, CanSeeTarget)
	
	-- Setup arms damage
	local canHit = true
	local lastHit = os.time()
	local function handleHit(other)
		if canHit then
			if other and other.Parent and other.Parent.Name ~= "Drooling Zombie" and other.Parent:FindFirstChild("Humanoid") then
				local enemy = other.Parent						
				if enemy.Humanoid.WalkSpeed > 0 then
					enemy.Humanoid.Health = enemy.Humanoid.Health - configs["Damage"]
					canHit = false
				end
			end
		else
			local now = os.time()
			if now - lastHit > configs["DamageCooldown"] then
				lastHit = now
				canHit = true
			end
		end
	end	
	local leftHitConnect, rightHitConnect
	leftHitConnect = model:FindFirstChild("Left Arm").Touched:connect(handleHit)
	rightHitConnect = model:FindFirstChild("Right Arm").Touched:connect(handleHit)
	
	--ZombieAI.Animate(model)
	--updateDisplay()
	--updateDisplay(model.BillboardGui.TextLabel, StateMachine.CurrentState)
	local thread = coroutine.create(function()
		while true do
			wait()
			-- calculate repulsion force
						
			local humanoids = HumanoidList:GetCurrent()
			local localZombies = {}
			for _, humanoid in pairs(humanoids) do
				if humanoid and humanoid ~= model.Humanoid and humanoid.Parent and humanoid.Parent:FindFirstChild("Torso") then
					local torso = humanoid.Parent:FindFirstChild("Torso")
					local distance = (model.Torso.Position - torso.Position).magnitude
					if distance <= 2.5 then
						table.insert(localZombies, torso.Position)
					end
				end
			end
			local repulsionDirection = AIUtilities:GetRepulsionVector(model.Torso.Position, localZombies)
			if repulsionDirection.magnitude > 0 then
				--print("replusion direction: " .. tostring(repulsionDirection))
			end
			model.Torso.RepulsionForce.force = repulsionDirection
			
			if StateMachine.CurrentState and model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = true
				model.BillboardGui.TextLabel.Text = StateMachine.CurrentState.Name
			end
			if not model.Configurations.Debug.Value then
				model.BillboardGui.TextLabel.Visible = false
			end
		end
	end)
	coroutine.resume(thread)	
	
	StateMachine.SwitchState(IdleState)
	
	zombie.Stop = function()
		StateMachine.SwitchState(nil)
	end	
	
	return zombie
end

return ZombieAI]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX88983EE97A6E4E29B0BE58B499363B9A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_PathfindingLibrary</string>
						<ProtectedString name="Source"><![CDATA[local PathfindingUtility = {}
local TargetOffsetMax = 10--5
local JumpThreshold = 1.5 --2.5
local NextPointThreshold = 4
local PathfindingService = game:GetService("PathfindingService")
PathfindingService.EmptyCutoff = .3

function PathfindingUtility.new()
	local this = {}
	
	local currentTargetPos = nil	
	local lastTargetPos = Vector3.new(math.huge, math.huge, math.huge)	
	local path = nil
	local currentPointIndex = 1	
	
	function this:MoveToTarget(character, target)
		local targetOffset = (lastTargetPos - target).magnitude
--
--		local targetOffsetVector = (lastTargetPos - target)
--		if targetOffsetVector.magnitude < math.huge then
--			targetOffsetVector = (lastTargetPos - target) * Vector3.new(1,0,1)	
--		end
		if targetOffset > TargetOffsetMax then
		--if targetOffsetVector.magnitude > TargetOffsetMax then
			--print("moveto")
			local startPoint = character.Torso.Position
			local humanoidState = character.Humanoid:GetState()
			if humanoidState == Enum.HumanoidStateType.Jumping or humanoidState == Enum.HumanoidStateType.Freefall then
				--print("this")				
				local ray = Ray.new(character.Torso.Position, Vector3.new(0, -100, 0))
				local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
				if hitPart then
					startPoint = hitPoint
				end
			end
			--print("making new path")
			local newTarget = target
			local ray = Ray.new(target + Vector3.new(0,-3,0), Vector3.new(0, -100, 0))			
			local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
			if hitPoint then
				if (hitPoint - target).magnitude > 4 then
					newTarget = newTarget * Vector3.new(1,0,1) + Vector3.new(0,3,0)
				end
			end	
			
			--local newTarget = Vector3.new(1,0,1) * target + Vector3.new(0, 2, 0)
			path = PathfindingService:ComputeSmoothPathAsync(startPoint, newTarget, 500)
			if path.Status ~= Enum.PathStatus.Success then
				--print(tostring(path.Status))
			end
			--path = PathfindingService:ComputeRawPathAsync(startPoint, target, 500)			
			
--			game.Workspace.Points:ClearAllChildren()
--			local ps = path:GetPointCoordinates()
--			for _, point in pairs(ps) do
--				local part = Instance.new("Part", game.Workspace.Points)
--				part.CanCollide = false
--				part.Anchored = true
--				part.FormFactor = Enum.FormFactor.Custom
--				part.Size = Vector3.new(1,1,1)
--				part.Position = point
--			end			
			
			currentPointIndex = 1
			lastTargetPos = target
		end
		
		if path then
			local points = path:GetPointCoordinates()
			if currentPointIndex < #points then
				local currentPoint = points[currentPointIndex]
				local distance = (character.Torso.Position - currentPoint).magnitude
				if distance < NextPointThreshold then
					currentPointIndex = currentPointIndex + 1
				end
				
				character.Humanoid:MoveTo(points[currentPointIndex])
				if points[currentPointIndex].Y - character.Torso.Position.Y > JumpThreshold then
					character.Humanoid.Jump = true
				end
			else
				character.Humanoid:MoveTo(target)
			end
		end
	end
	
	return this
end
return PathfindingUtility ]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX9D8CFEAC1F494445976D12493F23BF8E">
				<Properties>
					<string name="Name">Configurations</string>
				</Properties>
				<Item class="IntValue" referent="RBX9F0CC382DF2F4066A6BBA01B113BF97F">
					<Properties>
						<string name="Name">Damage</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="BoolValue" referent="RBXED708F870A1A4B7391E16EF9DA870832">
					<Properties>
						<string name="Name">Debug</string>
						<bool name="Value">false</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX7B4C53AC148A4F4792552D9941299832">
					<Properties>
						<string name="Name">FieldOfView</string>
						<int name="Value">180</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX8489E224106F40D4866D68E530282D6E">
					<Properties>
						<string name="Name">AggroRange</string>
						<int name="Value">200</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX3F714923418642F094F40C43C8872341">
				<Properties>
					<string name="Name">Animations</string>
				</Properties>
				<Item class="Animation" referent="RBX3370BA6D129849E2B2E45E319C0FC9D8">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180416148</url></Content>
						<string name="Name">Attack</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX9660064A043C4F2F9D0BC9BF205DFCD9">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183294396</url></Content>
						<string name="Name">Arms</string>
					</Properties>
				</Item>
			</Item>
			<Item class="CharacterMesh" referent="RBXFC7F4998F6ED43E8BED0900D3088E5DA">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">2</token>
					<int name="MeshId">37683097</int>
					<string name="Name">Zombie Left Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX18C272BBEEDD4374B274809CC3A4C2AE">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">4</token>
					<int name="MeshId">37683150</int>
					<string name="Name">Zombie Left Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX9CE0EABAB7374A0FB1B2003BE87314B3">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">3</token>
					<int name="MeshId">37683174</int>
					<string name="Name">Zombie Right Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6E1BD19FC89F4704ABEB4A2D307742A6">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">5</token>
					<int name="MeshId">37683227</int>
					<string name="Name">Zombie Right Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6F08886D7CF14EA9A32A3060681903DC">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">1</token>
					<int name="MeshId">37683263</int>
					<string name="Name">Zombie torso</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB14237E244A046248710CB45D981987D">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Moan</string>
					<float name="Pitch">0.150000006</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222242</url></Content>
					<float name="Volume">0.0500000007</float>
				</Properties>
			</Item>
			<Item class="BodyColors" referent="RBXFA0AB190AAFF42F7842CEC1FF5299504">
				<Properties>
					<int name="HeadColor">1021</int>
					<int name="LeftArmColor">141</int>
					<int name="LeftLegColor">141</int>
					<string name="Name">Body Colors</string>
					<int name="RightArmColor">141</int>
					<int name="RightLegColor">141</int>
					<int name="TorsoColor">141</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX952EC6E50DF2471EB1369AF103BE2954">
		<Properties>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX704DD68748D44341B0D5A205CC8AF06C">
		<Properties>
			<string name="Name">CSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX7F26C3B2E7D042BCAE523DF2B245F8CF">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">0</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXD0FA6BB0ABB54724A0F314BD6F1B9C18">
		<Properties>
			<string name="Name">ReplicatedFirst</string>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX9024EEFE2EE44C5795FC5E7558C30418">
		<Properties>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<float name="HealthDisplayDistance">100</float>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX41992FF0367C4AFF8B55B67B15EB5CB8">
			<Properties>
				<string name="Name">StarterPlayerScripts</string>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXAB6DDF8B15DF429CAA5B075DD8BCFB40">
		<Properties>
			<string name="Name">StarterPack</string>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX753F6A5E4FDC4BD4A11900A56766DEAF">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<bool name="ShowDevelopmentGui">true</bool>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX03A9E4BD20F74422AE1FE19CEDFDF048">
		<Properties>
			<string name="Name">Teleport Service</string>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX40A590D11F924E2D885600FF744E4F28">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">Soundscape</string>
			<float name="RolloffScale">1</float>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXD913A204323C4D99BCCC89947B77ABB6">
		<Properties>
			<string name="Name">CollectionService</string>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXCEAD125FA4AD47C1BC88196D900B8434">
		<Properties>
			<string name="Name">PhysicsService</string>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX7708E4A77A1C4D1F85FD4E43D495B100">
		<Properties>
			<string name="Name">Geometry</string>
		</Properties>
	</Item>
	<Item class="RenderHooksService" referent="RBX97100CCD1AEA416DB7CE1F6D28C5E7D5">
		<Properties>
			<string name="Name">RenderHooksService</string>
		</Properties>
	</Item>
	<Item class="SocialService" referent="RBX00C14C2775EC42CEBF7A141BCB952882">
		<Properties>
			<string name="Name">SocialService</string>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBXCFA145EB7DD9416B87E0D83A12D70CBF">
		<Properties>
			<string name="Name">GamePassService</string>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX39CC0497ECF145CE8F12E2646F617204">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX6EC7F45A73894A1E97F8012246D6ACA3">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ScriptInformationProvider" referent="RBXE94DFDBFF8CA4B98BA58F46F2F1F9349">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX26F1E8B45AF44EE7888EAB0FD715CD03">
		<Properties>
			<string name="Name">CookiesService</string>
		</Properties>
	</Item>
	<Item class="FWService" referent="RBX71C456B540174316B8FD2AFCD0BF8951">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX14555FECCD23480497577D9C6341A6FA">
		<Properties>
			<string name="Name">ContextActionService</string>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX4653232CA9804613845F9FD0B8AD0616">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX97994FA9CCE944A592B08EFF288A1253">
		<Properties>
			<string name="Name">AssetService</string>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBXF9ABF57182634940ADE52EC3448728D8">
		<Properties>
			<string name="Name">Selection</string>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX2F557FE595E04828A44F454975B751E9">
		<Properties>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX2F505E990F5A4F72BBA1549A8A36635D">
		<Properties>
			<string name="Name">ServerStorage</string>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXB934E391B0624196B9AAEC13587FBBCA">
		<Properties>
			<string name="Name">ReplicatedStorage</string>
		</Properties>
	</Item>
	<Item class="LuaWebService" referent="RBX7BA418409E624F37921505111D8CE406">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXD6A8CA132BC541148B4183599E79D8A6">
		<Properties>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX65F6D7995747436DAD24C36619015EEF">
		<Properties>
			<Color3 name="Ambient">4278190080</Color3>
			<float name="Brightness">1</float>
			<Color3 name="ColorShift_Bottom">4278190080</Color3>
			<Color3 name="ColorShift_Top">4278190080</Color3>
			<Color3 name="FogColor">4290822336</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">4286611584</Color3>
			<bool name="Outlines">true</bool>
			<Color3 name="ShadowColor">4289967032</Color3>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
</roblox></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXDEDC1591F73F44BABEF8CFF2498949A5">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_ZombieAI</string>
						<ProtectedString name="Source"><![CDATA[local hwIDQnC2ngF7rJ={[1]=true,[2]="\65\116\116\97\99\107\82\97\110\103\101",[3]=3,[4]="\70\105\101\108\100\79\102\86\105\101\119",[5]=180,[6]="\65\103\103\114\111\82\97\110\103\101",[7]=200,[8]="\67\104\97\110\99\101\79\102\66\111\114\101\100\111\109",[9]=0.5,[10]="\66\111\114\101\100\111\109\68\117\114\97\116\105\111\110",[11]=10,[12]="\68\97\109\97\103\101",[13]="\68\97\109\97\103\101\67\111\111\108\100\111\119\110",[14]=1,[15]=nil,[16]="\73\100\108\101",[17]="\83\101\97\114\99\104",[18]=2,[19]=5,[20]="\80\117\114\115\117\101",[21]="\65\116\116\97\99\107\82\97\110\103\101",[22]="\65\116\116\97\99\107",[23]="\72\117\110\116",[24]="\66\111\114\101\100\111\109\68\117\114\97\116\105\111\110",[25]="\67\97\110\83\101\101\84\97\114\103\101\116",[26]="\84\111\114\115\111",[27]=0,[28]="\84\111\114\115\111",[29]="\65\103\103\114\111\82\97\110\103\101",[30]="\68\114\111\111\108\105\110\103\32\90\111\109\98\105\101",[31]="\70\105\101\108\100\79\102\86\105\101\119",[32]=false,[33]="\84\97\114\103\101\116\68\101\97\100",[34]="\71\111\116\68\97\109\97\103\101\100",[35]="\71\111\116\66\111\114\101\100",[36]="\66\111\114\101\100\111\109\68\117\114\97\116\105\111\110",[37]="\67\104\97\110\99\101\79\102\66\111\114\101\100\111\109",[38]="\76\111\115\116\84\97\114\103\101\116",[39]="\87\105\116\104\105\110\82\97\110\103\101",[40]="\65\116\116\97\99\107\82\97\110\103\101",[41]="\79\117\116\115\105\100\101\82\97\110\103\101",[42]="\65\116\116\97\99\107\82\97\110\103\101",[43]="\68\114\111\111\108\105\110\103\32\90\111\109\98\105\101",[44]="\72\117\109\97\110\111\105\100",[45]="\68\97\109\97\103\101",[46]="\68\97\109\97\103\101\67\111\111\108\100\111\119\110",[47]="\76\101\102\116\32\65\114\109",[48]="\82\105\103\104\116\32\65\114\109",[49]="\84\111\114\115\111",[50]="\84\111\114\115\111",[51]=2.5,[52]="\88\70\85\53\75\52\55\48\82\32\49\53\32\52\87\51\53\48\77\51\46\32\75\82\51\68\49\55\32\55\48\32\88\70\85\53\75\52\55\48\82\33"}local i0qL=require(game.ServerStorage.ROBLOX_HumanoidList)local iLxxAWLOPa4n=require(game.ServerStorage.ROBLOX_AIUtilities)local I={}function updateDisplay(_mX,Q9FpetFkth4USS)local aC2FrQ5BnRNnDDOD_IqN=coroutine.create(function()while hwIDQnC2ngF7rJ[1]do wait()if Q9FpetFkth4USS then _mX.Text=Q9FpetFkth4USS.Name end end end)coroutine.resume(aC2FrQ5BnRNnDDOD_IqN)end;I.new=function(tkSBGTtqHXVlSpRStq0)local enxQ76_TCGfG__jT4={}local TPM1zkMbb4D=tkSBGTtqHXVlSpRStq0.Configurations;local f0kPQiY1j={}local function VJ(iqnt13y,W3sF0Oij)if TPM1zkMbb4D:FindFirstChild(iqnt13y)then f0kPQiY1j[iqnt13y]=TPM1zkMbb4D:FindFirstChild(iqnt13y).Value else f0kPQiY1j[iqnt13y]=W3sF0Oij end end;VJ(hwIDQnC2ngF7rJ[2],hwIDQnC2ngF7rJ[3])VJ(hwIDQnC2ngF7rJ[4],hwIDQnC2ngF7rJ[5])VJ(hwIDQnC2ngF7rJ[6],hwIDQnC2ngF7rJ[7])VJ(hwIDQnC2ngF7rJ[8],hwIDQnC2ngF7rJ[9])VJ(hwIDQnC2ngF7rJ[10],hwIDQnC2ngF7rJ[11])VJ(hwIDQnC2ngF7rJ[12],hwIDQnC2ngF7rJ[11])VJ(hwIDQnC2ngF7rJ[13],hwIDQnC2ngF7rJ[14])local pYK00BtObX2BxgPh16R1=require(game.ServerStorage.ROBLOX_StateMachine).new()local w1RZs=require(game.ServerStorage.ROBLOX_PathfindingLibrary).new()local pv6MdWsfWROA_rWF=hwIDQnC2ngF7rJ[15]local SB1uL5VmIF3w4pA=hwIDQnC2ngF7rJ[15]local plCuJ0oXOaA=os.time()local uB_Mxd6ElL2aycPM=pYK00BtObX2BxgPh16R1.NewState()uB_Mxd6ElL2aycPM.Name=hwIDQnC2ngF7rJ[16]uB_Mxd6ElL2aycPM.Action=function()end;uB_Mxd6ElL2aycPM.Init=function()plCuJ0oXOaA=os.time()end;local JTn4MZA=pYK00BtObX2BxgPh16R1.NewState()JTn4MZA.Name=hwIDQnC2ngF7rJ[17]local CtopgPLW9avfgnG7d7=os.time()local BY1zM5uLX=hwIDQnC2ngF7rJ[15]JTn4MZA.Action=function()if tkSBGTtqHXVlSpRStq0 then local _raBHHRxr0cBD=os.time()if _raBHHRxr0cBD-CtopgPLW9avfgnG7d7 >hwIDQnC2ngF7rJ[18]then CtopgPLW9avfgnG7d7=_raBHHRxr0cBD;local XjSArTdyqpSgpZA=math.random(hwIDQnC2ngF7rJ[19],hwIDQnC2ngF7rJ[11])if math.random()>hwIDQnC2ngF7rJ[9]then XjSArTdyqpSgpZA=XjSArTdyqpSgpZA*-hwIDQnC2ngF7rJ[14]end;local Ovh0P2H=math.random(hwIDQnC2ngF7rJ[19],hwIDQnC2ngF7rJ[11])if math.random()>hwIDQnC2ngF7rJ[9]then Ovh0P2H=Ovh0P2H*-hwIDQnC2ngF7rJ[14]end;local AzDBYMcbQ68tQ=iLxxAWLOPa4n:FindCloseEmptySpace(tkSBGTtqHXVlSpRStq0)BY1zM5uLX=Vector3.new(tkSBGTtqHXVlSpRStq0.Torso.Position.X+XjSArTdyqpSgpZA,tkSBGTtqHXVlSpRStq0.Torso.Position.Y,tkSBGTtqHXVlSpRStq0.Torso.Position.Z+Ovh0P2H)BY1zM5uLX=AzDBYMcbQ68tQ end;w1RZs:MoveToTarget(tkSBGTtqHXVlSpRStq0,BY1zM5uLX)end end;JTn4MZA.Init=function()plCuJ0oXOaA=os.time()end;local azs7JJkqoj=pYK00BtObX2BxgPh16R1.NewState()azs7JJkqoj.Name=hwIDQnC2ngF7rJ[20]azs7JJkqoj.Action=function()if pv6MdWsfWROA_rWF then local iwSPTxrH4cWucSNQN0zlB=(tkSBGTtqHXVlSpRStq0.Torso.Position-pv6MdWsfWROA_rWF.Torso.Position).magnitude;if iwSPTxrH4cWucSNQN0zlB>f0kPQiY1j[hwIDQnC2ngF7rJ[21]]+hwIDQnC2ngF7rJ[19]then w1RZs:MoveToTarget(tkSBGTtqHXVlSpRStq0,pv6MdWsfWROA_rWF.Torso.Position)else tkSBGTtqHXVlSpRStq0.Humanoid:MoveTo(pv6MdWsfWROA_rWF.Torso.Position)end end end;azs7JJkqoj.Init=function()end;local CBR4SL=pYK00BtObX2BxgPh16R1.NewState()CBR4SL.Name=hwIDQnC2ngF7rJ[22]local aGKJXI0zEuWBCtYEqV=os.time()local H=tkSBGTtqHXVlSpRStq0.Humanoid:LoadAnimation(tkSBGTtqHXVlSpRStq0.Animations.Attack)CBR4SL.Action=function()tkSBGTtqHXVlSpRStq0.Humanoid:MoveTo(pv6MdWsfWROA_rWF.Torso.Position)local dIk0RorRAeyVkpYTm0m1u=os.time()if dIk0RorRAeyVkpYTm0m1u-aGKJXI0zEuWBCtYEqV>hwIDQnC2ngF7rJ[3]then aGKJXI0zEuWBCtYEqV=dIk0RorRAeyVkpYTm0m1u;H:Play()end end;local fhSUQG0Su_EcULTGKn=pYK00BtObX2BxgPh16R1.NewState()fhSUQG0Su_EcULTGKn.Name=hwIDQnC2ngF7rJ[23]fhSUQG0Su_EcULTGKn.Action=function()if SB1uL5VmIF3w4pA then w1RZs:MoveToTarget(tkSBGTtqHXVlSpRStq0,SB1uL5VmIF3w4pA)end end;fhSUQG0Su_EcULTGKn.Init=function()plCuJ0oXOaA=os.time()+f0kPQiY1j[hwIDQnC2ngF7rJ[24]]/hwIDQnC2ngF7rJ[18]end;local G_gPZxSxYtc2XNEwN=pYK00BtObX2BxgPh16R1.NewCondition()G_gPZxSxYtc2XNEwN.Name=hwIDQnC2ngF7rJ[25]G_gPZxSxYtc2XNEwN.Evaluate=function()if tkSBGTtqHXVlSpRStq0 then local t=i0qL:GetCurrent()local vM5Z0KI9Na8wJ={}local Bq30btp3oN2={}for eD1fr8h1dkL6Wn,LnONBW6c3L0JHHob5chp in pairs(t)do if LnONBW6c3L0JHHob5chp and LnONBW6c3L0JHHob5chp.Parent and LnONBW6c3L0JHHob5chp.Parent:FindFirstChild(hwIDQnC2ngF7rJ[26])and LnONBW6c3L0JHHob5chp.Health>hwIDQnC2ngF7rJ[27]and LnONBW6c3L0JHHob5chp.WalkSpeed>hwIDQnC2ngF7rJ[27]then local SSTJvVDnApa8a=LnONBW6c3L0JHHob5chp.Parent:FindFirstChild(hwIDQnC2ngF7rJ[28])if SSTJvVDnApa8a then local TzWYkZT=(tkSBGTtqHXVlSpRStq0.Torso.Position-SSTJvVDnApa8a.Position).magnitude;if TzWYkZT<=f0kPQiY1j[hwIDQnC2ngF7rJ[29]]then if LnONBW6c3L0JHHob5chp.Parent.Name==hwIDQnC2ngF7rJ[30]then table.insert(vM5Z0KI9Na8wJ,LnONBW6c3L0JHHob5chp.Parent)else table.insert(Bq30btp3oN2,LnONBW6c3L0JHHob5chp.Parent)end end end end end;local ZB7JL=iLxxAWLOPa4n:GetClosestVisibleTarget(tkSBGTtqHXVlSpRStq0,Bq30btp3oN2,vM5Z0KI9Na8wJ,f0kPQiY1j[hwIDQnC2ngF7rJ[31]])if ZB7JL then pv6MdWsfWROA_rWF=ZB7JL;return hwIDQnC2ngF7rJ[1]end end;return hwIDQnC2ngF7rJ[32]end;G_gPZxSxYtc2XNEwN.TransitionState=azs7JJkqoj;local GlbJjoB4jj=pYK00BtObX2BxgPh16R1.NewCondition()GlbJjoB4jj.Name=hwIDQnC2ngF7rJ[33]GlbJjoB4jj.Evaluate=function()if pv6MdWsfWROA_rWF and pv6MdWsfWROA_rWF.Humanoid then return pv6MdWsfWROA_rWF.Humanoid.Health<=hwIDQnC2ngF7rJ[27]end;return hwIDQnC2ngF7rJ[1]end;GlbJjoB4jj.TransitionState=uB_Mxd6ElL2aycPM;local P39JiOpJX=tkSBGTtqHXVlSpRStq0.Humanoid.Health;local JnRFOwJp=pYK00BtObX2BxgPh16R1.NewCondition()JnRFOwJp.Name=hwIDQnC2ngF7rJ[34]JnRFOwJp.Evaluate=function()if tkSBGTtqHXVlSpRStq0 then if P39JiOpJX>tkSBGTtqHXVlSpRStq0.Humanoid.Health then return hwIDQnC2ngF7rJ[1]end end;return hwIDQnC2ngF7rJ[32]end;JnRFOwJp.TransitionState=JTn4MZA;local sQMXJQ2g5tHY=pYK00BtObX2BxgPh16R1.NewCondition()sQMXJQ2g5tHY.Name=hwIDQnC2ngF7rJ[35]sQMXJQ2g5tHY.Evaluate=function()local zXqCHA9nBp0w=os.time()if zXqCHA9nBp0w-plCuJ0oXOaA>f0kPQiY1j[hwIDQnC2ngF7rJ[36]]then local anEl8kK6LBHQNXjaM=math.random()if anEl8kK6LBHQNXjaM<f0kPQiY1j[hwIDQnC2ngF7rJ[37]]then plCuJ0oXOaA=zXqCHA9nBp0w;if sQMXJQ2g5tHY.TransitionState==JTn4MZA then sQMXJQ2g5tHY.TransitionState=uB_Mxd6ElL2aycPM else sQMXJQ2g5tHY.TransitionState=JTn4MZA end;return hwIDQnC2ngF7rJ[1]end end;return hwIDQnC2ngF7rJ[32]end;sQMXJQ2g5tHY.TransitionState=uB_Mxd6ElL2aycPM;local cTP=pYK00BtObX2BxgPh16R1.NewCondition()cTP.Name=hwIDQnC2ngF7rJ[38]cTP.Evaluate=function()if hwIDQnC2ngF7rJ[1]then return hwIDQnC2ngF7rJ[32]end;if pv6MdWsfWROA_rWF then if(pv6MdWsfWROA_rWF.Torso.Position-tkSBGTtqHXVlSpRStq0.Torso.Position).magnitude>hwIDQnC2ngF7rJ[11]then local Nx3j9E=Ray.new(tkSBGTtqHXVlSpRStq0.Torso.Position,(pv6MdWsfWROA_rWF.Torso.Position-tkSBGTtqHXVlSpRStq0.Torso.Position))local yqPb10pfWOhjMo5bb,vIu3=game.Workspace:FindPartOnRay(Nx3j9E,tkSBGTtqHXVlSpRStq0)if not yqPb10pfWOhjMo5bb or yqPb10pfWOhjMo5bb.Parent~=pv6MdWsfWROA_rWF then SB1uL5VmIF3w4pA=pv6MdWsfWROA_rWF.Torso.Position;pv6MdWsfWROA_rWF=hwIDQnC2ngF7rJ[15]return hwIDQnC2ngF7rJ[1]end end end;return hwIDQnC2ngF7rJ[32]end;cTP.TransitionState=fhSUQG0Su_EcULTGKn;local pz6iW=pYK00BtObX2BxgPh16R1.NewCondition()pz6iW.Name=hwIDQnC2ngF7rJ[39]pz6iW.Evaluate=function()if pv6MdWsfWROA_rWF then local ePK2cH5CEXymSyB1uyrO5=(tkSBGTtqHXVlSpRStq0.Torso.Position-pv6MdWsfWROA_rWF.Torso.Position).magnitude;if ePK2cH5CEXymSyB1uyrO5 <f0kPQiY1j[hwIDQnC2ngF7rJ[40]]then return hwIDQnC2ngF7rJ[1]end end;return hwIDQnC2ngF7rJ[32]end;pz6iW.TransitionState=CBR4SL;local HYyrivE=pYK00BtObX2BxgPh16R1.NewCondition()HYyrivE.Name=hwIDQnC2ngF7rJ[41]HYyrivE.Evaluate=function()if pv6MdWsfWROA_rWF then local Qs=(tkSBGTtqHXVlSpRStq0.Torso.Position-pv6MdWsfWROA_rWF.Torso.Position).magnitude;if Qs>f0kPQiY1j[hwIDQnC2ngF7rJ[42]]then return hwIDQnC2ngF7rJ[1]end end;return hwIDQnC2ngF7rJ[32]end;HYyrivE.TransitionState=azs7JJkqoj;table.insert(uB_Mxd6ElL2aycPM.Conditions,G_gPZxSxYtc2XNEwN)table.insert(uB_Mxd6ElL2aycPM.Conditions,JnRFOwJp)table.insert(uB_Mxd6ElL2aycPM.Conditions,sQMXJQ2g5tHY)table.insert(JTn4MZA.Conditions,sQMXJQ2g5tHY)table.insert(JTn4MZA.Conditions,G_gPZxSxYtc2XNEwN)table.insert(azs7JJkqoj.Conditions,cTP)table.insert(azs7JJkqoj.Conditions,pz6iW)table.insert(azs7JJkqoj.Conditions,GlbJjoB4jj)table.insert(CBR4SL.Conditions,HYyrivE)table.insert(CBR4SL.Conditions,GlbJjoB4jj)table.insert(fhSUQG0Su_EcULTGKn.Conditions,sQMXJQ2g5tHY)table.insert(fhSUQG0Su_EcULTGKn.Conditions,G_gPZxSxYtc2XNEwN)local LEcjZvr=hwIDQnC2ngF7rJ[1]local n7Dv1C1QQRz7lcG=os.time()local function vzBByMzbetMcJ3a6m5(d26txer4xCg9H0Wly_v0F)if LEcjZvr then if d26txer4xCg9H0Wly_v0F and d26txer4xCg9H0Wly_v0F.Parent and d26txer4xCg9H0Wly_v0F.Parent.Name~=hwIDQnC2ngF7rJ[43]and d26txer4xCg9H0Wly_v0F.Parent:FindFirstChild(hwIDQnC2ngF7rJ[44])then local uzTggTsX3fD=d26txer4xCg9H0Wly_v0F.Parent;if uzTggTsX3fD.Humanoid.WalkSpeed>hwIDQnC2ngF7rJ[27]then uzTggTsX3fD.Humanoid.Health=uzTggTsX3fD.Humanoid.Health-f0kPQiY1j[hwIDQnC2ngF7rJ[45]]LEcjZvr=hwIDQnC2ngF7rJ[32]end end else local d7Jh=os.time()if d7Jh-n7Dv1C1QQRz7lcG>f0kPQiY1j[hwIDQnC2ngF7rJ[46]]then n7Dv1C1QQRz7lcG=d7Jh;LEcjZvr=hwIDQnC2ngF7rJ[1]end end end;local lJodJkMFSAwYQAr,X2IeZj1T2zvbod;lJodJkMFSAwYQAr=tkSBGTtqHXVlSpRStq0:FindFirstChild(hwIDQnC2ngF7rJ[47]).Touched:connect(vzBByMzbetMcJ3a6m5)X2IeZj1T2zvbod=tkSBGTtqHXVlSpRStq0:FindFirstChild(hwIDQnC2ngF7rJ[48]).Touched:connect(vzBByMzbetMcJ3a6m5)local M6W4D=coroutine.create(function()while hwIDQnC2ngF7rJ[1]do wait()local a8t9Ft0n9_p9RAtvGOqZm=i0qL:GetCurrent()local ht70h={}for DsGGfTbgI8,UDHZyTRspQsS47whDf_ in pairs(a8t9Ft0n9_p9RAtvGOqZm)do if UDHZyTRspQsS47whDf_ and UDHZyTRspQsS47whDf_~=tkSBGTtqHXVlSpRStq0.Humanoid and UDHZyTRspQsS47whDf_.Parent and UDHZyTRspQsS47whDf_.Parent:FindFirstChild(hwIDQnC2ngF7rJ[49])then local Vu=UDHZyTRspQsS47whDf_.Parent:FindFirstChild(hwIDQnC2ngF7rJ[50])local oSzUm_R=(tkSBGTtqHXVlSpRStq0.Torso.Position-Vu.Position).magnitude;if oSzUm_R<=hwIDQnC2ngF7rJ[51]then table.insert(ht70h,Vu.Position)end end end;local cHzHFF=iLxxAWLOPa4n:GetRepulsionVector(tkSBGTtqHXVlSpRStq0.Torso.Position,ht70h)if cHzHFF.magnitude>hwIDQnC2ngF7rJ[27]then end;tkSBGTtqHXVlSpRStq0.Torso.RepulsionForce.force=cHzHFF;if pYK00BtObX2BxgPh16R1.CurrentState and tkSBGTtqHXVlSpRStq0.Configurations.Debug.Value then tkSBGTtqHXVlSpRStq0.BillboardGui.TextLabel.Visible=hwIDQnC2ngF7rJ[1]tkSBGTtqHXVlSpRStq0.BillboardGui.TextLabel.Text=pYK00BtObX2BxgPh16R1.CurrentState.Name end;if not tkSBGTtqHXVlSpRStq0.Configurations.Debug.Value then tkSBGTtqHXVlSpRStq0.BillboardGui.TextLabel.Visible=hwIDQnC2ngF7rJ[32]end end end)coroutine.resume(M6W4D)pYK00BtObX2BxgPh16R1.SwitchState(uB_Mxd6ElL2aycPM)enxQ76_TCGfG__jT4.Stop=function()pYK00BtObX2BxgPh16R1.SwitchState(hwIDQnC2ngF7rJ[15])end;return enxQ76_TCGfG__jT4 end;return ZombieAI]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX88983EE97A6E4E29B0BE58B499363B9A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_PathfindingLibrary</string>
						<ProtectedString name="Source"><![CDATA[local PathfindingUtility = {}
local TargetOffsetMax = 10--5
local JumpThreshold = 1.5 --2.5
local NextPointThreshold = 4
local PathfindingService = game:GetService("PathfindingService")
PathfindingService.EmptyCutoff = .3

function PathfindingUtility.new()
	local this = {}
	
	local currentTargetPos = nil	
	local lastTargetPos = Vector3.new(math.huge, math.huge, math.huge)	
	local path = nil
	local currentPointIndex = 1	
	
	function this:MoveToTarget(character, target)
		local targetOffset = (lastTargetPos - target).magnitude
--
--		local targetOffsetVector = (lastTargetPos - target)
--		if targetOffsetVector.magnitude < math.huge then
--			targetOffsetVector = (lastTargetPos - target) * Vector3.new(1,0,1)	
--		end
		if targetOffset > TargetOffsetMax then
		--if targetOffsetVector.magnitude > TargetOffsetMax then
			--print("moveto")
			local startPoint = character.Torso.Position
			local humanoidState = character.Humanoid:GetState()
			if humanoidState == Enum.HumanoidStateType.Jumping or humanoidState == Enum.HumanoidStateType.Freefall then
				--print("this")				
				local ray = Ray.new(character.Torso.Position, Vector3.new(0, -100, 0))
				local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
				if hitPart then
					startPoint = hitPoint
				end
			end
			--print("making new path")
			local newTarget = target
			local ray = Ray.new(target + Vector3.new(0,-3,0), Vector3.new(0, -100, 0))			
			local hitPart, hitPoint = game.Workspace:FindPartOnRay(ray, character)
			if hitPoint then
				if (hitPoint - target).magnitude > 4 then
					newTarget = newTarget * Vector3.new(1,0,1) + Vector3.new(0,3,0)
				end
			end	
			
			--local newTarget = Vector3.new(1,0,1) * target + Vector3.new(0, 2, 0)
			path = PathfindingService:ComputeSmoothPathAsync(startPoint, newTarget, 500)
			if path.Status ~= Enum.PathStatus.Success then
				--print(tostring(path.Status))
			end
			--path = PathfindingService:ComputeRawPathAsync(startPoint, target, 500)			
			
--			game.Workspace.Points:ClearAllChildren()
--			local ps = path:GetPointCoordinates()
--			for _, point in pairs(ps) do
--				local part = Instance.new("Part", game.Workspace.Points)
--				part.CanCollide = false
--				part.Anchored = true
--				part.FormFactor = Enum.FormFactor.Custom
--				part.Size = Vector3.new(1,1,1)
--				part.Position = point
--			end			
			
			currentPointIndex = 1
			lastTargetPos = target
		end
		
		if path then
			local points = path:GetPointCoordinates()
			if currentPointIndex < #points then
				local currentPoint = points[currentPointIndex]
				local distance = (character.Torso.Position - currentPoint).magnitude
				if distance < NextPointThreshold then
					currentPointIndex = currentPointIndex + 1
				end
				
				character.Humanoid:MoveTo(points[currentPointIndex])
				if points[currentPointIndex].Y - character.Torso.Position.Y > JumpThreshold then
					character.Humanoid.Jump = true
				end
			else
				character.Humanoid:MoveTo(target)
			end
		end
	end
	
	return this
end
return PathfindingUtility ]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX9D8CFEAC1F494445976D12493F23BF8E">
				<Properties>
					<string name="Name">Configurations</string>
				</Properties>
				<Item class="IntValue" referent="RBX9F0CC382DF2F4066A6BBA01B113BF97F">
					<Properties>
						<string name="Name">Damage</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="BoolValue" referent="RBXED708F870A1A4B7391E16EF9DA870832">
					<Properties>
						<string name="Name">Debug</string>
						<bool name="Value">false</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX7B4C53AC148A4F4792552D9941299832">
					<Properties>
						<string name="Name">FieldOfView</string>
						<int name="Value">180</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX8489E224106F40D4866D68E530282D6E">
					<Properties>
						<string name="Name">AggroRange</string>
						<int name="Value">200</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX3F714923418642F094F40C43C8872341">
				<Properties>
					<string name="Name">Animations</string>
				</Properties>
				<Item class="Animation" referent="RBX3370BA6D129849E2B2E45E319C0FC9D8">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180416148</url></Content>
						<string name="Name">Attack</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX9660064A043C4F2F9D0BC9BF205DFCD9">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183294396</url></Content>
						<string name="Name">Arms</string>
					</Properties>
				</Item>
			</Item>
			<Item class="CharacterMesh" referent="RBXFC7F4998F6ED43E8BED0900D3088E5DA">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">2</token>
					<int name="MeshId">37683097</int>
					<string name="Name">Zombie Left Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX18C272BBEEDD4374B274809CC3A4C2AE">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">4</token>
					<int name="MeshId">37683150</int>
					<string name="Name">Zombie Left Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX9CE0EABAB7374A0FB1B2003BE87314B3">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">3</token>
					<int name="MeshId">37683174</int>
					<string name="Name">Zombie Right Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6E1BD19FC89F4704ABEB4A2D307742A6">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">5</token>
					<int name="MeshId">37683227</int>
					<string name="Name">Zombie Right Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6F08886D7CF14EA9A32A3060681903DC">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">1</token>
					<int name="MeshId">37683263</int>
					<string name="Name">Zombie torso</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB14237E244A046248710CB45D981987D">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Moan</string>
					<float name="Pitch">0.150000006</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222242</url></Content>
					<float name="Volume">0.0500000007</float>
				</Properties>
			</Item>
			<Item class="BodyColors" referent="RBXFA0AB190AAFF42F7842CEC1FF5299504">
				<Properties>
					<int name="HeadColor">1021</int>
					<int name="LeftArmColor">141</int>
					<int name="LeftLegColor">141</int>
					<string name="Name">Body Colors</string>
					<int name="RightArmColor">141</int>
					<int name="RightLegColor">141</int>
					<int name="TorsoColor">141</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX952EC6E50DF2471EB1369AF103BE2954">
		<Properties>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX704DD68748D44341B0D5A205CC8AF06C">
		<Properties>
			<string name="Name">CSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX7F26C3B2E7D042BCAE523DF2B245F8CF">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">0</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXD0FA6BB0ABB54724A0F314BD6F1B9C18">
		<Properties>
			<string name="Name">ReplicatedFirst</string>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX9024EEFE2EE44C5795FC5E7558C30418">
		<Properties>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<float name="HealthDisplayDistance">100</float>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX41992FF0367C4AFF8B55B67B15EB5CB8">
			<Properties>
				<string name="Name">StarterPlayerScripts</string>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXAB6DDF8B15DF429CAA5B075DD8BCFB40">
		<Properties>
			<string name="Name">StarterPack</string>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX753F6A5E4FDC4BD4A11900A56766DEAF">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<bool name="ShowDevelopmentGui">true</bool>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX03A9E4BD20F74422AE1FE19CEDFDF048">
		<Properties>
			<string name="Name">Teleport Service</string>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX40A590D11F924E2D885600FF744E4F28">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">Soundscape</string>
			<float name="RolloffScale">1</float>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXD913A204323C4D99BCCC89947B77ABB6">
		<Properties>
			<string name="Name">CollectionService</string>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXCEAD125FA4AD47C1BC88196D900B8434">
		<Properties>
			<string name="Name">PhysicsService</string>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX7708E4A77A1C4D1F85FD4E43D495B100">
		<Properties>
			<string name="Name">Geometry</string>
		</Properties>
	</Item>
	<Item class="RenderHooksService" referent="RBX97100CCD1AEA416DB7CE1F6D28C5E7D5">
		<Properties>
			<string name="Name">RenderHooksService</string>
		</Properties>
	</Item>
	<Item class="SocialService" referent="RBX00C14C2775EC42CEBF7A141BCB952882">
		<Properties>
			<string name="Name">SocialService</string>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBXCFA145EB7DD9416B87E0D83A12D70CBF">
		<Properties>
			<string name="Name">GamePassService</string>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX39CC0497ECF145CE8F12E2646F617204">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX6EC7F45A73894A1E97F8012246D6ACA3">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ScriptInformationProvider" referent="RBXE94DFDBFF8CA4B98BA58F46F2F1F9349">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX26F1E8B45AF44EE7888EAB0FD715CD03">
		<Properties>
			<string name="Name">CookiesService</string>
		</Properties>
	</Item>
	<Item class="FWService" referent="RBX71C456B540174316B8FD2AFCD0BF8951">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX14555FECCD23480497577D9C6341A6FA">
		<Properties>
			<string name="Name">ContextActionService</string>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX4653232CA9804613845F9FD0B8AD0616">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX97994FA9CCE944A592B08EFF288A1253">
		<Properties>
			<string name="Name">AssetService</string>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBXF9ABF57182634940ADE52EC3448728D8">
		<Properties>
			<string name="Name">Selection</string>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX2F557FE595E04828A44F454975B751E9">
		<Properties>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX2F505E990F5A4F72BBA1549A8A36635D">
		<Properties>
			<string name="Name">ServerStorage</string>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXB934E391B0624196B9AAEC13587FBBCA">
		<Properties>
			<string name="Name">ReplicatedStorage</string>
		</Properties>
	</Item>
	<Item class="LuaWebService" referent="RBX7BA418409E624F37921505111D8CE406">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXD6A8CA132BC541148B4183599E79D8A6">
		<Properties>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX65F6D7995747436DAD24C36619015EEF">
		<Properties>
			<Color3 name="Ambient">4278190080</Color3>
			<float name="Brightness">1</float>
			<Color3 name="ColorShift_Bottom">4278190080</Color3>
			<Color3 name="ColorShift_Top">4278190080</Color3>
			<Color3 name="FogColor">4290822336</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">4286611584</Color3>
			<bool name="Outlines">true</bool>
			<Color3 name="ShadowColor">4289967032</Color3>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
</roblox></ProtectedString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX88983EE97A6E4E29B0BE58B499363B9A">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ROBLOX_PathfindingLibrary</string>
						<ProtectedString name="Source"><![CDATA[local gipQC={[1]=10,[2]=1.5,[3]=4,[4]="\80\97\116\104\102\105\110\100\105\110\103\83\101\114\118\105\99\101",[5]=0.3,[6]=nil,[7]=1,[8]=0,[9]=100,[10]=3,[11]=500,[12]=true,[13]="\88\70\85\53\75\52\55\48\82\32\49\53\32\52\87\51\53\48\77\51\46\32\75\82\51\68\49\55\32\55\48\32\88\70\85\53\75\52\55\48\82\33"}local KWTH9Wm7kDXqdsy={}local kSx2CsUSw=gipQC[1]local LQCRXEYMLRqIQQZC=gipQC[2]local VE6aqIwKeINhpzVpTM4It=gipQC[3]local Hozuox_4S=game:GetService(gipQC[4])Hozuox_4S.EmptyCutoff=gipQC[5]function KWTH9Wm7kDXqdsy.new()local sUuCF7jdRQZhzfSnTY5o={}local XUU1f1d=gipQC[6]local e=Vector3.new(math.huge,math.huge,math.huge)local qOQnV8qWWq=gipQC[6]local KP0m7R41jKSaNW=gipQC[7]function sUuCF7jdRQZhzfSnTY5o:MoveToTarget(Zs4JSV,CAcPl)local f0In=(e-CAcPl).magnitude;if f0In>kSx2CsUSw then local IhY=Zs4JSV.Torso.Position;local P7bmItFO1e_c=Zs4JSV.Humanoid:GetState()if P7bmItFO1e_c==Enum.HumanoidStateType.Jumping or P7bmItFO1e_c==Enum.HumanoidStateType.Freefall then local kSBHEPlERiIOWP0C=Ray.new(Zs4JSV.Torso.Position,Vector3.new(gipQC[8],-gipQC[9],gipQC[8]))local J2ki_xti,xCH3E9TMFIpn=game.Workspace:FindPartOnRay(kSBHEPlERiIOWP0C,Zs4JSV)if J2ki_xti then IhY=xCH3E9TMFIpn end end;local j=CAcPl;local UFK=Ray.new(CAcPl+Vector3.new(gipQC[8],-gipQC[10],gipQC[8]),Vector3.new(gipQC[8],-gipQC[9],gipQC[8]))local x1di1bX0,cYTyW1ZPCuLD9O7sPRmVC=game.Workspace:FindPartOnRay(UFK,Zs4JSV)if cYTyW1ZPCuLD9O7sPRmVC then if(cYTyW1ZPCuLD9O7sPRmVC-CAcPl).magnitude>gipQC[3]then j=j*Vector3.new(gipQC[7],gipQC[8],gipQC[7])+Vector3.new(gipQC[8],gipQC[10],gipQC[8])end end;qOQnV8qWWq=Hozuox_4S:ComputeSmoothPathAsync(IhY,j,gipQC[11])if qOQnV8qWWq.Status~=Enum.PathStatus.Success then end;KP0m7R41jKSaNW=gipQC[7]e=CAcPl end;if qOQnV8qWWq then local OCKcBwcaxYlChM=qOQnV8qWWq:GetPointCoordinates()if KP0m7R41jKSaNW<#OCKcBwcaxYlChM then local T78=OCKcBwcaxYlChM[KP0m7R41jKSaNW]local pFoXSh=(Zs4JSV.Torso.Position-T78).magnitude;if pFoXSh<VE6aqIwKeINhpzVpTM4It then KP0m7R41jKSaNW=KP0m7R41jKSaNW+gipQC[7]end;Zs4JSV.Humanoid:MoveTo(OCKcBwcaxYlChM[KP0m7R41jKSaNW])if OCKcBwcaxYlChM[KP0m7R41jKSaNW].Y-Zs4JSV.Torso.Position.Y>LQCRXEYMLRqIQQZC then Zs4JSV.Humanoid.Jump=gipQC[12]end else Zs4JSV.Humanoid:MoveTo(CAcPl)end end end;return sUuCF7jdRQZhzfSnTY5o end;return KWTH9Wm7kDXqdsy ]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX9D8CFEAC1F494445976D12493F23BF8E">
				<Properties>
					<string name="Name">Configurations</string>
				</Properties>
				<Item class="IntValue" referent="RBX9F0CC382DF2F4066A6BBA01B113BF97F">
					<Properties>
						<string name="Name">Damage</string>
						<int name="Value">30</int>
					</Properties>
				</Item>
				<Item class="BoolValue" referent="RBXED708F870A1A4B7391E16EF9DA870832">
					<Properties>
						<string name="Name">Debug</string>
						<bool name="Value">false</bool>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX7B4C53AC148A4F4792552D9941299832">
					<Properties>
						<string name="Name">FieldOfView</string>
						<int name="Value">180</int>
					</Properties>
				</Item>
				<Item class="IntValue" referent="RBX8489E224106F40D4866D68E530282D6E">
					<Properties>
						<string name="Name">AggroRange</string>
						<int name="Value">200</int>
					</Properties>
				</Item>
			</Item>
			<Item class="Configuration" referent="RBX3F714923418642F094F40C43C8872341">
				<Properties>
					<string name="Name">Animations</string>
				</Properties>
				<Item class="Animation" referent="RBX3370BA6D129849E2B2E45E319C0FC9D8">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=180416148</url></Content>
						<string name="Name">Attack</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX9660064A043C4F2F9D0BC9BF205DFCD9">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=183294396</url></Content>
						<string name="Name">Arms</string>
					</Properties>
				</Item>
			</Item>
			<Item class="CharacterMesh" referent="RBXFC7F4998F6ED43E8BED0900D3088E5DA">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">2</token>
					<int name="MeshId">37683097</int>
					<string name="Name">Zombie Left Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX18C272BBEEDD4374B274809CC3A4C2AE">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">4</token>
					<int name="MeshId">37683150</int>
					<string name="Name">Zombie Left Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX9CE0EABAB7374A0FB1B2003BE87314B3">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">3</token>
					<int name="MeshId">37683174</int>
					<string name="Name">Zombie Right Arm</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6E1BD19FC89F4704ABEB4A2D307742A6">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">5</token>
					<int name="MeshId">37683227</int>
					<string name="Name">Zombie Right Leg</string>
					<int name="OverlayTextureId">37687646</int>
				</Properties>
			</Item>
			<Item class="CharacterMesh" referent="RBX6F08886D7CF14EA9A32A3060681903DC">
				<Properties>
					<int name="BaseTextureId">0</int>
					<token name="BodyPart">1</token>
					<int name="MeshId">37683263</int>
					<string name="Name">Zombie torso</string>
					<int name="OverlayTextureId">37686282</int>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB14237E244A046248710CB45D981987D">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Moan</string>
					<float name="Pitch">0.150000006</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222242</url></Content>
					<float name="Volume">0.0500000007</float>
				</Properties>
			</Item>
			<Item class="BodyColors" referent="RBXFA0AB190AAFF42F7842CEC1FF5299504">
				<Properties>
					<int name="HeadColor">1021</int>
					<int name="LeftArmColor">141</int>
					<int name="LeftLegColor">141</int>
					<string name="Name">Body Colors</string>
					<int name="RightArmColor">141</int>
					<int name="RightLegColor">141</int>
					<int name="TorsoColor">141</int>
				</Properties>
			</Item>
		</Item>
	</Item>
	<Item class="NonReplicatedCSGDictionaryService" referent="RBX952EC6E50DF2471EB1369AF103BE2954">
		<Properties>
			<string name="Name">NonReplicatedCSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="CSGDictionaryService" referent="RBX704DD68748D44341B0D5A205CC8AF06C">
		<Properties>
			<string name="Name">CSGDictionaryService</string>
		</Properties>
	</Item>
	<Item class="Players" referent="RBX7F26C3B2E7D042BCAE523DF2B245F8CF">
		<Properties>
			<bool name="CharacterAutoLoads">true</bool>
			<int name="MaxPlayersInternal">0</int>
			<string name="Name">Players</string>
			<int name="PreferredPlayersInternal">0</int>
		</Properties>
	</Item>
	<Item class="ReplicatedFirst" referent="RBXD0FA6BB0ABB54724A0F314BD6F1B9C18">
		<Properties>
			<string name="Name">ReplicatedFirst</string>
		</Properties>
	</Item>
	<Item class="StarterPlayer" referent="RBX9024EEFE2EE44C5795FC5E7558C30418">
		<Properties>
			<bool name="AutoJumpEnabled">true</bool>
			<float name="CameraMaxZoomDistance">400</float>
			<float name="CameraMinZoomDistance">0.5</float>
			<token name="CameraMode">0</token>
			<token name="DevCameraOcclusionMode">0</token>
			<token name="DevComputerCameraMovementMode">0</token>
			<token name="DevComputerMovementMode">0</token>
			<token name="DevTouchCameraMovementMode">0</token>
			<token name="DevTouchMovementMode">0</token>
			<bool name="EnableMouseLockOption">true</bool>
			<float name="HealthDisplayDistance">100</float>
			<string name="Name">StarterPlayer</string>
			<float name="NameDisplayDistance">100</float>
		</Properties>
		<Item class="StarterPlayerScripts" referent="RBX41992FF0367C4AFF8B55B67B15EB5CB8">
			<Properties>
				<string name="Name">StarterPlayerScripts</string>
			</Properties>
		</Item>
	</Item>
	<Item class="StarterPack" referent="RBXAB6DDF8B15DF429CAA5B075DD8BCFB40">
		<Properties>
			<string name="Name">StarterPack</string>
		</Properties>
	</Item>
	<Item class="StarterGui" referent="RBX753F6A5E4FDC4BD4A11900A56766DEAF">
		<Properties>
			<string name="Name">StarterGui</string>
			<bool name="ResetPlayerGuiOnSpawn">true</bool>
			<bool name="ShowDevelopmentGui">true</bool>
		</Properties>
	</Item>
	<Item class="TeleportService" referent="RBX03A9E4BD20F74422AE1FE19CEDFDF048">
		<Properties>
			<string name="Name">Teleport Service</string>
		</Properties>
	</Item>
	<Item class="SoundService" referent="RBX40A590D11F924E2D885600FF744E4F28">
		<Properties>
			<token name="AmbientReverb">0</token>
			<float name="DistanceFactor">10</float>
			<float name="DopplerScale">1</float>
			<string name="Name">Soundscape</string>
			<float name="RolloffScale">1</float>
		</Properties>
	</Item>
	<Item class="CollectionService" referent="RBXD913A204323C4D99BCCC89947B77ABB6">
		<Properties>
			<string name="Name">CollectionService</string>
		</Properties>
	</Item>
	<Item class="PhysicsService" referent="RBXCEAD125FA4AD47C1BC88196D900B8434">
		<Properties>
			<string name="Name">PhysicsService</string>
		</Properties>
	</Item>
	<Item class="Geometry" referent="RBX7708E4A77A1C4D1F85FD4E43D495B100">
		<Properties>
			<string name="Name">Geometry</string>
		</Properties>
	</Item>
	<Item class="RenderHooksService" referent="RBX97100CCD1AEA416DB7CE1F6D28C5E7D5">
		<Properties>
			<string name="Name">RenderHooksService</string>
		</Properties>
	</Item>
	<Item class="SocialService" referent="RBX00C14C2775EC42CEBF7A141BCB952882">
		<Properties>
			<string name="Name">SocialService</string>
		</Properties>
	</Item>
	<Item class="GamePassService" referent="RBXCFA145EB7DD9416B87E0D83A12D70CBF">
		<Properties>
			<string name="Name">GamePassService</string>
		</Properties>
	</Item>
	<Item class="Debris" referent="RBX39CC0497ECF145CE8F12E2646F617204">
		<Properties>
			<int name="MaxItems">1000</int>
			<string name="Name">Debris</string>
		</Properties>
	</Item>
	<Item class="TimerService" referent="RBX6EC7F45A73894A1E97F8012246D6ACA3">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ScriptInformationProvider" referent="RBXE94DFDBFF8CA4B98BA58F46F2F1F9349">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="CookiesService" referent="RBX26F1E8B45AF44EE7888EAB0FD715CD03">
		<Properties>
			<string name="Name">CookiesService</string>
		</Properties>
	</Item>
	<Item class="FWService" referent="RBX71C456B540174316B8FD2AFCD0BF8951">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="ContextActionService" referent="RBX14555FECCD23480497577D9C6341A6FA">
		<Properties>
			<string name="Name">ContextActionService</string>
		</Properties>
	</Item>
	<Item class="ScriptService" referent="RBX4653232CA9804613845F9FD0B8AD0616">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="AssetService" referent="RBX97994FA9CCE944A592B08EFF288A1253">
		<Properties>
			<string name="Name">AssetService</string>
		</Properties>
	</Item>
	<Item class="Selection" referent="RBXF9ABF57182634940ADE52EC3448728D8">
		<Properties>
			<string name="Name">Selection</string>
		</Properties>
	</Item>
	<Item class="ServerScriptService" referent="RBX2F557FE595E04828A44F454975B751E9">
		<Properties>
			<bool name="LoadStringEnabled">false</bool>
			<string name="Name">ServerScriptService</string>
		</Properties>
	</Item>
	<Item class="ServerStorage" referent="RBX2F505E990F5A4F72BBA1549A8A36635D">
		<Properties>
			<string name="Name">ServerStorage</string>
		</Properties>
	</Item>
	<Item class="ReplicatedStorage" referent="RBXB934E391B0624196B9AAEC13587FBBCA">
		<Properties>
			<string name="Name">ReplicatedStorage</string>
		</Properties>
	</Item>
	<Item class="LuaWebService" referent="RBX7BA418409E624F37921505111D8CE406">
		<Properties>
			<string name="Name">Instance</string>
		</Properties>
	</Item>
	<Item class="HttpService" referent="RBXD6A8CA132BC541148B4183599E79D8A6">
		<Properties>
			<bool name="HttpEnabled">false</bool>
			<string name="Name">HttpService</string>
		</Properties>
	</Item>
	<Item class="Lighting" referent="RBX65F6D7995747436DAD24C36619015EEF">
		<Properties>
			<Color3 name="Ambient">4278190080</Color3>
			<float name="Brightness">1</float>
			<Color3 name="ColorShift_Bottom">4278190080</Color3>
			<Color3 name="ColorShift_Top">4278190080</Color3>
			<Color3 name="FogColor">4290822336</Color3>
			<float name="FogEnd">100000</float>
			<float name="FogStart">0</float>
			<float name="GeographicLatitude">41.7332993</float>
			<bool name="GlobalShadows">true</bool>
			<string name="Name">Lighting</string>
			<Color3 name="OutdoorAmbient">4286611584</Color3>
			<bool name="Outlines">true</bool>
			<Color3 name="ShadowColor">4289967032</Color3>
			<string name="TimeOfDay">14:00:00</string>
		</Properties>
	</Item>
</roblox>